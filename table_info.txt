CREATE TABLE action_change_frozen_info_detail_wizard (
	id SERIAL NOT NULL, 
	wizard_id INTEGER, 
	frozen_id INTEGER NOT NULL, 
	canes_position_id INTEGER, 
	canes_position_index INTEGER, 
	cryotop_id INTEGER NOT NULL, 
	group_embryo_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	position VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT action_change_frozen_info_detail_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT action_change_frozen_info_detail_wizard_canes_position_id_fkey FOREIGN KEY(canes_position_id) REFERENCES medical_canes_position (id) ON DELETE SET NULL, 
	CONSTRAINT action_change_frozen_info_detail_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT action_change_frozen_info_detail_wizard_cryotop_id_fkey FOREIGN KEY(cryotop_id) REFERENCES medical_storage_tool (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_detail_wizard_frozen_id_fkey FOREIGN KEY(frozen_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_detail_wizard_group_embryo_id_fkey FOREIGN KEY(group_embryo_id) REFERENCES medical_group_embryo (id) ON DELETE SET NULL, 
	CONSTRAINT action_change_frozen_info_detail_wizard_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES action_change_frozen_info_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT action_change_frozen_info_detail_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE action_change_frozen_info_wizard (
	id SERIAL NOT NULL, 
	patient_id INTEGER NOT NULL, 
	location_id INTEGER NOT NULL, 
	room_id INTEGER NOT NULL, 
	tank_id INTEGER NOT NULL, 
	canister_id INTEGER NOT NULL, 
	canister_layer_id INTEGER NOT NULL, 
	canister_position_id INTEGER NOT NULL, 
	canes_id INTEGER, 
	cassette_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code_canes VARCHAR NOT NULL, 
	sequence_cryo_container VARCHAR NOT NULL, 
	type_info VARCHAR, 
	is_male BOOLEAN, 
	is_change_position BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT action_change_frozen_info_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT action_change_frozen_info_wizard_canes_id_fkey FOREIGN KEY(canes_id) REFERENCES medical_canes (id) ON DELETE SET NULL, 
	CONSTRAINT action_change_frozen_info_wizard_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_wizard_canister_layer_id_fkey FOREIGN KEY(canister_layer_id) REFERENCES medical_canister_layer (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_wizard_canister_position_id_fkey FOREIGN KEY(canister_position_id) REFERENCES medical_canister_position (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_wizard_cassette_id_fkey FOREIGN KEY(cassette_id) REFERENCES medical_cassette (id) ON DELETE SET NULL, 
	CONSTRAINT action_change_frozen_info_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT action_change_frozen_info_wizard_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_wizard_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_wizard_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_location_room (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_wizard_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE CASCADE, 
	CONSTRAINT action_change_frozen_info_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE action_storage_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	usage VARCHAR, 
	warning_html JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT action_storage_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT action_storage_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT action_storage_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE action_storage_wizard_medical_cryopreserv_straw_rel (
	action_storage_wizard_id INTEGER NOT NULL, 
	medical_cryopreserv_straw_id INTEGER NOT NULL, 
	CONSTRAINT action_storage_wizard_medical_cryopreserv_straw_rel_pkey PRIMARY KEY (action_storage_wizard_id, medical_cryopreserv_straw_id), 
	CONSTRAINT action_storage_wizard_medical_cry_action_storage_wizard_id_fkey FOREIGN KEY(action_storage_wizard_id) REFERENCES action_storage_wizard (id) ON DELETE CASCADE, 
	CONSTRAINT action_storage_wizard_medical_medical_cryopreserv_straw_id_fkey FOREIGN KEY(medical_cryopreserv_straw_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE
)


CREATE TABLE action_update_appointment_follicle_note (
	id SERIAL NOT NULL, 
	appointment_procedure_id INTEGER, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	actual_follicle_qty VARCHAR, 
	after_retrieve_follicle_state VARCHAR, 
	after_retrieve_follicle_qty VARCHAR, 
	note VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT action_update_appointment_follicle_note_pkey PRIMARY KEY (id), 
	CONSTRAINT action_update_appointment_follicl_appointment_procedure_id_fkey FOREIGN KEY(appointment_procedure_id) REFERENCES medical_appointment_procedure (id) ON DELETE SET NULL, 
	CONSTRAINT action_update_appointment_follicle_note_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT action_update_appointment_follicle_note_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT action_update_appointment_follicle_note_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE add_cryostraw_to_renew (
	id SERIAL NOT NULL, 
	renewal_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT add_cryostraw_to_renew_pkey PRIMARY KEY (id), 
	CONSTRAINT add_cryostraw_to_renew_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT add_cryostraw_to_renew_renewal_id_fkey FOREIGN KEY(renewal_id) REFERENCES medical_renewal (id) ON DELETE SET NULL, 
	CONSTRAINT add_cryostraw_to_renew_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE add_cryostraw_to_renew_medical_cryopreserv_straw_rel (
	add_cryostraw_to_renew_id INTEGER NOT NULL, 
	medical_cryopreserv_straw_id INTEGER NOT NULL, 
	CONSTRAINT add_cryostraw_to_renew_medical_cryopreserv_straw_rel_pkey PRIMARY KEY (add_cryostraw_to_renew_id, medical_cryopreserv_straw_id), 
	CONSTRAINT add_cryostraw_to_renew_medica_medical_cryopreserv_straw_id_fkey FOREIGN KEY(medical_cryopreserv_straw_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT add_cryostraw_to_renew_medical_c_add_cryostraw_to_renew_id_fkey FOREIGN KEY(add_cryostraw_to_renew_id) REFERENCES add_cryostraw_to_renew (id) ON DELETE CASCADE
)


CREATE TABLE add_cryostraw_to_renew_renew_cryostraw_group_rel (
	add_cryostraw_to_renew_id INTEGER NOT NULL, 
	renew_cryostraw_group_id INTEGER NOT NULL, 
	CONSTRAINT add_cryostraw_to_renew_renew_cryostraw_group_rel_pkey PRIMARY KEY (add_cryostraw_to_renew_id, renew_cryostraw_group_id), 
	CONSTRAINT add_cryostraw_to_renew_renew_cry_add_cryostraw_to_renew_id_fkey FOREIGN KEY(add_cryostraw_to_renew_id) REFERENCES add_cryostraw_to_renew (id) ON DELETE CASCADE, 
	CONSTRAINT add_cryostraw_to_renew_renew_cryo_renew_cryostraw_group_id_fkey FOREIGN KEY(renew_cryostraw_group_id) REFERENCES renew_cryostraw_group (id) ON DELETE CASCADE
)


CREATE TABLE auth_totp_device (
	id SERIAL NOT NULL, 
	name VARCHAR NOT NULL, 
	user_id INTEGER NOT NULL, 
	scope VARCHAR, 
	index VARCHAR(8), 
	key VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (now() AT TIME ZONE 'utc'::text), 
	CONSTRAINT auth_totp_device_pkey PRIMARY KEY (id), 
	CONSTRAINT auth_totp_device_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id), 
	CONSTRAINT auth_totp_device_index_check CHECK (char_length(index::text) = 8)
)


CREATE TABLE auth_totp_wizard (
	id SERIAL NOT NULL, 
	user_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	secret VARCHAR NOT NULL, 
	url VARCHAR, 
	code VARCHAR(7), 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	qrcode BYTEA, 
	CONSTRAINT auth_totp_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT auth_totp_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT auth_totp_wizard_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT auth_totp_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_document_layout (
	id SERIAL NOT NULL, 
	company_id INTEGER NOT NULL, 
	report_layout_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_document_layout_pkey PRIMARY KEY (id), 
	CONSTRAINT base_document_layout_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE CASCADE, 
	CONSTRAINT base_document_layout_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_document_layout_report_layout_id_fkey FOREIGN KEY(report_layout_id) REFERENCES report_layout (id) ON DELETE SET NULL, 
	CONSTRAINT base_document_layout_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_enable_profiling_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	duration VARCHAR, 
	expiration TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_enable_profiling_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT base_enable_profiling_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_enable_profiling_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_import (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	res_model VARCHAR, 
	file_name VARCHAR, 
	file_type VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	file BYTEA, 
	CONSTRAINT base_import_import_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_import_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_import_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_mapping (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	res_model VARCHAR, 
	column_name VARCHAR, 
	field_name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_mapping_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_mapping_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_mapping_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_char (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_char_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_char_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_char_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_char_noreadonly (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_char_noreadonly_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_char_noreadonly_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_char_noreadonly_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_char_readonly (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_char_readonly_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_char_readonly_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_char_readonly_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_char_required (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_char_required_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_char_required_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_char_required_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_char_states (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_char_states_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_char_states_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_char_states_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_char_stillreadonly (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_char_stillreadonly_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_char_stillreadonly_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_char_stillreadonly_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_complex (
	id SERIAL NOT NULL, 
	currency_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	c VARCHAR, 
	d DATE, 
	m NUMERIC, 
	dt TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	f DOUBLE PRECISION, 
	CONSTRAINT base_import_tests_models_complex_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_complex_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_complex_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_complex_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_float (
	id SERIAL NOT NULL, 
	currency_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value2 NUMERIC, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	value DOUBLE PRECISION, 
	CONSTRAINT base_import_tests_models_float_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_float_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_float_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_float_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_m2o (
	id SERIAL NOT NULL, 
	value INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_m2o_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_m2o_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_m2o_value_fkey FOREIGN KEY(value) REFERENCES base_import_tests_models_m2o_related (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_m2o_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_m2o_related (
	id SERIAL NOT NULL, 
	value INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_m2o_related_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_m2o_related_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_m2o_related_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_m2o_required (
	id SERIAL NOT NULL, 
	value INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_m2o_required_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_m2o_required_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_m2o_required_value_fkey FOREIGN KEY(value) REFERENCES base_import_tests_models_m2o_required_related (id) ON DELETE RESTRICT, 
	CONSTRAINT base_import_tests_models_m2o_required_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_m2o_required_related (
	id SERIAL NOT NULL, 
	value INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_m2o_required_related_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_m2o_required_related_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_m2o_required_related_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_o2m (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_o2m_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_o2m_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_o2m_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_o2m_child (
	id SERIAL NOT NULL, 
	parent_id INTEGER, 
	value INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_o2m_child_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_o2m_child_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_o2m_child_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES base_import_tests_models_o2m (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_o2m_child_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_import_tests_models_preview (
	id SERIAL NOT NULL, 
	somevalue INTEGER NOT NULL, 
	othervalue INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_import_tests_models_preview_pkey PRIMARY KEY (id), 
	CONSTRAINT base_import_tests_models_preview_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_import_tests_models_preview_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_language_export (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	lang VARCHAR NOT NULL, 
	format VARCHAR NOT NULL, 
	state VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	data BYTEA, 
	CONSTRAINT base_language_export_pkey PRIMARY KEY (id), 
	CONSTRAINT base_language_export_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_language_export_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_language_import (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	code VARCHAR(6) NOT NULL, 
	filename VARCHAR NOT NULL, 
	overwrite BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	data BYTEA NOT NULL, 
	CONSTRAINT base_language_import_pkey PRIMARY KEY (id), 
	CONSTRAINT base_language_import_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_language_import_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_language_install (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	overwrite BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_language_install_pkey PRIMARY KEY (id), 
	CONSTRAINT base_language_install_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_language_install_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_module_install_request (
	id SERIAL NOT NULL, 
	module_id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	body_html TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_module_install_request_pkey PRIMARY KEY (id), 
	CONSTRAINT base_module_install_request_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_module_install_request_module_id_fkey FOREIGN KEY(module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT base_module_install_request_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT base_module_install_request_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_module_install_review (
	id SERIAL NOT NULL, 
	module_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_module_install_review_pkey PRIMARY KEY (id), 
	CONSTRAINT base_module_install_review_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_module_install_review_module_id_fkey FOREIGN KEY(module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT base_module_install_review_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_module_uninstall (
	id SERIAL NOT NULL, 
	module_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	show_all BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_module_uninstall_pkey PRIMARY KEY (id), 
	CONSTRAINT base_module_uninstall_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_module_uninstall_module_id_fkey FOREIGN KEY(module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT base_module_uninstall_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_module_update (
	id SERIAL NOT NULL, 
	updated INTEGER, 
	added INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	state VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_module_update_pkey PRIMARY KEY (id), 
	CONSTRAINT base_module_update_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_module_update_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_module_upgrade (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	module_info TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_module_upgrade_pkey PRIMARY KEY (id), 
	CONSTRAINT base_module_upgrade_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_module_upgrade_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_partner_merge_automatic_wizard (
	id SERIAL NOT NULL, 
	number_group INTEGER, 
	current_line_id INTEGER, 
	dst_partner_id INTEGER, 
	maximum_group INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	state VARCHAR NOT NULL, 
	group_by_email BOOLEAN, 
	group_by_name BOOLEAN, 
	group_by_is_company BOOLEAN, 
	group_by_vat BOOLEAN, 
	group_by_parent_id BOOLEAN, 
	exclude_contact BOOLEAN, 
	exclude_journal_item BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_partner_merge_automatic_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT base_partner_merge_automatic_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_partner_merge_automatic_wizard_current_line_id_fkey FOREIGN KEY(current_line_id) REFERENCES base_partner_merge_line (id) ON DELETE SET NULL, 
	CONSTRAINT base_partner_merge_automatic_wizard_dst_partner_id_fkey FOREIGN KEY(dst_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT base_partner_merge_automatic_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE base_partner_merge_automatic_wizard_res_partner_rel (
	base_partner_merge_automatic_wizard_id INTEGER NOT NULL, 
	res_partner_id INTEGER NOT NULL, 
	CONSTRAINT base_partner_merge_automatic_wizard_res_partner_rel_pkey PRIMARY KEY (base_partner_merge_automatic_wizard_id, res_partner_id), 
	CONSTRAINT base_partner_merge_automatic__base_partner_merge_automatic_fkey FOREIGN KEY(base_partner_merge_automatic_wizard_id) REFERENCES base_partner_merge_automatic_wizard (id) ON DELETE CASCADE, 
	CONSTRAINT base_partner_merge_automatic_wizard_res_par_res_partner_id_fkey FOREIGN KEY(res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE
)


CREATE TABLE base_partner_merge_line (
	id SERIAL NOT NULL, 
	wizard_id INTEGER, 
	min_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	aggr_ids VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT base_partner_merge_line_pkey PRIMARY KEY (id), 
	CONSTRAINT base_partner_merge_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT base_partner_merge_line_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES base_partner_merge_automatic_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT base_partner_merge_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE bus_bus (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	channel VARCHAR, 
	message VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT bus_bus_pkey PRIMARY KEY (id), 
	CONSTRAINT bus_bus_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT bus_bus_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE bus_presence (
	id SERIAL NOT NULL, 
	user_id INTEGER, 
	status VARCHAR, 
	last_poll TIMESTAMP WITHOUT TIME ZONE, 
	last_presence TIMESTAMP WITHOUT TIME ZONE, 
	guest_id INTEGER, 
	CONSTRAINT bus_presence_pkey PRIMARY KEY (id), 
	CONSTRAINT bus_presence_guest_id_fkey FOREIGN KEY(guest_id) REFERENCES mail_guest (id) ON DELETE CASCADE, 
	CONSTRAINT bus_presence_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT bus_presence_partner_or_guest_exists CHECK (user_id IS NOT NULL AND guest_id IS NULL OR user_id IS NULL AND guest_id IS NOT NULL)
)


CREATE TABLE cancel_thawing_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	reason VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT cancel_thawing_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT cancel_thawing_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT cancel_thawing_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE canes_patient_rel (
	cane_id INTEGER NOT NULL, 
	patient_id INTEGER NOT NULL, 
	CONSTRAINT canes_patient_rel_pkey PRIMARY KEY (cane_id, patient_id), 
	CONSTRAINT canes_patient_rel_cane_id_fkey FOREIGN KEY(cane_id) REFERENCES medical_canes (id) ON DELETE CASCADE, 
	CONSTRAINT canes_patient_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE
)


CREATE TABLE canister_pos_patient_rel (
	medical_canister_position_id INTEGER NOT NULL, 
	medical_patient_id INTEGER NOT NULL, 
	CONSTRAINT canister_pos_patient_rel_pkey PRIMARY KEY (medical_canister_position_id, medical_patient_id), 
	CONSTRAINT canister_pos_patient_rel_medical_canister_position_id_fkey FOREIGN KEY(medical_canister_position_id) REFERENCES medical_canister_position (id) ON DELETE CASCADE, 
	CONSTRAINT canister_pos_patient_rel_medical_patient_id_fkey FOREIGN KEY(medical_patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE
)


CREATE TABLE cervical_record_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT cervical_record_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT cervical_record_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT cervical_record_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE cervical_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT cervical_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT cervical_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT cervical_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE change_password_own (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	new_password VARCHAR, 
	confirm_password VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT change_password_own_pkey PRIMARY KEY (id), 
	CONSTRAINT change_password_own_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT change_password_own_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE change_password_user (
	id SERIAL NOT NULL, 
	wizard_id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	user_login VARCHAR, 
	new_passwd VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT change_password_user_pkey PRIMARY KEY (id), 
	CONSTRAINT change_password_user_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT change_password_user_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT change_password_user_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES change_password_wizard (id) ON DELETE CASCADE, 
	CONSTRAINT change_password_user_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE change_password_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT change_password_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT change_password_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT change_password_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE check_sperm_donate_history (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	patient_reference VARCHAR NOT NULL, 
	result VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT check_sperm_donate_history_pkey PRIMARY KEY (id), 
	CONSTRAINT check_sperm_donate_history_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT check_sperm_donate_history_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT check_sperm_donate_history_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE connection_setting (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	sequence INTEGER, 
	port INTEGER NOT NULL, 
	max_attempts INTEGER, 
	sleep_time INTEGER, 
	limit_record INTEGER, 
	user_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	host VARCHAR NOT NULL, 
	database VARCHAR NOT NULL, 
	login VARCHAR NOT NULL, 
	password VARCHAR, 
	login_handler VARCHAR, 
	main_handler VARCHAR, 
	https_user VARCHAR, 
	https_password VARCHAR, 
	last_check VARCHAR, 
	remote_uid VARCHAR, 
	environment VARCHAR NOT NULL, 
	note TEXT, 
	active BOOLEAN, 
	is_https BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT connection_setting_pkey PRIMARY KEY (id), 
	CONSTRAINT connection_setting_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT connection_setting_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT connection_setting_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT connection_setting_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT connection_setting_uniq_url_db_login UNIQUE (host, port, database, login)
)


CREATE TABLE date_or (
	id BIGINT, 
	date_or_str TEXT, 
	date_or DATE, 
	patient_id INTEGER, 
	type VARCHAR
)


CREATE TABLE date_sperm (
	id BIGINT, 
	date_sperm_str TEXT, 
	date_sperm DATE, 
	patient_id INTEGER, 
	type VARCHAR
)


CREATE TABLE decimal_precision (
	id SERIAL NOT NULL, 
	digits INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT decimal_precision_pkey PRIMARY KEY (id), 
	CONSTRAINT decimal_precision_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT decimal_precision_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT decimal_precision_name_uniq UNIQUE (name)
)


CREATE TABLE detail_frozen_culture_rel (
	detail_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT detail_frozen_culture_rel_pkey PRIMARY KEY (detail_id, culture_id), 
	CONSTRAINT detail_frozen_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT detail_frozen_culture_rel_detail_id_fkey FOREIGN KEY(detail_id) REFERENCES medical_detail_embryo_frozen (id) ON DELETE CASCADE
)


CREATE TABLE docx_template (
	id SERIAL NOT NULL, 
	header_id INTEGER, 
	model_id INTEGER, 
	report_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	type VARCHAR NOT NULL, 
	docx_template_name VARCHAR, 
	module VARCHAR, 
	docx_template_path VARCHAR, 
	print_report_name VARCHAR, 
	format_output VARCHAR NOT NULL, 
	sheet_template VARCHAR, 
	function VARCHAR, 
	sheet_data_ranges JSONB, 
	use_header BOOLEAN, 
	is_publish BOOLEAN, 
	multi_in_one BOOLEAN, 
	ignore_template BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT docx_template_pkey PRIMARY KEY (id), 
	CONSTRAINT docx_template_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT docx_template_header_id_fkey FOREIGN KEY(header_id) REFERENCES docx_template (id) ON DELETE SET NULL, 
	CONSTRAINT docx_template_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT docx_template_report_id_fkey FOREIGN KEY(report_id) REFERENCES ir_act_report_xml (id) ON DELETE SET NULL, 
	CONSTRAINT docx_template_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE docx_template_image (
	id SERIAL NOT NULL, 
	docx_template_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	image_name VARCHAR, 
	field_name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	width DOUBLE PRECISION, 
	height DOUBLE PRECISION, 
	CONSTRAINT docx_template_image_pkey PRIMARY KEY (id), 
	CONSTRAINT docx_template_image_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT docx_template_image_docx_template_id_fkey FOREIGN KEY(docx_template_id) REFERENCES docx_template (id) ON DELETE RESTRICT, 
	CONSTRAINT docx_template_image_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE drug_fsh_value_rel (
	treatment_id INTEGER NOT NULL, 
	value_id INTEGER NOT NULL, 
	CONSTRAINT drug_fsh_value_rel_pkey PRIMARY KEY (treatment_id, value_id), 
	CONSTRAINT drug_fsh_value_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT drug_fsh_value_rel_value_id_fkey FOREIGN KEY(value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE education_certificate (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT education_certificate_pkey PRIMARY KEY (id), 
	CONSTRAINT education_certificate_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT education_certificate_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE egg_donor_patient_rel (
	medical_treatment_id INTEGER NOT NULL, 
	medical_patient_id INTEGER NOT NULL, 
	CONSTRAINT egg_donor_patient_rel_pkey PRIMARY KEY (medical_treatment_id, medical_patient_id), 
	CONSTRAINT egg_donor_patient_rel_medical_patient_id_fkey FOREIGN KEY(medical_patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT egg_donor_patient_rel_medical_treatment_id_fkey FOREIGN KEY(medical_treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE email_template_attachment_rel (
	email_template_id INTEGER NOT NULL, 
	attachment_id INTEGER NOT NULL, 
	CONSTRAINT email_template_attachment_rel_pkey PRIMARY KEY (email_template_id, attachment_id), 
	CONSTRAINT email_template_attachment_rel_attachment_id_fkey FOREIGN KEY(attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE, 
	CONSTRAINT email_template_attachment_rel_email_template_id_fkey FOREIGN KEY(email_template_id) REFERENCES mail_template (id) ON DELETE CASCADE
)


CREATE TABLE employee_category_rel (
	emp_id INTEGER NOT NULL, 
	category_id INTEGER NOT NULL, 
	CONSTRAINT employee_category_rel_pkey PRIMARY KEY (emp_id, category_id), 
	CONSTRAINT employee_category_rel_category_id_fkey FOREIGN KEY(category_id) REFERENCES hr_employee_category (id) ON DELETE CASCADE, 
	CONSTRAINT employee_category_rel_emp_id_fkey FOREIGN KEY(emp_id) REFERENCES hr_employee (id) ON DELETE CASCADE
)


CREATE TABLE employee_hr_department_line_rel (
	line_department_id INTEGER NOT NULL, 
	employee_id INTEGER NOT NULL, 
	CONSTRAINT employee_hr_department_line_rel_pkey PRIMARY KEY (line_department_id, employee_id), 
	CONSTRAINT employee_hr_department_line_rel_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE CASCADE, 
	CONSTRAINT employee_hr_department_line_rel_line_department_id_fkey FOREIGN KEY(line_department_id) REFERENCES medical_hr_department_line (id) ON DELETE CASCADE
)


CREATE TABLE enviroment_range (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT enviroment_range_pkey PRIMARY KEY (id), 
	CONSTRAINT enviroment_range_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT enviroment_range_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE fetchmail_server (
	id SERIAL NOT NULL, 
	port INTEGER, 
	object_id INTEGER, 
	priority INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	state VARCHAR, 
	server VARCHAR, 
	server_type VARCHAR NOT NULL, 
	"user" VARCHAR, 
	password VARCHAR, 
	script VARCHAR, 
	configuration TEXT, 
	active BOOLEAN, 
	is_ssl BOOLEAN, 
	attach BOOLEAN, 
	original BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	google_gmail_access_token_expiration INTEGER, 
	google_gmail_authorization_code VARCHAR, 
	google_gmail_refresh_token VARCHAR, 
	google_gmail_access_token VARCHAR, 
	CONSTRAINT fetchmail_server_pkey PRIMARY KEY (id), 
	CONSTRAINT fetchmail_server_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT fetchmail_server_object_id_fkey FOREIGN KEY(object_id) REFERENCES ir_model (id) ON DELETE SET NULL, 
	CONSTRAINT fetchmail_server_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE finger_name (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	position VARCHAR, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT finger_name_pkey PRIMARY KEY (id), 
	CONSTRAINT finger_name_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT finger_name_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE follow_follicular_cryopreserv_straw_relation (
	follicular_id INTEGER NOT NULL, 
	cryopreserv_id INTEGER NOT NULL, 
	CONSTRAINT follow_follicular_cryopreserv_straw_relation_pkey PRIMARY KEY (follicular_id, cryopreserv_id), 
	CONSTRAINT follow_follicular_cryopreserv_straw_relatio_cryopreserv_id_fkey FOREIGN KEY(cryopreserv_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT follow_follicular_cryopreserv_straw_relation_follicular_id_fkey FOREIGN KEY(follicular_id) REFERENCES medical_follow_follicular (id) ON DELETE CASCADE
)


CREATE TABLE follow_follicular_cryopreserv_straw_relation_2 (
	follicular_id INTEGER NOT NULL, 
	cryopreserv_id INTEGER NOT NULL, 
	CONSTRAINT follow_follicular_cryopreserv_straw_relation_2_pkey PRIMARY KEY (follicular_id, cryopreserv_id), 
	CONSTRAINT follow_follicular_cryopreserv_straw_relati_cryopreserv_id_fkey1 FOREIGN KEY(cryopreserv_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT follow_follicular_cryopreserv_straw_relatio_follicular_id_fkey1 FOREIGN KEY(follicular_id) REFERENCES medical_follow_follicular (id) ON DELETE CASCADE
)


CREATE TABLE freezing_code (
	freezing_code VARCHAR, 
	id BIGINT, 
	date_or DATE, 
	patient_id INTEGER, 
	type VARCHAR
)


CREATE TABLE freezing_embryo_value_rel (
	freezing_id INTEGER NOT NULL, 
	value_id INTEGER NOT NULL, 
	CONSTRAINT freezing_embryo_value_rel_pkey PRIMARY KEY (freezing_id, value_id), 
	CONSTRAINT freezing_embryo_value_rel_freezing_id_fkey FOREIGN KEY(freezing_id) REFERENCES medical_storage_process (id) ON DELETE CASCADE, 
	CONSTRAINT freezing_embryo_value_rel_value_id_fkey FOREIGN KEY(value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE freezing_sperm_value_rel (
	freezing_id INTEGER NOT NULL, 
	value_id INTEGER NOT NULL, 
	CONSTRAINT freezing_sperm_value_rel_pkey PRIMARY KEY (freezing_id, value_id), 
	CONSTRAINT freezing_sperm_value_rel_freezing_id_fkey FOREIGN KEY(freezing_id) REFERENCES medical_storage_process (id) ON DELETE CASCADE, 
	CONSTRAINT freezing_sperm_value_rel_value_id_fkey FOREIGN KEY(value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE frozen_process_detail_wizard (
	id SERIAL NOT NULL, 
	processing_id INTEGER NOT NULL, 
	canes_position_id INTEGER, 
	canes_position_index INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	position VARCHAR NOT NULL, 
	volume VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT frozen_process_detail_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT frozen_process_detail_wizard_canes_position_id_fkey FOREIGN KEY(canes_position_id) REFERENCES medical_canes_position (id) ON DELETE SET NULL, 
	CONSTRAINT frozen_process_detail_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT frozen_process_detail_wizard_processing_id_fkey FOREIGN KEY(processing_id) REFERENCES process_storage_popup (id) ON DELETE RESTRICT, 
	CONSTRAINT frozen_process_detail_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE gestational_carrier_patient_rel (
	medical_treatment_id INTEGER NOT NULL, 
	medical_patient_id INTEGER NOT NULL, 
	CONSTRAINT gestational_carrier_patient_rel_pkey PRIMARY KEY (medical_treatment_id, medical_patient_id), 
	CONSTRAINT gestational_carrier_patient_rel_medical_patient_id_fkey FOREIGN KEY(medical_patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT gestational_carrier_patient_rel_medical_treatment_id_fkey FOREIGN KEY(medical_treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE has_exually_transmitted_record_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_exually_transmitted_record_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_exually_transmitted_record_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT has_exually_transmitted_record_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_exually_transmitted_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_exually_transmitted_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_exually_transmitted_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT has_exually_transmitted_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_male_surgery_record_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_male_surgery_record_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_male_surgery_record_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT has_male_surgery_record_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_male_surgery_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_male_surgery_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_male_surgery_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT has_male_surgery_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_medical_disease_patient_record_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_medical_disease_patient_record_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_medical_disease_patient_record_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT has_medical_disease_patient_record_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_medical_disease_patient_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_medical_disease_patient_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_medical_disease_patient_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT has_medical_disease_patient_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_method_treat_record_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_method_treat_record_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_method_treat_record_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT has_method_treat_record_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_method_treat_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_method_treat_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_method_treat_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT has_method_treat_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_systemic_disease_record_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_systemic_disease_record_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_systemic_disease_record_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT has_systemic_disease_record_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE has_systemic_disease_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT has_systemic_disease_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT has_systemic_disease_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT has_systemic_disease_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE hierarchy_selection_model (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	internal_group VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	note TEXT, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hierarchy_selection_model_pkey PRIMARY KEY (id), 
	CONSTRAINT hierarchy_selection_model_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hierarchy_selection_model_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hierarchy_selection_model_code_uniq UNIQUE (code, internal_group)
)


CREATE TABLE history_culture_embryo_position_rel (
	position_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT history_culture_embryo_position_rel_pkey PRIMARY KEY (position_id, culture_id), 
	CONSTRAINT history_culture_embryo_position_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT history_culture_embryo_position_rel_position_id_fkey FOREIGN KEY(position_id) REFERENCES medical_canes_position (id) ON DELETE CASCADE
)


CREATE TABLE history_medical_treatment_iui (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	regimen VARCHAR, 
	result VARCHAR, 
	date_iui DATE, 
	fsh TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT history_medical_treatment_iui_pkey PRIMARY KEY (id), 
	CONSTRAINT history_medical_treatment_iui_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT history_medical_treatment_iui_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT history_medical_treatment_iui_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE history_medical_treatment_ivf (
	id SERIAL NOT NULL, 
	history_treatment_id INTEGER, 
	treatment_id INTEGER, 
	sequence INTEGER, 
	number_of_oocyte INTEGER, 
	number_of_frozen_embryo INTEGER, 
	number_of_embryo_day_2 INTEGER, 
	number_of_embryo_day_3 INTEGER, 
	number_of_embryo_day_5 INTEGER, 
	number_of_embryo_day_6 INTEGER, 
	number_transfer_embryo INTEGER, 
	number_embryo INTEGER, 
	number_embryo_frozen INTEGER, 
	number_of_pregnancies INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	regimen VARCHAR, 
	e2_hcg VARCHAR, 
	number_of_embryo VARCHAR, 
	fsh TEXT, 
	date_aspiration TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT history_medical_treatment_ivf_pkey PRIMARY KEY (id), 
	CONSTRAINT history_medical_treatment_ivf_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT history_medical_treatment_ivf_history_treatment_id_fkey FOREIGN KEY(history_treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT history_medical_treatment_ivf_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT history_medical_treatment_ivf_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE homepage_adver (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	advertisement_text VARCHAR, 
	from_date DATE, 
	to_date DATE, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT homepage_adver_pkey PRIMARY KEY (id), 
	CONSTRAINT homepage_adver_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT homepage_adver_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_contract_type (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_contract_type_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_contract_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_contract_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_department (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	company_id INTEGER, 
	parent_id INTEGER, 
	manager_id INTEGER, 
	color INTEGER, 
	master_department_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	complete_name VARCHAR, 
	parent_path VARCHAR, 
	note TEXT, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_department_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_department_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT hr_department_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_department_manager_id_fkey FOREIGN KEY(manager_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT hr_department_master_department_id_fkey FOREIGN KEY(master_department_id) REFERENCES hr_department (id) ON DELETE SET NULL, 
	CONSTRAINT hr_department_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT hr_department_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES hr_department (id) ON DELETE SET NULL, 
	CONSTRAINT hr_department_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_department_mail_channel_rel (
	mail_channel_id INTEGER NOT NULL, 
	hr_department_id INTEGER NOT NULL, 
	CONSTRAINT hr_department_mail_channel_rel_pkey PRIMARY KEY (mail_channel_id, hr_department_id), 
	CONSTRAINT hr_department_mail_channel_rel_hr_department_id_fkey FOREIGN KEY(hr_department_id) REFERENCES hr_department (id) ON DELETE CASCADE, 
	CONSTRAINT hr_department_mail_channel_rel_mail_channel_id_fkey FOREIGN KEY(mail_channel_id) REFERENCES mail_channel (id) ON DELETE CASCADE
)


CREATE TABLE hr_departure_reason (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_departure_reason_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_departure_reason_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_departure_reason_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_departure_wizard (
	id SERIAL NOT NULL, 
	departure_reason_id INTEGER NOT NULL, 
	employee_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	departure_date DATE NOT NULL, 
	departure_description TEXT, 
	archive_private_address BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_departure_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_departure_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_departure_wizard_departure_reason_id_fkey FOREIGN KEY(departure_reason_id) REFERENCES hr_departure_reason (id) ON DELETE CASCADE, 
	CONSTRAINT hr_departure_wizard_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE CASCADE, 
	CONSTRAINT hr_departure_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_employee (
	id SERIAL NOT NULL, 
	resource_id INTEGER NOT NULL, 
	company_id INTEGER NOT NULL, 
	resource_calendar_id INTEGER, 
	message_main_attachment_id INTEGER, 
	color INTEGER, 
	department_id INTEGER, 
	job_id INTEGER, 
	address_id INTEGER, 
	work_contact_id INTEGER, 
	work_location_id INTEGER, 
	user_id INTEGER, 
	parent_id INTEGER, 
	coach_id INTEGER, 
	address_home_id INTEGER, 
	country_id INTEGER, 
	children INTEGER, 
	country_of_birth INTEGER, 
	bank_account_id INTEGER, 
	km_home_work INTEGER, 
	departure_reason_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	job_title VARCHAR, 
	work_phone VARCHAR, 
	mobile_phone VARCHAR, 
	work_email VARCHAR, 
	employee_type VARCHAR NOT NULL, 
	gender VARCHAR, 
	marital VARCHAR, 
	spouse_complete_name VARCHAR, 
	place_of_birth VARCHAR, 
	ssnid VARCHAR, 
	sinid VARCHAR, 
	identification_id VARCHAR, 
	passport_id VARCHAR, 
	permit_no VARCHAR, 
	visa_no VARCHAR, 
	certificate VARCHAR, 
	study_field VARCHAR, 
	study_school VARCHAR, 
	emergency_contact VARCHAR, 
	emergency_phone VARCHAR, 
	barcode VARCHAR, 
	pin VARCHAR, 
	spouse_birthdate DATE, 
	birthday DATE, 
	visa_expire DATE, 
	work_permit_expiration_date DATE, 
	departure_date DATE, 
	additional_note TEXT, 
	notes TEXT, 
	departure_description TEXT, 
	active BOOLEAN, 
	work_permit_scheduled_activity BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	short_name VARCHAR, 
	CONSTRAINT hr_employee_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_employee_address_home_id_fkey FOREIGN KEY(address_home_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_address_id_fkey FOREIGN KEY(address_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_bank_account_id_fkey FOREIGN KEY(bank_account_id) REFERENCES res_partner_bank (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_coach_id_fkey FOREIGN KEY(coach_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_country_of_birth_fkey FOREIGN KEY(country_of_birth) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_department_id_fkey FOREIGN KEY(department_id) REFERENCES hr_department (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_departure_reason_id_fkey FOREIGN KEY(departure_reason_id) REFERENCES hr_departure_reason (id) ON DELETE RESTRICT, 
	CONSTRAINT hr_employee_job_id_fkey FOREIGN KEY(job_id) REFERENCES hr_job (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_resource_calendar_id_fkey FOREIGN KEY(resource_calendar_id) REFERENCES resource_calendar (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_resource_id_fkey FOREIGN KEY(resource_id) REFERENCES resource_resource (id) ON DELETE RESTRICT, 
	CONSTRAINT hr_employee_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_work_contact_id_fkey FOREIGN KEY(work_contact_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_work_location_id_fkey FOREIGN KEY(work_location_id) REFERENCES hr_work_location (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_barcode_uniq UNIQUE (barcode), 
	CONSTRAINT hr_employee_user_uniq UNIQUE (user_id, company_id)
)


CREATE TABLE hr_employee_category (
	id SERIAL NOT NULL, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_employee_category_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_employee_category_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_category_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_employee_category_name_uniq UNIQUE (name)
)


CREATE TABLE hr_employee_hr_plan_wizard_rel (
	employee_id INTEGER NOT NULL, 
	plan_wizard_id INTEGER NOT NULL, 
	CONSTRAINT hr_employee_hr_plan_wizard_rel_pkey PRIMARY KEY (employee_id, plan_wizard_id), 
	CONSTRAINT hr_employee_hr_plan_wizard_rel_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_plan_wizard (id) ON DELETE CASCADE, 
	CONSTRAINT hr_employee_hr_plan_wizard_rel_plan_wizard_id_fkey FOREIGN KEY(plan_wizard_id) REFERENCES hr_employee (id) ON DELETE CASCADE
)


CREATE TABLE hr_employee_public (
	name VARCHAR, 
	active BOOLEAN, 
	color INTEGER, 
	department_id INTEGER, 
	job_id INTEGER, 
	job_title VARCHAR, 
	company_id INTEGER, 
	address_id INTEGER, 
	work_phone VARCHAR, 
	mobile_phone VARCHAR, 
	work_email VARCHAR, 
	work_contact_id INTEGER, 
	work_location_id INTEGER, 
	user_id INTEGER, 
	resource_id INTEGER, 
	resource_calendar_id INTEGER, 
	parent_id INTEGER, 
	coach_id INTEGER, 
	employee_type VARCHAR, 
	short_name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	write_date TIMESTAMP WITHOUT TIME ZONE
)


CREATE TABLE hr_job (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	sequence INTEGER, 
	expected_employees INTEGER, 
	no_of_employee INTEGER, 
	no_of_recruitment INTEGER, 
	no_of_hired_employee INTEGER, 
	department_id INTEGER, 
	company_id INTEGER, 
	contract_type_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	description TEXT, 
	requirements TEXT, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_job_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_job_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT hr_job_contract_type_id_fkey FOREIGN KEY(contract_type_id) REFERENCES hr_contract_type (id) ON DELETE SET NULL, 
	CONSTRAINT hr_job_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_job_department_id_fkey FOREIGN KEY(department_id) REFERENCES hr_department (id) ON DELETE SET NULL, 
	CONSTRAINT hr_job_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT hr_job_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_job_name_company_uniq UNIQUE (name, company_id, department_id), 
	CONSTRAINT hr_job_no_of_recruitment_positive CHECK (no_of_recruitment >= 0)
)


CREATE TABLE hr_plan (
	id SERIAL NOT NULL, 
	company_id INTEGER, 
	department_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_plan_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_plan_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_department_id_fkey FOREIGN KEY(department_id) REFERENCES hr_department (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_plan_activity_type (
	id SERIAL NOT NULL, 
	company_id INTEGER, 
	activity_type_id INTEGER, 
	responsible_id INTEGER, 
	plan_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	summary VARCHAR, 
	responsible VARCHAR NOT NULL, 
	note TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_plan_activity_type_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_plan_activity_type_activity_type_id_fkey FOREIGN KEY(activity_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT, 
	CONSTRAINT hr_plan_activity_type_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_activity_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_activity_type_plan_id_fkey FOREIGN KEY(plan_id) REFERENCES hr_plan (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_activity_type_responsible_id_fkey FOREIGN KEY(responsible_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_activity_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_plan_wizard (
	id SERIAL NOT NULL, 
	plan_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_plan_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_plan_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_wizard_plan_id_fkey FOREIGN KEY(plan_id) REFERENCES hr_plan (id) ON DELETE SET NULL, 
	CONSTRAINT hr_plan_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE hr_work_location (
	id SERIAL NOT NULL, 
	company_id INTEGER NOT NULL, 
	address_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	location_number VARCHAR, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT hr_work_location_pkey PRIMARY KEY (id), 
	CONSTRAINT hr_work_location_address_id_fkey FOREIGN KEY(address_id) REFERENCES res_partner (id) ON DELETE RESTRICT, 
	CONSTRAINT hr_work_location_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT hr_work_location_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT hr_work_location_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE iap_account (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	service_name VARCHAR, 
	account_token VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT iap_account_pkey PRIMARY KEY (id), 
	CONSTRAINT iap_account_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT iap_account_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE iap_account_res_company_rel (
	iap_account_id INTEGER NOT NULL, 
	res_company_id INTEGER NOT NULL, 
	CONSTRAINT iap_account_res_company_rel_pkey PRIMARY KEY (iap_account_id, res_company_id), 
	CONSTRAINT iap_account_res_company_rel_iap_account_id_fkey FOREIGN KEY(iap_account_id) REFERENCES iap_account (id) ON DELETE CASCADE, 
	CONSTRAINT iap_account_res_company_rel_res_company_id_fkey FOREIGN KEY(res_company_id) REFERENCES res_company (id) ON DELETE CASCADE
)


CREATE TABLE ims_board (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ims_board_pkey PRIMARY KEY (id), 
	CONSTRAINT ims_board_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ims_board_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_act_client (
	id SERIAL NOT NULL, 
	binding_model_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	binding_type VARCHAR NOT NULL, 
	binding_view_types VARCHAR, 
	name JSONB NOT NULL, 
	help JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	tag VARCHAR NOT NULL, 
	target VARCHAR, 
	res_model VARCHAR, 
	context VARCHAR NOT NULL, 
	params_store BYTEA, 
	CONSTRAINT ir_act_client_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_act_client_binding_model_id_fkey FOREIGN KEY(binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_client_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_client_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_act_report_xml (
	id SERIAL NOT NULL, 
	binding_model_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	binding_type VARCHAR NOT NULL, 
	binding_view_types VARCHAR, 
	name JSONB NOT NULL, 
	help JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	paperformat_id INTEGER, 
	model VARCHAR NOT NULL, 
	report_type VARCHAR NOT NULL, 
	report_name VARCHAR NOT NULL, 
	report_file VARCHAR, 
	attachment VARCHAR, 
	print_report_name JSONB, 
	multi BOOLEAN, 
	attachment_use BOOLEAN, 
	docxtpl_id INTEGER, 
	administrative_form BOOLEAN, 
	CONSTRAINT ir_act_report_xml_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_act_report_xml_binding_model_id_fkey FOREIGN KEY(binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_report_xml_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_report_xml_docxtpl_id_fkey FOREIGN KEY(docxtpl_id) REFERENCES docx_template (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_report_xml_paperformat_id_fkey FOREIGN KEY(paperformat_id) REFERENCES report_paperformat (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_report_xml_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_act_server (
	id SERIAL NOT NULL, 
	binding_model_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	binding_type VARCHAR NOT NULL, 
	binding_view_types VARCHAR, 
	name JSONB NOT NULL, 
	help JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	sequence INTEGER, 
	model_id INTEGER NOT NULL, 
	crud_model_id INTEGER, 
	link_field_id INTEGER, 
	usage VARCHAR NOT NULL, 
	state VARCHAR NOT NULL, 
	model_name VARCHAR, 
	code TEXT, 
	template_id INTEGER, 
	activity_type_id INTEGER, 
	activity_date_deadline_range INTEGER, 
	activity_user_id INTEGER, 
	mail_post_method VARCHAR, 
	activity_summary VARCHAR, 
	activity_date_deadline_range_type VARCHAR, 
	activity_user_type VARCHAR, 
	activity_user_field_name VARCHAR, 
	activity_note TEXT, 
	mail_post_autofollow BOOLEAN, 
	sms_template_id INTEGER, 
	sms_method VARCHAR, 
	CONSTRAINT ir_act_server_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_act_server_activity_type_id_fkey FOREIGN KEY(activity_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT, 
	CONSTRAINT ir_act_server_activity_user_id_fkey FOREIGN KEY(activity_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_server_binding_model_id_fkey FOREIGN KEY(binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_server_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_server_crud_model_id_fkey FOREIGN KEY(crud_model_id) REFERENCES ir_model (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_server_link_field_id_fkey FOREIGN KEY(link_field_id) REFERENCES ir_model_fields (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_server_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_server_sms_template_id_fkey FOREIGN KEY(sms_template_id) REFERENCES sms_template (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_server_template_id_fkey FOREIGN KEY(template_id) REFERENCES mail_template (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_server_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_act_server_group_rel (
	act_id INTEGER NOT NULL, 
	gid INTEGER NOT NULL, 
	CONSTRAINT ir_act_server_group_rel_pkey PRIMARY KEY (act_id, gid), 
	CONSTRAINT ir_act_server_group_rel_act_id_fkey FOREIGN KEY(act_id) REFERENCES ir_act_server (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_server_group_rel_gid_fkey FOREIGN KEY(gid) REFERENCES res_groups (id) ON DELETE CASCADE
)


CREATE TABLE ir_act_server_res_partner_rel (
	ir_act_server_id INTEGER NOT NULL, 
	res_partner_id INTEGER NOT NULL, 
	CONSTRAINT ir_act_server_res_partner_rel_pkey PRIMARY KEY (ir_act_server_id, res_partner_id), 
	CONSTRAINT ir_act_server_res_partner_rel_ir_act_server_id_fkey FOREIGN KEY(ir_act_server_id) REFERENCES ir_act_server (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_server_res_partner_rel_res_partner_id_fkey FOREIGN KEY(res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE
)


CREATE TABLE ir_act_url (
	id SERIAL NOT NULL, 
	binding_model_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	binding_type VARCHAR NOT NULL, 
	binding_view_types VARCHAR, 
	name JSONB NOT NULL, 
	help JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	target VARCHAR NOT NULL, 
	url TEXT NOT NULL, 
	CONSTRAINT ir_act_url_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_act_url_binding_model_id_fkey FOREIGN KEY(binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_url_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_url_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_act_window (
	id SERIAL NOT NULL, 
	binding_model_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	binding_type VARCHAR NOT NULL, 
	binding_view_types VARCHAR, 
	name JSONB NOT NULL, 
	help JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	view_id INTEGER, 
	res_id INTEGER, 
	"limit" INTEGER, 
	search_view_id INTEGER, 
	domain VARCHAR, 
	context VARCHAR NOT NULL, 
	res_model VARCHAR NOT NULL, 
	target VARCHAR, 
	view_mode VARCHAR NOT NULL, 
	usage VARCHAR, 
	filter BOOLEAN, 
	CONSTRAINT ir_act_window_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_act_window_binding_model_id_fkey FOREIGN KEY(binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_window_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_window_search_view_id_fkey FOREIGN KEY(search_view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_window_view_id_fkey FOREIGN KEY(view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_window_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_act_window_group_rel (
	act_id INTEGER NOT NULL, 
	gid INTEGER NOT NULL, 
	CONSTRAINT ir_act_window_group_rel_pkey PRIMARY KEY (act_id, gid), 
	CONSTRAINT ir_act_window_group_rel_act_id_fkey FOREIGN KEY(act_id) REFERENCES ir_act_window (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_window_group_rel_gid_fkey FOREIGN KEY(gid) REFERENCES res_groups (id) ON DELETE CASCADE
)


CREATE TABLE ir_act_window_view (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	view_id INTEGER, 
	act_window_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	view_mode VARCHAR NOT NULL, 
	multi BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_act_window_view_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_act_window_view_act_window_id_fkey FOREIGN KEY(act_window_id) REFERENCES ir_act_window (id) ON DELETE CASCADE, 
	CONSTRAINT ir_act_window_view_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_window_view_view_id_fkey FOREIGN KEY(view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL, 
	CONSTRAINT ir_act_window_view_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_actions (
	id SERIAL NOT NULL, 
	binding_model_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	binding_type VARCHAR NOT NULL, 
	binding_view_types VARCHAR, 
	name JSONB NOT NULL, 
	help JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_actions_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_actions_binding_model_id_fkey FOREIGN KEY(binding_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_actions_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_actions_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_actions_todo (
	id SERIAL NOT NULL, 
	action_id INTEGER NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	state VARCHAR NOT NULL, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_actions_todo_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_actions_todo_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_actions_todo_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_asset (
	id SERIAL NOT NULL, 
	sequence INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	bundle VARCHAR NOT NULL, 
	directive VARCHAR, 
	path VARCHAR NOT NULL, 
	target VARCHAR, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_asset_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_asset_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_asset_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_attachment (
	id SERIAL NOT NULL, 
	res_id INTEGER, 
	company_id INTEGER, 
	file_size INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	res_model VARCHAR, 
	res_field VARCHAR, 
	type VARCHAR NOT NULL, 
	url VARCHAR(1024), 
	access_token VARCHAR, 
	store_fname VARCHAR, 
	checksum VARCHAR(40), 
	mimetype VARCHAR, 
	description TEXT, 
	index_content TEXT, 
	public BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	db_datas BYTEA, 
	original_id INTEGER, 
	CONSTRAINT ir_attachment_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_attachment_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT ir_attachment_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_attachment_original_id_fkey FOREIGN KEY(original_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT ir_attachment_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_attachment_medical_image_embryo_upload_wizard_rel (
	medical_image_embryo_upload_wizard_id INTEGER NOT NULL, 
	ir_attachment_id INTEGER NOT NULL, 
	CONSTRAINT ir_attachment_medical_image_embryo_upload_wizard_rel_pkey PRIMARY KEY (medical_image_embryo_upload_wizard_id, ir_attachment_id), 
	CONSTRAINT ir_attachment_medical_image_e_medical_image_embryo_upload__fkey FOREIGN KEY(medical_image_embryo_upload_wizard_id) REFERENCES medical_image_embryo_upload_wizard (id) ON DELETE CASCADE, 
	CONSTRAINT ir_attachment_medical_image_embryo_upload_ir_attachment_id_fkey FOREIGN KEY(ir_attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE
)


CREATE TABLE ir_config_parameter (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	key VARCHAR NOT NULL, 
	value TEXT NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_config_parameter_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_config_parameter_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_config_parameter_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_config_parameter_key_uniq UNIQUE (key)
)


CREATE TABLE ir_cron (
	id SERIAL NOT NULL, 
	ir_actions_server_id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	interval_number INTEGER, 
	numbercall INTEGER, 
	priority INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	interval_type VARCHAR, 
	cron_name JSONB, 
	active BOOLEAN, 
	doall BOOLEAN, 
	nextcall TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	lastcall TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_cron_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_cron_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_cron_ir_actions_server_id_fkey FOREIGN KEY(ir_actions_server_id) REFERENCES ir_act_server (id) ON DELETE RESTRICT, 
	CONSTRAINT ir_cron_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE RESTRICT, 
	CONSTRAINT ir_cron_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_cron_trigger (
	id SERIAL NOT NULL, 
	cron_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	call_at TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_cron_trigger_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_cron_trigger_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_cron_trigger_cron_id_fkey FOREIGN KEY(cron_id) REFERENCES ir_cron (id) ON DELETE SET NULL, 
	CONSTRAINT ir_cron_trigger_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_default (
	id SERIAL NOT NULL, 
	field_id INTEGER NOT NULL, 
	user_id INTEGER, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	condition VARCHAR, 
	json_value VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_default_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_default_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE CASCADE, 
	CONSTRAINT ir_default_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_default_field_id_fkey FOREIGN KEY(field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_default_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT ir_default_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_demo (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_demo_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_demo_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_demo_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_demo_failure (
	id SERIAL NOT NULL, 
	module_id INTEGER NOT NULL, 
	wizard_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	error VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_demo_failure_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_demo_failure_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_demo_failure_module_id_fkey FOREIGN KEY(module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT ir_demo_failure_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES ir_demo_failure_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT ir_demo_failure_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_demo_failure_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_demo_failure_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_demo_failure_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_demo_failure_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_exports (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	resource VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_exports_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_exports_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_exports_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_exports_line (
	id SERIAL NOT NULL, 
	export_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_exports_line_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_exports_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_exports_line_export_id_fkey FOREIGN KEY(export_id) REFERENCES ir_exports (id) ON DELETE CASCADE, 
	CONSTRAINT ir_exports_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_filters (
	id SERIAL NOT NULL, 
	user_id INTEGER, 
	action_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	model_id VARCHAR NOT NULL, 
	domain TEXT NOT NULL, 
	context TEXT NOT NULL, 
	sort TEXT NOT NULL, 
	is_default BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_filters_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_filters_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_filters_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT ir_filters_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_filters_name_model_uid_unique UNIQUE (model_id, user_id, action_id, name)
)


CREATE TABLE ir_logging (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	type VARCHAR NOT NULL, 
	dbname VARCHAR, 
	level VARCHAR, 
	path VARCHAR NOT NULL, 
	func VARCHAR NOT NULL, 
	line VARCHAR NOT NULL, 
	message TEXT NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_logging_pkey PRIMARY KEY (id)
)


CREATE TABLE ir_mail_server (
	id SERIAL NOT NULL, 
	smtp_port INTEGER NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	from_filter VARCHAR, 
	smtp_host VARCHAR NOT NULL, 
	smtp_authentication VARCHAR NOT NULL, 
	smtp_user VARCHAR, 
	smtp_pass VARCHAR, 
	smtp_encryption VARCHAR NOT NULL, 
	smtp_debug BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	smtp_ssl_certificate BYTEA, 
	smtp_ssl_private_key BYTEA, 
	google_gmail_access_token_expiration INTEGER, 
	google_gmail_authorization_code VARCHAR, 
	google_gmail_refresh_token VARCHAR, 
	google_gmail_access_token VARCHAR, 
	CONSTRAINT ir_mail_server_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_mail_server_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_mail_server_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_model (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	model VARCHAR NOT NULL, 
	"order" VARCHAR NOT NULL, 
	state VARCHAR, 
	name JSONB NOT NULL, 
	info TEXT, 
	transient BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	is_mail_thread BOOLEAN, 
	is_mail_activity BOOLEAN, 
	is_mail_blacklist BOOLEAN, 
	CONSTRAINT ir_model_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_model_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_obj_name_uniq UNIQUE (model)
)


CREATE TABLE ir_model_access (
	id SERIAL NOT NULL, 
	model_id INTEGER NOT NULL, 
	group_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	active BOOLEAN, 
	perm_read BOOLEAN, 
	perm_write BOOLEAN, 
	perm_create BOOLEAN, 
	perm_unlink BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_model_access_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_model_access_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_access_group_id_fkey FOREIGN KEY(group_id) REFERENCES res_groups (id) ON DELETE RESTRICT, 
	CONSTRAINT ir_model_access_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_access_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_model_constraint (
	id SERIAL NOT NULL, 
	model INTEGER NOT NULL, 
	module INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	definition VARCHAR, 
	type VARCHAR(1) NOT NULL, 
	message JSONB, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_model_constraint_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_model_constraint_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_constraint_model_fkey FOREIGN KEY(model) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_constraint_module_fkey FOREIGN KEY(module) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_constraint_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_constraint_module_name_uniq UNIQUE (name, module)
)


CREATE TABLE ir_model_data (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (now() AT TIME ZONE 'UTC'::text), 
	write_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (now() AT TIME ZONE 'UTC'::text), 
	write_uid INTEGER, 
	res_id INTEGER, 
	noupdate BOOLEAN DEFAULT false, 
	name VARCHAR NOT NULL, 
	module VARCHAR NOT NULL, 
	model VARCHAR NOT NULL, 
	CONSTRAINT ir_model_data_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_model_data_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_data_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_data_name_nospaces CHECK (name::text !~~ '%% %%'::text)
)


CREATE TABLE ir_model_fields (
	id SERIAL NOT NULL, 
	relation_field_id INTEGER, 
	model_id INTEGER NOT NULL, 
	related_field_id INTEGER, 
	size INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	complete_name VARCHAR, 
	model VARCHAR NOT NULL, 
	relation VARCHAR, 
	relation_field VARCHAR, 
	ttype VARCHAR NOT NULL, 
	related VARCHAR, 
	state VARCHAR NOT NULL, 
	on_delete VARCHAR, 
	domain VARCHAR, 
	relation_table VARCHAR, 
	column1 VARCHAR, 
	column2 VARCHAR, 
	depends VARCHAR, 
	field_description JSONB NOT NULL, 
	help JSONB, 
	compute TEXT, 
	copied BOOLEAN, 
	required BOOLEAN, 
	readonly BOOLEAN, 
	index BOOLEAN, 
	translate BOOLEAN, 
	group_expand BOOLEAN, 
	selectable BOOLEAN, 
	store BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	serialization_field_id INTEGER, 
	tracking INTEGER, 
	CONSTRAINT ir_model_fields_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_model_fields_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_fields_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_fields_related_field_id_fkey FOREIGN KEY(related_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_fields_relation_field_id_fkey FOREIGN KEY(relation_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_fields_serialization_field_id_fkey FOREIGN KEY(serialization_field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_fields_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_fields_name_unique UNIQUE (model, name), 
	CONSTRAINT ir_model_fields_size_gt_zero CHECK (size >= 0)
)


CREATE TABLE ir_model_fields_group_rel (
	field_id INTEGER NOT NULL, 
	group_id INTEGER NOT NULL, 
	CONSTRAINT ir_model_fields_group_rel_pkey PRIMARY KEY (field_id, group_id), 
	CONSTRAINT ir_model_fields_group_rel_field_id_fkey FOREIGN KEY(field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_fields_group_rel_group_id_fkey FOREIGN KEY(group_id) REFERENCES res_groups (id) ON DELETE CASCADE
)


CREATE TABLE ir_model_fields_selection (
	id SERIAL NOT NULL, 
	field_id INTEGER NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	value VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_model_fields_selection_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_model_fields_selection_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_fields_selection_field_id_fkey FOREIGN KEY(field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_fields_selection_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_fields_selection_selection_field_uniq UNIQUE (field_id, value)
)


CREATE TABLE ir_model_relation (
	id SERIAL NOT NULL, 
	model INTEGER NOT NULL, 
	module INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_model_relation_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_model_relation_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_model_relation_model_fkey FOREIGN KEY(model) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_relation_module_fkey FOREIGN KEY(module) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT ir_model_relation_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_module_category (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	write_uid INTEGER, 
	parent_id INTEGER, 
	name JSONB NOT NULL, 
	sequence INTEGER, 
	description JSONB, 
	visible BOOLEAN, 
	exclusive BOOLEAN, 
	CONSTRAINT ir_module_category_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_module_category_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_module_category_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES ir_module_category (id) ON DELETE SET NULL, 
	CONSTRAINT ir_module_category_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_module_module (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	write_uid INTEGER, 
	website VARCHAR, 
	summary JSONB, 
	name VARCHAR NOT NULL, 
	author VARCHAR, 
	icon VARCHAR, 
	state VARCHAR(16), 
	latest_version VARCHAR, 
	shortdesc JSONB, 
	category_id INTEGER, 
	description JSONB, 
	application BOOLEAN DEFAULT false, 
	demo BOOLEAN DEFAULT false, 
	web BOOLEAN DEFAULT false, 
	license VARCHAR(32), 
	sequence INTEGER DEFAULT 100, 
	auto_install BOOLEAN DEFAULT false, 
	to_buy BOOLEAN DEFAULT false, 
	maintainer VARCHAR, 
	published_version VARCHAR, 
	url VARCHAR, 
	contributors TEXT, 
	menus_by_module TEXT, 
	reports_by_module TEXT, 
	views_by_module TEXT, 
	CONSTRAINT ir_module_module_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_module_module_category_id_fkey FOREIGN KEY(category_id) REFERENCES ir_module_category (id) ON DELETE SET NULL, 
	CONSTRAINT ir_module_module_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_module_module_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_module_module_name_uniq UNIQUE (name)
)


CREATE TABLE ir_module_module_dependency (
	id SERIAL NOT NULL, 
	name VARCHAR, 
	module_id INTEGER, 
	auto_install_required BOOLEAN DEFAULT true, 
	CONSTRAINT ir_module_module_dependency_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_module_module_dependency_module_id_fkey FOREIGN KEY(module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE
)


CREATE TABLE ir_module_module_exclusion (
	id SERIAL NOT NULL, 
	module_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_module_module_exclusion_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_module_module_exclusion_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_module_module_exclusion_module_id_fkey FOREIGN KEY(module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT ir_module_module_exclusion_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_profile (
	id SERIAL NOT NULL, 
	sql_count INTEGER, 
	entry_count INTEGER, 
	session VARCHAR, 
	name VARCHAR, 
	init_stack_trace TEXT, 
	sql TEXT, 
	traces_async TEXT, 
	traces_sync TEXT, 
	qweb TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	duration DOUBLE PRECISION, 
	CONSTRAINT ir_profile_pkey PRIMARY KEY (id)
)


CREATE TABLE ir_property (
	id SERIAL NOT NULL, 
	company_id INTEGER, 
	fields_id INTEGER NOT NULL, 
	value_integer INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	res_id VARCHAR, 
	value_reference VARCHAR, 
	type VARCHAR NOT NULL, 
	value_text TEXT, 
	value_datetime TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	value_float DOUBLE PRECISION, 
	value_binary BYTEA, 
	CONSTRAINT ir_property_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_property_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT ir_property_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_property_fields_id_fkey FOREIGN KEY(fields_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_property_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_rule (
	id SERIAL NOT NULL, 
	model_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	domain_force TEXT, 
	active BOOLEAN, 
	perm_read BOOLEAN, 
	perm_write BOOLEAN, 
	perm_create BOOLEAN, 
	perm_unlink BOOLEAN, 
	global BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_rule_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_rule_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_rule_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT ir_rule_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_rule_no_access_rights CHECK (perm_read <> false OR perm_write <> false OR perm_create <> false OR perm_unlink <> false)
)


CREATE TABLE ir_sequence (
	id SERIAL NOT NULL, 
	number_next INTEGER NOT NULL, 
	number_increment INTEGER NOT NULL, 
	padding INTEGER NOT NULL, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	code VARCHAR, 
	implementation VARCHAR NOT NULL, 
	prefix VARCHAR, 
	suffix VARCHAR, 
	active BOOLEAN, 
	use_date_range BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_sequence_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_sequence_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT ir_sequence_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_sequence_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_sequence_date_range (
	id SERIAL NOT NULL, 
	sequence_id INTEGER NOT NULL, 
	number_next INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	date_from DATE NOT NULL, 
	date_to DATE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_sequence_date_range_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_sequence_date_range_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_sequence_date_range_sequence_id_fkey FOREIGN KEY(sequence_id) REFERENCES ir_sequence (id) ON DELETE CASCADE, 
	CONSTRAINT ir_sequence_date_range_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_server_object_lines (
	id SERIAL NOT NULL, 
	server_id INTEGER, 
	col1 INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	evaluation_type VARCHAR NOT NULL, 
	value TEXT NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_server_object_lines_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_server_object_lines_col1_fkey FOREIGN KEY(col1) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT ir_server_object_lines_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_server_object_lines_server_id_fkey FOREIGN KEY(server_id) REFERENCES ir_act_server (id) ON DELETE CASCADE, 
	CONSTRAINT ir_server_object_lines_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_ui_menu (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	parent_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	parent_path VARCHAR, 
	web_icon VARCHAR, 
	action VARCHAR, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_ui_menu_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_ui_menu_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_ui_menu_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES ir_ui_menu (id) ON DELETE RESTRICT, 
	CONSTRAINT ir_ui_menu_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_ui_menu_group_rel (
	menu_id INTEGER NOT NULL, 
	gid INTEGER NOT NULL, 
	CONSTRAINT ir_ui_menu_group_rel_pkey PRIMARY KEY (menu_id, gid), 
	CONSTRAINT ir_ui_menu_group_rel_gid_fkey FOREIGN KEY(gid) REFERENCES res_groups (id) ON DELETE CASCADE, 
	CONSTRAINT ir_ui_menu_group_rel_menu_id_fkey FOREIGN KEY(menu_id) REFERENCES ir_ui_menu (id) ON DELETE CASCADE
)


CREATE TABLE ir_ui_view (
	id SERIAL NOT NULL, 
	priority INTEGER NOT NULL, 
	inherit_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	model VARCHAR, 
	key VARCHAR, 
	type VARCHAR, 
	arch_fs VARCHAR, 
	field_parent VARCHAR, 
	mode VARCHAR NOT NULL, 
	arch_db JSONB, 
	arch_prev TEXT, 
	arch_updated BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_ui_view_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_ui_view_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_ui_view_inherit_id_fkey FOREIGN KEY(inherit_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT, 
	CONSTRAINT ir_ui_view_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_ui_view_inheritance_mode CHECK (mode::text <> 'extension'::text OR inherit_id IS NOT NULL), 
	CONSTRAINT ir_ui_view_qweb_required_key CHECK (type::text <> 'qweb'::text OR key IS NOT NULL)
)


CREATE TABLE ir_ui_view_custom (
	id SERIAL NOT NULL, 
	ref_id INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	arch TEXT NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT ir_ui_view_custom_pkey PRIMARY KEY (id), 
	CONSTRAINT ir_ui_view_custom_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT ir_ui_view_custom_ref_id_fkey FOREIGN KEY(ref_id) REFERENCES ir_ui_view (id) ON DELETE CASCADE, 
	CONSTRAINT ir_ui_view_custom_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT ir_ui_view_custom_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE ir_ui_view_group_rel (
	view_id INTEGER NOT NULL, 
	group_id INTEGER NOT NULL, 
	CONSTRAINT ir_ui_view_group_rel_pkey PRIMARY KEY (view_id, group_id), 
	CONSTRAINT ir_ui_view_group_rel_group_id_fkey FOREIGN KEY(group_id) REFERENCES res_groups (id) ON DELETE CASCADE, 
	CONSTRAINT ir_ui_view_group_rel_view_id_fkey FOREIGN KEY(view_id) REFERENCES ir_ui_view (id) ON DELETE CASCADE
)


CREATE TABLE login_news (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	news_text VARCHAR, 
	from_date DATE, 
	to_date DATE, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT login_news_pkey PRIMARY KEY (id), 
	CONSTRAINT login_news_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT login_news_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_activity (
	id SERIAL NOT NULL, 
	res_model_id INTEGER NOT NULL, 
	res_id INTEGER, 
	activity_type_id INTEGER, 
	user_id INTEGER NOT NULL, 
	request_partner_id INTEGER, 
	recommended_activity_type_id INTEGER, 
	previous_activity_type_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	res_model VARCHAR, 
	res_name VARCHAR, 
	summary VARCHAR, 
	date_deadline DATE NOT NULL, 
	note TEXT, 
	automated BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_activity_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_activity_activity_type_id_fkey FOREIGN KEY(activity_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT, 
	CONSTRAINT mail_activity_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_activity_previous_activity_type_id_fkey FOREIGN KEY(previous_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL, 
	CONSTRAINT mail_activity_recommended_activity_type_id_fkey FOREIGN KEY(recommended_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL, 
	CONSTRAINT mail_activity_request_partner_id_fkey FOREIGN KEY(request_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT mail_activity_res_model_id_fkey FOREIGN KEY(res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT mail_activity_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE RESTRICT, 
	CONSTRAINT mail_activity_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_activity_check_res_id_is_set CHECK (res_id IS NOT NULL AND res_id <> 0)
)


CREATE TABLE mail_activity_rel (
	activity_id INTEGER NOT NULL, 
	recommended_id INTEGER NOT NULL, 
	CONSTRAINT mail_activity_rel_pkey PRIMARY KEY (activity_id, recommended_id), 
	CONSTRAINT mail_activity_rel_activity_id_fkey FOREIGN KEY(activity_id) REFERENCES mail_activity_type (id) ON DELETE CASCADE, 
	CONSTRAINT mail_activity_rel_recommended_id_fkey FOREIGN KEY(recommended_id) REFERENCES mail_activity_type (id) ON DELETE CASCADE
)


CREATE TABLE mail_activity_type (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	delay_count INTEGER, 
	triggered_next_type_id INTEGER, 
	default_user_id INTEGER, 
	write_uid INTEGER, 
	delay_unit VARCHAR NOT NULL, 
	delay_from VARCHAR NOT NULL, 
	icon VARCHAR, 
	decoration_type VARCHAR, 
	res_model VARCHAR, 
	chaining_type VARCHAR NOT NULL, 
	category VARCHAR, 
	name JSONB NOT NULL, 
	summary JSONB, 
	default_note JSONB, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_activity_type_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_activity_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_activity_type_default_user_id_fkey FOREIGN KEY(default_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_activity_type_triggered_next_type_id_fkey FOREIGN KEY(triggered_next_type_id) REFERENCES mail_activity_type (id) ON DELETE RESTRICT, 
	CONSTRAINT mail_activity_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_activity_type_mail_template_rel (
	mail_activity_type_id INTEGER NOT NULL, 
	mail_template_id INTEGER NOT NULL, 
	CONSTRAINT mail_activity_type_mail_template_rel_pkey PRIMARY KEY (mail_activity_type_id, mail_template_id), 
	CONSTRAINT mail_activity_type_mail_template_rel_mail_activity_type_id_fkey FOREIGN KEY(mail_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE CASCADE, 
	CONSTRAINT mail_activity_type_mail_template_rel_mail_template_id_fkey FOREIGN KEY(mail_template_id) REFERENCES mail_template (id) ON DELETE CASCADE
)


CREATE TABLE mail_alias (
	id SERIAL NOT NULL, 
	alias_model_id INTEGER NOT NULL, 
	alias_user_id INTEGER, 
	alias_force_thread_id INTEGER, 
	alias_parent_model_id INTEGER, 
	alias_parent_thread_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	alias_name VARCHAR, 
	alias_contact VARCHAR NOT NULL, 
	alias_bounced_content JSONB, 
	alias_defaults TEXT NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_alias_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_alias_alias_model_id_fkey FOREIGN KEY(alias_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT mail_alias_alias_parent_model_id_fkey FOREIGN KEY(alias_parent_model_id) REFERENCES ir_model (id) ON DELETE SET NULL, 
	CONSTRAINT mail_alias_alias_user_id_fkey FOREIGN KEY(alias_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_alias_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_alias_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_alias_alias_unique UNIQUE (alias_name)
)


CREATE TABLE mail_blacklist (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	email VARCHAR NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_blacklist_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_blacklist_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_blacklist_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT mail_blacklist_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_blacklist_unique_email UNIQUE (email)
)


CREATE TABLE mail_blacklist_remove (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	email VARCHAR NOT NULL, 
	reason VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_blacklist_remove_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_blacklist_remove_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_blacklist_remove_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_channel (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	group_public_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	channel_type VARCHAR NOT NULL, 
	default_display_mode VARCHAR, 
	uuid VARCHAR(50), 
	description TEXT, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_channel_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_channel_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_group_public_id_fkey FOREIGN KEY(group_public_id) REFERENCES res_groups (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_uuid_unique UNIQUE (uuid), 
	CONSTRAINT mail_channel_channel_type_not_null CHECK (channel_type IS NOT NULL), 
	CONSTRAINT mail_channel_group_public_id_check CHECK (channel_type::text = 'channel'::text OR group_public_id IS NULL)
)


CREATE TABLE mail_channel_member (
	id SERIAL NOT NULL, 
	partner_id INTEGER, 
	guest_id INTEGER, 
	channel_id INTEGER NOT NULL, 
	fetched_message_id INTEGER, 
	seen_message_id INTEGER, 
	rtc_inviting_session_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	custom_channel_name VARCHAR, 
	fold_state VARCHAR, 
	is_minimized BOOLEAN, 
	is_pinned BOOLEAN, 
	last_interest_dt TIMESTAMP WITHOUT TIME ZONE, 
	last_seen_dt TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_channel_member_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_channel_member_channel_id_fkey FOREIGN KEY(channel_id) REFERENCES mail_channel (id) ON DELETE CASCADE, 
	CONSTRAINT mail_channel_member_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_member_fetched_message_id_fkey FOREIGN KEY(fetched_message_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_member_guest_id_fkey FOREIGN KEY(guest_id) REFERENCES mail_guest (id) ON DELETE CASCADE, 
	CONSTRAINT mail_channel_member_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT mail_channel_member_rtc_inviting_session_id_fkey FOREIGN KEY(rtc_inviting_session_id) REFERENCES mail_channel_rtc_session (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_member_seen_message_id_fkey FOREIGN KEY(seen_message_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_member_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_member_partner_or_guest_exists CHECK (partner_id IS NOT NULL AND guest_id IS NULL OR partner_id IS NULL AND guest_id IS NOT NULL)
)


CREATE TABLE mail_channel_res_groups_rel (
	mail_channel_id INTEGER NOT NULL, 
	res_groups_id INTEGER NOT NULL, 
	CONSTRAINT mail_channel_res_groups_rel_pkey PRIMARY KEY (mail_channel_id, res_groups_id), 
	CONSTRAINT mail_channel_res_groups_rel_mail_channel_id_fkey FOREIGN KEY(mail_channel_id) REFERENCES mail_channel (id) ON DELETE CASCADE, 
	CONSTRAINT mail_channel_res_groups_rel_res_groups_id_fkey FOREIGN KEY(res_groups_id) REFERENCES res_groups (id) ON DELETE CASCADE
)


CREATE TABLE mail_channel_rtc_session (
	id SERIAL NOT NULL, 
	channel_member_id INTEGER NOT NULL, 
	channel_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	is_screen_sharing_on BOOLEAN, 
	is_camera_on BOOLEAN, 
	is_muted BOOLEAN, 
	is_deaf BOOLEAN, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_channel_rtc_session_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_channel_rtc_session_channel_id_fkey FOREIGN KEY(channel_id) REFERENCES mail_channel (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_rtc_session_channel_member_id_fkey FOREIGN KEY(channel_member_id) REFERENCES mail_channel_member (id) ON DELETE CASCADE, 
	CONSTRAINT mail_channel_rtc_session_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_rtc_session_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_channel_rtc_session_channel_member_unique UNIQUE (channel_member_id)
)


CREATE TABLE mail_compose_message (
	id SERIAL NOT NULL, 
	template_id INTEGER, 
	parent_id INTEGER, 
	author_id INTEGER, 
	res_id INTEGER, 
	subtype_id INTEGER, 
	mail_activity_type_id INTEGER, 
	mail_server_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	lang VARCHAR, 
	subject VARCHAR, 
	email_layout_xmlid VARCHAR, 
	email_from VARCHAR, 
	composition_mode VARCHAR, 
	model VARCHAR, 
	record_name VARCHAR, 
	message_type VARCHAR NOT NULL, 
	reply_to VARCHAR, 
	body TEXT, 
	active_domain TEXT, 
	email_add_signature BOOLEAN, 
	use_active_domain BOOLEAN, 
	is_log BOOLEAN, 
	notify BOOLEAN, 
	reply_to_force_new BOOLEAN, 
	auto_delete BOOLEAN, 
	auto_delete_message BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_compose_message_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_compose_message_author_id_fkey FOREIGN KEY(author_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT mail_compose_message_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_compose_message_mail_activity_type_id_fkey FOREIGN KEY(mail_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL, 
	CONSTRAINT mail_compose_message_mail_server_id_fkey FOREIGN KEY(mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL, 
	CONSTRAINT mail_compose_message_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT mail_compose_message_subtype_id_fkey FOREIGN KEY(subtype_id) REFERENCES mail_message_subtype (id) ON DELETE SET NULL, 
	CONSTRAINT mail_compose_message_template_id_fkey FOREIGN KEY(template_id) REFERENCES mail_template (id) ON DELETE SET NULL, 
	CONSTRAINT mail_compose_message_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_compose_message_ir_attachments_rel (
	wizard_id INTEGER NOT NULL, 
	attachment_id INTEGER NOT NULL, 
	CONSTRAINT mail_compose_message_ir_attachments_rel_pkey PRIMARY KEY (wizard_id, attachment_id), 
	CONSTRAINT mail_compose_message_ir_attachments_rel_attachment_id_fkey FOREIGN KEY(attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE, 
	CONSTRAINT mail_compose_message_ir_attachments_rel_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES mail_compose_message (id) ON DELETE CASCADE
)


CREATE TABLE mail_compose_message_res_partner_rel (
	wizard_id INTEGER NOT NULL, 
	partner_id INTEGER NOT NULL, 
	CONSTRAINT mail_compose_message_res_partner_rel_pkey PRIMARY KEY (wizard_id, partner_id), 
	CONSTRAINT mail_compose_message_res_partner_rel_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT mail_compose_message_res_partner_rel_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES mail_compose_message (id) ON DELETE CASCADE
)


CREATE TABLE mail_followers (
	id SERIAL NOT NULL, 
	res_id INTEGER, 
	partner_id INTEGER NOT NULL, 
	res_model VARCHAR NOT NULL, 
	CONSTRAINT mail_followers_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_followers_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT mail_followers_mail_followers_res_partner_res_model_id_uniq UNIQUE (res_model, res_id, partner_id)
)


CREATE TABLE mail_followers_mail_message_subtype_rel (
	mail_followers_id INTEGER NOT NULL, 
	mail_message_subtype_id INTEGER NOT NULL, 
	CONSTRAINT mail_followers_mail_message_subtype_rel_pkey PRIMARY KEY (mail_followers_id, mail_message_subtype_id), 
	CONSTRAINT mail_followers_mail_message_subtyp_mail_message_subtype_id_fkey FOREIGN KEY(mail_message_subtype_id) REFERENCES mail_message_subtype (id) ON DELETE CASCADE, 
	CONSTRAINT mail_followers_mail_message_subtype_rel_mail_followers_id_fkey FOREIGN KEY(mail_followers_id) REFERENCES mail_followers (id) ON DELETE CASCADE
)


CREATE TABLE mail_gateway_allowed (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	email VARCHAR, 
	email_normalized VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_gateway_allowed_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_gateway_allowed_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_gateway_allowed_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_guest (
	id SERIAL NOT NULL, 
	country_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	access_token VARCHAR NOT NULL, 
	lang VARCHAR, 
	timezone VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_guest_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_guest_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT mail_guest_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_guest_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_ice_server (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	server_type VARCHAR NOT NULL, 
	uri VARCHAR NOT NULL, 
	username VARCHAR, 
	credential VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_ice_server_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_ice_server_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_ice_server_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_link_preview (
	id SERIAL NOT NULL, 
	message_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	source_url VARCHAR NOT NULL, 
	og_type VARCHAR, 
	og_title VARCHAR, 
	og_image VARCHAR, 
	og_mimetype VARCHAR, 
	image_mimetype VARCHAR, 
	og_description TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_link_preview_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_link_preview_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_link_preview_message_id_fkey FOREIGN KEY(message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_link_preview_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_mail (
	id SERIAL NOT NULL, 
	mail_message_id INTEGER NOT NULL, 
	fetchmail_server_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	email_cc VARCHAR, 
	state VARCHAR, 
	failure_type VARCHAR, 
	body_html TEXT, 
	"references" TEXT, 
	headers TEXT, 
	email_to TEXT, 
	failure_reason TEXT, 
	is_notification BOOLEAN, 
	auto_delete BOOLEAN, 
	to_delete BOOLEAN, 
	scheduled_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_mail_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_mail_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_mail_fetchmail_server_id_fkey FOREIGN KEY(fetchmail_server_id) REFERENCES fetchmail_server (id) ON DELETE SET NULL, 
	CONSTRAINT mail_mail_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_mail_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_mail_res_partner_rel (
	mail_mail_id INTEGER NOT NULL, 
	res_partner_id INTEGER NOT NULL, 
	CONSTRAINT mail_mail_res_partner_rel_pkey PRIMARY KEY (mail_mail_id, res_partner_id), 
	CONSTRAINT mail_mail_res_partner_rel_mail_mail_id_fkey FOREIGN KEY(mail_mail_id) REFERENCES mail_mail (id) ON DELETE CASCADE, 
	CONSTRAINT mail_mail_res_partner_rel_res_partner_id_fkey FOREIGN KEY(res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE
)


CREATE TABLE mail_message (
	id SERIAL NOT NULL, 
	parent_id INTEGER, 
	res_id INTEGER, 
	subtype_id INTEGER, 
	mail_activity_type_id INTEGER, 
	author_id INTEGER, 
	author_guest_id INTEGER, 
	mail_server_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	subject VARCHAR, 
	model VARCHAR, 
	record_name VARCHAR, 
	message_type VARCHAR NOT NULL, 
	email_from VARCHAR, 
	message_id VARCHAR, 
	reply_to VARCHAR, 
	email_layout_xmlid VARCHAR, 
	body TEXT, 
	is_internal BOOLEAN, 
	reply_to_force_new BOOLEAN, 
	email_add_signature BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_message_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_message_author_guest_id_fkey FOREIGN KEY(author_guest_id) REFERENCES mail_guest (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_author_id_fkey FOREIGN KEY(author_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_mail_activity_type_id_fkey FOREIGN KEY(mail_activity_type_id) REFERENCES mail_activity_type (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_mail_server_id_fkey FOREIGN KEY(mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_subtype_id_fkey FOREIGN KEY(subtype_id) REFERENCES mail_message_subtype (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_message_reaction (
	id SERIAL NOT NULL, 
	message_id INTEGER NOT NULL, 
	partner_id INTEGER, 
	guest_id INTEGER, 
	content VARCHAR NOT NULL, 
	CONSTRAINT mail_message_reaction_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_message_reaction_guest_id_fkey FOREIGN KEY(guest_id) REFERENCES mail_guest (id) ON DELETE CASCADE, 
	CONSTRAINT mail_message_reaction_message_id_fkey FOREIGN KEY(message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_message_reaction_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT mail_message_reaction_partner_or_guest_exists CHECK (partner_id IS NOT NULL AND guest_id IS NULL OR partner_id IS NULL AND guest_id IS NOT NULL)
)


CREATE TABLE mail_message_res_partner_rel (
	mail_message_id INTEGER NOT NULL, 
	res_partner_id INTEGER NOT NULL, 
	CONSTRAINT mail_message_res_partner_rel_pkey PRIMARY KEY (mail_message_id, res_partner_id), 
	CONSTRAINT mail_message_res_partner_rel_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_message_res_partner_rel_res_partner_id_fkey FOREIGN KEY(res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE
)


CREATE TABLE mail_message_res_partner_starred_rel (
	mail_message_id INTEGER NOT NULL, 
	res_partner_id INTEGER NOT NULL, 
	CONSTRAINT mail_message_res_partner_starred_rel_pkey PRIMARY KEY (mail_message_id, res_partner_id), 
	CONSTRAINT mail_message_res_partner_starred_rel_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_message_res_partner_starred_rel_res_partner_id_fkey FOREIGN KEY(res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE
)


CREATE TABLE mail_message_schedule (
	id SERIAL NOT NULL, 
	mail_message_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	notification_parameters TEXT, 
	scheduled_datetime TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_message_schedule_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_message_schedule_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_schedule_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_message_schedule_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_message_subtype (
	id SERIAL NOT NULL, 
	parent_id INTEGER, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	relation_field VARCHAR, 
	res_model VARCHAR, 
	name JSONB NOT NULL, 
	description JSONB, 
	internal BOOLEAN, 
	"default" BOOLEAN, 
	hidden BOOLEAN, 
	track_recipients BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_message_subtype_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_message_subtype_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_subtype_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES mail_message_subtype (id) ON DELETE SET NULL, 
	CONSTRAINT mail_message_subtype_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_notification (
	id SERIAL NOT NULL, 
	author_id INTEGER, 
	mail_message_id INTEGER NOT NULL, 
	mail_mail_id INTEGER, 
	res_partner_id INTEGER, 
	notification_type VARCHAR NOT NULL, 
	notification_status VARCHAR, 
	failure_type VARCHAR, 
	failure_reason TEXT, 
	is_read BOOLEAN, 
	read_date TIMESTAMP WITHOUT TIME ZONE, 
	sms_id INTEGER, 
	sms_number VARCHAR, 
	letter_id INTEGER, 
	CONSTRAINT mail_notification_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_notification_author_id_fkey FOREIGN KEY(author_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT mail_notification_letter_id_fkey FOREIGN KEY(letter_id) REFERENCES snailmail_letter (id) ON DELETE CASCADE, 
	CONSTRAINT mail_notification_mail_mail_id_fkey FOREIGN KEY(mail_mail_id) REFERENCES mail_mail (id) ON DELETE SET NULL, 
	CONSTRAINT mail_notification_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_notification_res_partner_id_fkey FOREIGN KEY(res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT mail_notification_sms_id_fkey FOREIGN KEY(sms_id) REFERENCES sms_sms (id) ON DELETE SET NULL, 
	CONSTRAINT mail_notification_notification_partner_required CHECK ((notification_type::text <> ALL (ARRAY['email'::character varying, 'inbox'::character varying]::text[])) OR res_partner_id IS NOT NULL)
)


CREATE TABLE mail_notification_mail_resend_message_rel (
	mail_resend_message_id INTEGER NOT NULL, 
	mail_notification_id INTEGER NOT NULL, 
	CONSTRAINT mail_notification_mail_resend_message_rel_pkey PRIMARY KEY (mail_resend_message_id, mail_notification_id), 
	CONSTRAINT mail_notification_mail_resend_messa_mail_resend_message_id_fkey FOREIGN KEY(mail_resend_message_id) REFERENCES mail_resend_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_notification_mail_resend_message_mail_notification_id_fkey FOREIGN KEY(mail_notification_id) REFERENCES mail_notification (id) ON DELETE CASCADE
)


CREATE TABLE mail_resend_message (
	id SERIAL NOT NULL, 
	mail_message_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_resend_message_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_resend_message_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_resend_message_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT mail_resend_message_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_resend_partner (
	id SERIAL NOT NULL, 
	partner_id INTEGER NOT NULL, 
	resend_wizard_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	message VARCHAR, 
	resend BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_resend_partner_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_resend_partner_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_resend_partner_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT mail_resend_partner_resend_wizard_id_fkey FOREIGN KEY(resend_wizard_id) REFERENCES mail_resend_message (id) ON DELETE SET NULL, 
	CONSTRAINT mail_resend_partner_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_shortcode (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	source VARCHAR NOT NULL, 
	description VARCHAR, 
	substitution TEXT NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_shortcode_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_shortcode_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_shortcode_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_template (
	id SERIAL NOT NULL, 
	model_id INTEGER, 
	report_template INTEGER, 
	mail_server_id INTEGER, 
	ref_ir_act_window INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	template_fs VARCHAR, 
	lang VARCHAR, 
	model VARCHAR, 
	email_from VARCHAR, 
	email_to VARCHAR, 
	partner_to VARCHAR, 
	email_cc VARCHAR, 
	reply_to VARCHAR, 
	scheduled_date VARCHAR, 
	name JSONB, 
	description JSONB, 
	subject JSONB, 
	body_html JSONB, 
	report_name JSONB, 
	active BOOLEAN, 
	use_default_to BOOLEAN, 
	auto_delete BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_template_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_template_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_template_mail_server_id_fkey FOREIGN KEY(mail_server_id) REFERENCES ir_mail_server (id) ON DELETE SET NULL, 
	CONSTRAINT mail_template_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE SET NULL, 
	CONSTRAINT mail_template_ref_ir_act_window_fkey FOREIGN KEY(ref_ir_act_window) REFERENCES ir_act_window (id) ON DELETE SET NULL, 
	CONSTRAINT mail_template_report_template_fkey FOREIGN KEY(report_template) REFERENCES ir_act_report_xml (id) ON DELETE SET NULL, 
	CONSTRAINT mail_template_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_template_mail_template_reset_rel (
	mail_template_reset_id INTEGER NOT NULL, 
	mail_template_id INTEGER NOT NULL, 
	CONSTRAINT mail_template_mail_template_reset_rel_pkey PRIMARY KEY (mail_template_reset_id, mail_template_id), 
	CONSTRAINT mail_template_mail_template_reset_r_mail_template_reset_id_fkey FOREIGN KEY(mail_template_reset_id) REFERENCES mail_template_reset (id) ON DELETE CASCADE, 
	CONSTRAINT mail_template_mail_template_reset_rel_mail_template_id_fkey FOREIGN KEY(mail_template_id) REFERENCES mail_template (id) ON DELETE CASCADE
)


CREATE TABLE mail_template_preview (
	id SERIAL NOT NULL, 
	mail_template_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	resource_ref VARCHAR, 
	lang VARCHAR, 
	error_msg VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_template_preview_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_template_preview_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_template_preview_mail_template_id_fkey FOREIGN KEY(mail_template_id) REFERENCES mail_template (id) ON DELETE CASCADE, 
	CONSTRAINT mail_template_preview_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_template_reset (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_template_reset_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_template_reset_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_template_reset_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_tracking_value (
	id SERIAL NOT NULL, 
	field INTEGER NOT NULL, 
	old_value_integer INTEGER, 
	new_value_integer INTEGER, 
	currency_id INTEGER, 
	mail_message_id INTEGER NOT NULL, 
	tracking_sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	field_desc VARCHAR NOT NULL, 
	field_type VARCHAR, 
	old_value_char VARCHAR, 
	new_value_char VARCHAR, 
	old_value_text TEXT, 
	new_value_text TEXT, 
	old_value_datetime TIMESTAMP WITHOUT TIME ZONE, 
	new_value_datetime TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	old_value_float DOUBLE PRECISION, 
	old_value_monetary DOUBLE PRECISION, 
	new_value_float DOUBLE PRECISION, 
	new_value_monetary DOUBLE PRECISION, 
	CONSTRAINT mail_tracking_value_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_tracking_value_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_tracking_value_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE SET NULL, 
	CONSTRAINT mail_tracking_value_field_fkey FOREIGN KEY(field) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT mail_tracking_value_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT mail_tracking_value_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_wizard_invite (
	id SERIAL NOT NULL, 
	res_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	res_model VARCHAR NOT NULL, 
	message TEXT, 
	send_mail BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mail_wizard_invite_pkey PRIMARY KEY (id), 
	CONSTRAINT mail_wizard_invite_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mail_wizard_invite_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE mail_wizard_invite_res_partner_rel (
	mail_wizard_invite_id INTEGER NOT NULL, 
	res_partner_id INTEGER NOT NULL, 
	CONSTRAINT mail_wizard_invite_res_partner_rel_pkey PRIMARY KEY (mail_wizard_invite_id, res_partner_id), 
	CONSTRAINT mail_wizard_invite_res_partner_rel_mail_wizard_invite_id_fkey FOREIGN KEY(mail_wizard_invite_id) REFERENCES mail_wizard_invite (id) ON DELETE CASCADE, 
	CONSTRAINT mail_wizard_invite_res_partner_rel_res_partner_id_fkey FOREIGN KEY(res_partner_id) REFERENCES res_partner (id) ON DELETE CASCADE
)


CREATE TABLE male_has_exually_transmitted_record_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT male_has_exually_transmitted_record_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT male_has_exually_transmitted_record_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT male_has_exually_transmitted_record_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE male_has_exually_transmitted_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT male_has_exually_transmitted_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT male_has_exually_transmitted_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT male_has_exually_transmitted_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE mapping_employee_department (
	id SERIAL NOT NULL, 
	model_id INTEGER NOT NULL, 
	field_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	model_name VARCHAR, 
	field_name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT mapping_employee_department_pkey PRIMARY KEY (id), 
	CONSTRAINT mapping_employee_department_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mapping_employee_department_field_id_fkey FOREIGN KEY(field_id) REFERENCES ir_model_fields (id) ON DELETE CASCADE, 
	CONSTRAINT mapping_employee_department_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT mapping_employee_department_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT mapping_employee_department_model_id_field_id_unique UNIQUE (model_id, field_id)
)


CREATE TABLE mapping_line_department_rel (
	mapping_id INTEGER NOT NULL, 
	line_department_id INTEGER NOT NULL, 
	CONSTRAINT mapping_line_department_rel_pkey PRIMARY KEY (mapping_id, line_department_id), 
	CONSTRAINT mapping_line_department_rel_line_department_id_fkey FOREIGN KEY(line_department_id) REFERENCES medical_hr_department_line (id) ON DELETE RESTRICT, 
	CONSTRAINT mapping_line_department_rel_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES mapping_employee_department (id) ON DELETE CASCADE
)


CREATE TABLE medical_appointment_check_foetus (
	id SERIAL NOT NULL, 
	doctor_id INTEGER, 
	result_id INTEGER, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	file_name VARCHAR(64), 
	note VARCHAR, 
	date DATE, 
	re_date DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_appointment_check_foetus_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_appointment_check_foetus_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_check_foetus_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_check_foetus_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_check_foetus_result_id_fkey FOREIGN KEY(result_id) REFERENCES medical_treatment_result (id) ON DELETE CASCADE, 
	CONSTRAINT medical_appointment_check_foetus_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_appointment_procedure (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	doctor_id INTEGER, 
	perform_doctor_id INTEGER, 
	treatment_id INTEGER, 
	sequence INTEGER NOT NULL, 
	confirm_user_id INTEGER, 
	source_id INTEGER, 
	follicular_id INTEGER, 
	company_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	patient_code VARCHAR, 
	mobile VARCHAR, 
	gender VARCHAR, 
	type VARCHAR, 
	day_birth VARCHAR, 
	month_birth VARCHAR, 
	year_birth VARCHAR, 
	reason VARCHAR, 
	room VARCHAR, 
	state VARCHAR, 
	role VARCHAR, 
	reference VARCHAR, 
	indication_icsi_ivf VARCHAR, 
	indication VARCHAR, 
	indication_2 VARCHAR, 
	date DATE, 
	appointment_date DATE, 
	date_hcg DATE, 
	fet_date DATE, 
	active BOOLEAN, 
	has_time_hcg BOOLEAN, 
	datetime_hcg TIMESTAMP WITHOUT TIME ZONE, 
	ultrasound_date TIMESTAMP WITHOUT TIME ZONE, 
	procedure_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	time_procedure DOUBLE PRECISION, 
	time_hcg DOUBLE PRECISION, 
	actual_follicle_qty VARCHAR, 
	after_retrieve_follicle_qty VARCHAR, 
	after_retrieve_follicle_state VARCHAR, 
	note VARCHAR, 
	dashboard_state VARCHAR, 
	waiting_procedure_id INTEGER, 
	room_id INTEGER, 
	waiting_sequence INTEGER, 
	wa_state VARCHAR, 
	prev_state VARCHAR, 
	CONSTRAINT medical_appointment_procedure_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_appointment_procedure_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_appointment_procedure_confirm_user_id_fkey FOREIGN KEY(confirm_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_follicular_id_fkey FOREIGN KEY(follicular_id) REFERENCES medical_follow_follicular (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_perform_doctor_id_fkey FOREIGN KEY(perform_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_procedure_room (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_source_id_fkey FOREIGN KEY(source_id) REFERENCES medical_appointment_procedure (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_waiting_procedure_id_fkey FOREIGN KEY(waiting_procedure_id) REFERENCES medical_waiting_procedure (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_procedure_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_appointment_procedure_medical_thawing_process_rel (
	medical_thawing_process_id INTEGER NOT NULL, 
	medical_appointment_procedure_id INTEGER NOT NULL, 
	CONSTRAINT medical_appointment_procedure_medical_thawing_process_rel_pkey PRIMARY KEY (medical_thawing_process_id, medical_appointment_procedure_id), 
	CONSTRAINT medical_appointment_procedure_m_medical_thawing_process_id_fkey FOREIGN KEY(medical_thawing_process_id) REFERENCES medical_thawing_process (id) ON DELETE CASCADE, 
	CONSTRAINT medical_appointment_procedure_medical_appointment_procedur_fkey FOREIGN KEY(medical_appointment_procedure_id) REFERENCES medical_appointment_procedure (id) ON DELETE CASCADE
)


CREATE TABLE medical_appointment_re_examination (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	doctor_id INTEGER, 
	perform_doctor_id INTEGER, 
	treatment_id INTEGER, 
	sequence INTEGER NOT NULL, 
	confirm_user_id INTEGER, 
	source_id INTEGER, 
	follicular_id INTEGER, 
	company_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	message_main_attachment_id INTEGER, 
	appointment_procedure_id INTEGER, 
	wife_patient_id INTEGER, 
	husband_patient_id INTEGER, 
	name VARCHAR, 
	patient_code VARCHAR, 
	mobile VARCHAR, 
	gender VARCHAR, 
	type VARCHAR, 
	day_birth VARCHAR, 
	month_birth VARCHAR, 
	year_birth VARCHAR, 
	reason VARCHAR, 
	room VARCHAR, 
	state VARCHAR, 
	role VARCHAR, 
	reference VARCHAR, 
	indication_icsi_ivf VARCHAR, 
	indication VARCHAR, 
	indication_2 VARCHAR, 
	wife_code VARCHAR, 
	husband_code VARCHAR, 
	type_re_exam VARCHAR, 
	date DATE, 
	appointment_date DATE, 
	date_hcg DATE, 
	fet_date DATE, 
	wife_birthday DATE, 
	husband_birthday DATE, 
	re_exam_date DATE, 
	re_exam_note TEXT, 
	active BOOLEAN, 
	has_time_hcg BOOLEAN, 
	datetime_hcg TIMESTAMP WITHOUT TIME ZONE, 
	ultrasound_date TIMESTAMP WITHOUT TIME ZONE, 
	procedure_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	time_procedure DOUBLE PRECISION, 
	time_hcg DOUBLE PRECISION, 
	actual_follicle_qty VARCHAR, 
	after_retrieve_follicle_qty VARCHAR, 
	after_retrieve_follicle_state VARCHAR, 
	note VARCHAR, 
	dashboard_state VARCHAR, 
	waiting_procedure_id INTEGER, 
	room_id INTEGER, 
	waiting_sequence INTEGER, 
	wa_state VARCHAR, 
	prev_state VARCHAR, 
	CONSTRAINT medical_appointment_re_examination_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_appointment_re_examinat_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examinatio_appointment_procedure_id_fkey FOREIGN KEY(appointment_procedure_id) REFERENCES medical_appointment_procedure (id) ON DELETE CASCADE, 
	CONSTRAINT medical_appointment_re_examination_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_appointment_re_examination_confirm_user_id_fkey FOREIGN KEY(confirm_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_follicular_id_fkey FOREIGN KEY(follicular_id) REFERENCES medical_follow_follicular (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_husband_patient_id_fkey FOREIGN KEY(husband_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_perform_doctor_id_fkey FOREIGN KEY(perform_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_procedure_room (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_source_id_fkey FOREIGN KEY(source_id) REFERENCES medical_appointment_procedure (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_waiting_procedure_id_fkey FOREIGN KEY(waiting_procedure_id) REFERENCES medical_waiting_procedure (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_wife_patient_id_fkey FOREIGN KEY(wife_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_appointment_re_examination_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_appointment_re_examination_medical_thawing_process_rel (
	medical_appointment_re_examination_id INTEGER NOT NULL, 
	medical_thawing_process_id INTEGER NOT NULL, 
	CONSTRAINT medical_appointment_re_examination_medical_thawing_process_pkey PRIMARY KEY (medical_appointment_re_examination_id, medical_thawing_process_id), 
	CONSTRAINT medical_appointment_re_examin_medical_appointment_re_exami_fkey FOREIGN KEY(medical_appointment_re_examination_id) REFERENCES medical_appointment_re_examination (id) ON DELETE CASCADE, 
	CONSTRAINT medical_appointment_re_examinat_medical_thawing_process_id_fkey FOREIGN KEY(medical_thawing_process_id) REFERENCES medical_thawing_process (id) ON DELETE CASCADE
)


CREATE TABLE medical_beta_hcg_pregnant (
	id SERIAL NOT NULL, 
	patient_id INTEGER NOT NULL, 
	physican_id INTEGER, 
	treatment_id INTEGER NOT NULL, 
	treatment_result_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	treatment_type VARCHAR NOT NULL, 
	beta_hcg VARCHAR, 
	gestational_sac VARCHAR, 
	num_baby_born VARCHAR, 
	num_baby_live VARCHAR, 
	num_baby_boy VARCHAR, 
	baby_boy_weight VARCHAR, 
	numb_baby_girl VARCHAR, 
	baby_girl_weight VARCHAR, 
	methods_of_childbirth VARCHAR, 
	week_birth VARCHAR, 
	place_of_birth VARCHAR, 
	date DATE NOT NULL, 
	date_test DATE, 
	note TEXT, 
	active BOOLEAN, 
	missed_beta BOOLEAN, 
	chemical_pregnancy BOOLEAN, 
	clinical_pregnancy BOOLEAN, 
	missed_clinical_prenancy BOOLEAN, 
	stillbirth BOOLEAN, 
	ectopic_pregnancy BOOLEAN, 
	fetal_development BOOLEAN, 
	preterm_birth BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_beta_hcg_pregnant_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_beta_hcg_pregnant_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_beta_hcg_pregnant_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_beta_hcg_pregnant_physican_id_fkey FOREIGN KEY(physican_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_beta_hcg_pregnant_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_beta_hcg_pregnant_treatment_result_id_fkey FOREIGN KEY(treatment_result_id) REFERENCES medical_treatment_result (id) ON DELETE SET NULL, 
	CONSTRAINT medical_beta_hcg_pregnant_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_birth_info (
	id SERIAL NOT NULL, 
	beta_hcg_id INTEGER, 
	treatment_result_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	gender VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	weight DOUBLE PRECISION, 
	CONSTRAINT medical_birth_info_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_birth_info_beta_hcg_id_fkey FOREIGN KEY(beta_hcg_id) REFERENCES medical_beta_hcg_pregnant (id) ON DELETE SET NULL, 
	CONSTRAINT medical_birth_info_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_birth_info_treatment_result_id_fkey FOREIGN KEY(treatment_result_id) REFERENCES medical_treatment_result (id) ON DELETE SET NULL, 
	CONSTRAINT medical_birth_info_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_blood_type (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	code VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_blood_type_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_blood_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_blood_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_bottle_medium (
	id SERIAL NOT NULL, 
	treatment_medium_id INTEGER NOT NULL, 
	product_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	lot_name VARCHAR, 
	barcode VARCHAR, 
	name VARCHAR, 
	mrp_date DATE, 
	open_date DATE, 
	expire_date DATE, 
	date_prepare DATE, 
	use_date DATE, 
	note TEXT, 
	is_over BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_bottle_medium_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_bottle_medium_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_bottle_medium_product_id_fkey FOREIGN KEY(product_id) REFERENCES product_product (id) ON DELETE SET NULL, 
	CONSTRAINT medical_bottle_medium_treatment_medium_id_fkey FOREIGN KEY(treatment_medium_id) REFERENCES medical_treatment_medium (id) ON DELETE CASCADE, 
	CONSTRAINT medical_bottle_medium_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_canes (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	medical_type INTEGER, 
	qty_max INTEGER, 
	qty_residual INTEGER, 
	qty_storing INTEGER, 
	canister_position_id INTEGER, 
	tank_id INTEGER, 
	canister_id INTEGER, 
	canister_layer_id INTEGER, 
	cassette_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	sequence_cryo_container VARCHAR, 
	color VARCHAR, 
	fuction_type VARCHAR, 
	state VARCHAR NOT NULL, 
	is_empty BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_canes_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_canes_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_canister_layer_id_fkey FOREIGN KEY(canister_layer_id) REFERENCES medical_canister_layer (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_canister_position_id_fkey FOREIGN KEY(canister_position_id) REFERENCES medical_canister_position (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_cassette_id_fkey FOREIGN KEY(cassette_id) REFERENCES medical_cassette (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_canes_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_medical_type_fkey FOREIGN KEY(medical_type) REFERENCES medical_storage_tool (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_canes_position (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	cane_id INTEGER, 
	history_cane_id INTEGER, 
	canister_position_id INTEGER, 
	mt_storage_id INTEGER, 
	store_user_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	state VARCHAR, 
	type_storage VARCHAR, 
	is_thawed BOOLEAN, 
	store_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_canes_position_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_canes_position_cane_id_fkey FOREIGN KEY(cane_id) REFERENCES medical_canes (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_position_canister_position_id_fkey FOREIGN KEY(canister_position_id) REFERENCES medical_canister_position (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_position_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_position_history_cane_id_fkey FOREIGN KEY(history_cane_id) REFERENCES medical_canes (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_position_mt_storage_id_fkey FOREIGN KEY(mt_storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_position_store_user_id_fkey FOREIGN KEY(store_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canes_position_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_canister (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	tank_id INTEGER, 
	room_id INTEGER, 
	location_id INTEGER, 
	company_id INTEGER, 
	medical_type INTEGER, 
	qty_layer INTEGER, 
	qty_cryo_storage_layer INTEGER, 
	medical_qty_max INTEGER, 
	medical_qty INTEGER, 
	medical_residual INTEGER, 
	qty_cryotop_max INTEGER, 
	qty_storing INTEGER, 
	qty_cryotop_residual INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	is_full BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	free_rate DOUBLE PRECISION, 
	CONSTRAINT medical_canister_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_canister_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_medical_type_fkey FOREIGN KEY(medical_type) REFERENCES medical_storage_tool (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_canister_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_location_room (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_canister_layer (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	canister_id INTEGER NOT NULL, 
	qty_available INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_canister_layer_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_canister_layer_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_canister_layer_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_layer_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_layer_canister_layer_name_uniq UNIQUE (name, canister_id, active)
)


CREATE TABLE medical_canister_position (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	canister_id INTEGER, 
	canister_layer_id INTEGER, 
	cane_id INTEGER, 
	patient_id INTEGER, 
	qty_max INTEGER, 
	qty_storing INTEGER, 
	qty_residual INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	is_male BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_canister_position_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_canister_position_cane_id_fkey FOREIGN KEY(cane_id) REFERENCES medical_canes (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_position_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_canister_position_canister_layer_id_fkey FOREIGN KEY(canister_layer_id) REFERENCES medical_canister_layer (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_canister_position_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_position_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_canister_position_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_cassette (
	id SERIAL NOT NULL, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	use_for VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_cassette_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_cassette_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cassette_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_cause_infertility (
	id SERIAL NOT NULL, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	is_show_note BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_cause_infertility_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_cause_infertility_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cause_infertility_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cause_infertility_unique_name UNIQUE (name)
)


CREATE TABLE medical_create_culture (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	number_eggs INTEGER, 
	icsi_performance_id INTEGER, 
	enviroment_id INTEGER, 
	egg_donor_id INTEGER, 
	latest_index INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	decision VARCHAR, 
	stage_oocyte VARCHAR, 
	egg_origin VARCHAR, 
	dish_number VARCHAR, 
	enviroment_number VARCHAR, 
	egg_number VARCHAR, 
	cycle_type VARCHAR, 
	egg_type VARCHAR, 
	enviroment_oocyte_html TEXT, 
	is_group_culture BOOLEAN, 
	rescue_icsi BOOLEAN, 
	is_or_date_readonly BOOLEAN, 
	or_date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_create_culture_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_create_culture_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_create_culture_egg_donor_id_fkey FOREIGN KEY(egg_donor_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_create_culture_enviroment_id_fkey FOREIGN KEY(enviroment_id) REFERENCES enviroment_range (id) ON DELETE SET NULL, 
	CONSTRAINT medical_create_culture_icsi_performance_id_fkey FOREIGN KEY(icsi_performance_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_create_culture_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_create_culture_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_create_culture_embryo_culture_rel (
	popup_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_create_culture_embryo_culture_rel_pkey PRIMARY KEY (popup_id, culture_id), 
	CONSTRAINT medical_create_culture_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_create_culture_embryo_culture_rel_popup_id_fkey FOREIGN KEY(popup_id) REFERENCES medical_create_culture (id) ON DELETE CASCADE
)


CREATE TABLE medical_create_relation_popup (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_create_relation_popup_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_create_relation_popup_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_create_relation_popup_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_create_relation_popup_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_cryopreserv_straw (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER, 
	tool_storage_id INTEGER, 
	sequence INTEGER, 
	group_embryo_id INTEGER, 
	employee_id INTEGER, 
	empl_check_id INTEGER, 
	waiting_id INTEGER, 
	session_code_sequence INTEGER, 
	location_id INTEGER, 
	room_id INTEGER, 
	canes_id INTEGER, 
	canister_id INTEGER, 
	canister_layer_id INTEGER, 
	tank_id INTEGER, 
	user_performance INTEGER, 
	user_test INTEGER, 
	current_relationship_id INTEGER, 
	treatment_id INTEGER, 
	canes_position_id INTEGER, 
	source_thawing_id INTEGER, 
	donor_id INTEGER, 
	company_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	code VARCHAR, 
	type_cryopreserv VARCHAR, 
	type_quality VARCHAR, 
	type VARCHAR, 
	position VARCHAR, 
	session_code_bank VARCHAR, 
	code_bank VARCHAR, 
	stage VARCHAR, 
	code_bank_reference VARCHAR, 
	patient_hold VARCHAR, 
	state VARCHAR, 
	beta_result VARCHAR, 
	sequence_cryo_container VARCHAR, 
	volume VARCHAR, 
	date_expired DATE, 
	date_renewal DATE, 
	date_cancel DATE, 
	date_thawed DATE, 
	manual_note TEXT, 
	is_bank BOOLEAN, 
	choose BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	date_aspiration TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	to_remind BOOLEAN, 
	planned_reminder BOOLEAN, 
	last_retaintion_date TIMESTAMP WITHOUT TIME ZONE, 
	freezing_code VARCHAR, 
	freezing_culture_biopsy_code VARCHAR, 
	CONSTRAINT medical_cryopreserv_straw_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_cryopreserv_straw_canes_id_fkey FOREIGN KEY(canes_id) REFERENCES medical_canes (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_cryopreserv_straw_canes_position_id_fkey FOREIGN KEY(canes_position_id) REFERENCES medical_canes_position (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_canister_layer_id_fkey FOREIGN KEY(canister_layer_id) REFERENCES medical_canister_layer (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_cryopreserv_straw_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_donor_id_fkey FOREIGN KEY(donor_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_empl_check_id_fkey FOREIGN KEY(empl_check_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_group_embryo_id_fkey FOREIGN KEY(group_embryo_id) REFERENCES medical_group_embryo (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_location_room (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_source_thawing_id_fkey FOREIGN KEY(source_thawing_id) REFERENCES medical_thawing_process (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_tool_storage_id_fkey FOREIGN KEY(tool_storage_id) REFERENCES medical_storage_tool (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_user_performance_fkey FOREIGN KEY(user_performance) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_user_test_fkey FOREIGN KEY(user_test) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_waiting_id_fkey FOREIGN KEY(waiting_id) REFERENCES medical_storage_process (id) ON DELETE SET NULL, 
	CONSTRAINT medical_cryopreserv_straw_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_cryopreserv_straw_medical_renewal_reminder_rel (
	medical_cryopreserv_straw_id INTEGER NOT NULL, 
	medical_renewal_reminder_id INTEGER NOT NULL, 
	CONSTRAINT medical_cryopreserv_straw_medical_renewal_reminder_rel_pkey PRIMARY KEY (medical_cryopreserv_straw_id, medical_renewal_reminder_id), 
	CONSTRAINT medical_cryopreserv_straw_me_medical_cryopreserv_straw_id_fkey1 FOREIGN KEY(medical_cryopreserv_straw_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_cryopreserv_straw_medi_medical_renewal_reminder_id_fkey FOREIGN KEY(medical_renewal_reminder_id) REFERENCES medical_renewal_reminder (id) ON DELETE CASCADE
)


CREATE TABLE medical_cryopreserv_straw_medical_transfer_bank_rel (
	medical_transfer_bank_id INTEGER NOT NULL, 
	medical_cryopreserv_straw_id INTEGER NOT NULL, 
	CONSTRAINT medical_cryopreserv_straw_medical_transfer_bank_rel_pkey PRIMARY KEY (medical_transfer_bank_id, medical_cryopreserv_straw_id), 
	CONSTRAINT medical_cryopreserv_straw_med_medical_cryopreserv_straw_id_fkey FOREIGN KEY(medical_cryopreserv_straw_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_cryopreserv_straw_medical_medical_transfer_bank_id_fkey FOREIGN KEY(medical_transfer_bank_id) REFERENCES medical_transfer_bank (id) ON DELETE CASCADE
)


CREATE TABLE medical_cryopreserv_straw_renew_cryostraw_group_rel (
	renew_cryostraw_group_id INTEGER NOT NULL, 
	medical_cryopreserv_straw_id INTEGER NOT NULL, 
	CONSTRAINT medical_cryopreserv_straw_renew_cryostraw_group_rel_pkey PRIMARY KEY (renew_cryostraw_group_id, medical_cryopreserv_straw_id), 
	CONSTRAINT medical_cryopreserv_straw_ren_medical_cryopreserv_straw_id_fkey FOREIGN KEY(medical_cryopreserv_straw_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_cryopreserv_straw_renew_c_renew_cryostraw_group_id_fkey FOREIGN KEY(renew_cryostraw_group_id) REFERENCES renew_cryostraw_group (id) ON DELETE CASCADE
)


CREATE TABLE medical_day_of_embryo (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_day_of_embryo_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_day_of_embryo_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_day_of_embryo_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_day_of_embryo_code_uniq UNIQUE (code)
)


CREATE TABLE medical_department (
	id SERIAL NOT NULL, 
	manager_id INTEGER, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_department_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_department_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT medical_department_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_department_manager_id_fkey FOREIGN KEY(manager_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_department_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_detail_embryo_frozen (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	day_info VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_detail_embryo_frozen_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_detail_embryo_frozen_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_detail_embryo_frozen_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_detail_embryo_frozen_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_diagnostic (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_diagnostic_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_diagnostic_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_diagnostic_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_document_type (
	id SERIAL NOT NULL, 
	qty_need INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	description VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_document_type_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_document_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_document_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_embryo_biopsy_detail (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	result VARCHAR, 
	note_1 VARCHAR, 
	note_2 VARCHAR, 
	file_name VARCHAR(64), 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_embryo_biopsy_detail_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_embryo_biopsy_detail_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_biopsy_detail_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_biopsy_detail_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_embryo_culture (
	id SERIAL NOT NULL, 
	group_embryo_id INTEGER, 
	line_index INTEGER, 
	sequence INTEGER, 
	index INTEGER, 
	patient_id INTEGER, 
	treatment_id INTEGER, 
	grade_id INTEGER, 
	concentration_engment INTEGER, 
	order_contain INTEGER, 
	parent_id INTEGER, 
	icsi_performance_id INTEGER, 
	user_test INTEGER, 
	super_parent_id INTEGER, 
	day_info_0 INTEGER, 
	day_info_1 INTEGER, 
	day_info_2 INTEGER, 
	day_info_3 INTEGER, 
	day_info_4 INTEGER, 
	day_info_5 INTEGER, 
	day_info_6 INTEGER, 
	last_info INTEGER, 
	egg_donor_id INTEGER, 
	day_info_7 INTEGER, 
	pgs_employee_biopsy_id INTEGER, 
	medium_number INTEGER, 
	source_treatment_id INTEGER, 
	source_culture_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	group_embryo VARCHAR, 
	name VARCHAR, 
	decision VARCHAR, 
	note_pb VARCHAR, 
	note_zp VARCHAR, 
	note_pvs VARCHAR, 
	note_bp VARCHAR, 
	note_vac VARCHAR, 
	note_other VARCHAR, 
	note_score VARCHAR, 
	note_snb VARCHAR, 
	note_mnb VARCHAR, 
	note_icm VARCHAR, 
	note_te VARCHAR, 
	note_expansion VARCHAR, 
	info_type VARCHAR, 
	other VARCHAR, 
	note_lab VARCHAR, 
	stage VARCHAR, 
	stage_oocyte VARCHAR, 
	zygote_morphology VARCHAR, 
	qty_cell VARCHAR, 
	rate_embryo VARCHAR, 
	note_embryo VARCHAR, 
	percent_fragment VARCHAR, 
	embryo_morphology VARCHAR, 
	develop VARCHAR, 
	suport_escape_membranes VARCHAR, 
	note_escape_membranes VARCHAR, 
	note_embryo2 VARCHAR, 
	note VARCHAR, 
	video_1_name VARCHAR, 
	video_2_name VARCHAR, 
	super_parent_name VARCHAR, 
	day_of VARCHAR, 
	egg_origin VARCHAR, 
	enviroment VARCHAR, 
	check_enviroment VARCHAR, 
	display_type VARCHAR, 
	embryo_vitality_after_thaw VARCHAR, 
	cycle_type VARCHAR, 
	egg_type VARCHAR, 
	type VARCHAR, 
	first_shape_embryo VARCHAR, 
	biopsy VARCHAR, 
	biopsy_code VARCHAR, 
	biopsy_result VARCHAR, 
	biopsy_note VARCHAR, 
	file_name VARCHAR(64), 
	dish_number VARCHAR, 
	culture_type VARCHAR, 
	pgs_biopsy_date DATE, 
	is_storage BOOLEAN, 
	is_thawed BOOLEAN, 
	is_process_thawing BOOLEAN, 
	have_been_freezing BOOLEAN, 
	have_been_thawed BOOLEAN, 
	is_pb BOOLEAN, 
	is_zp BOOLEAN, 
	is_pvs BOOLEAN, 
	is_bp BOOLEAN, 
	is_vac BOOLEAN, 
	is_other BOOLEAN, 
	is_snb BOOLEAN, 
	is_mnb BOOLEAN, 
	is_fragment BOOLEAN, 
	pgt_a BOOLEAN, 
	is_history BOOLEAN, 
	choose BOOLEAN, 
	is_time BOOLEAN, 
	is_person BOOLEAN, 
	embryo_day5 BOOLEAN, 
	transfer_storage BOOLEAN, 
	rescue_icsi BOOLEAN, 
	active BOOLEAN, 
	is_pgs_header BOOLEAN, 
	is_biopsy BOOLEAN, 
	is_aoa BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	or_date TIMESTAMP WITHOUT TIME ZONE, 
	freezing_date TIMESTAMP WITHOUT TIME ZONE, 
	transfer_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	time DOUBLE PRECISION, 
	dest_culture_id INTEGER, 
	canes_position_id INTEGER, 
	process_storage_id INTEGER, 
	current_process_storage_id INTEGER, 
	state VARCHAR, 
	storage_morphology VARCHAR, 
	has_storage BOOLEAN, 
	refrozen BOOLEAN, 
	oocyte_active BOOLEAN, 
	zygote_active BOOLEAN, 
	or_date_treatment TIMESTAMP WITHOUT TIME ZONE, 
	freezing_code VARCHAR, 
	embryo_biopsy_code VARCHAR, 
	CONSTRAINT medical_embryo_culture_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_embryo_culture_canes_position_id_fkey FOREIGN KEY(canes_position_id) REFERENCES medical_canes_position (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_current_process_storage_id_fkey FOREIGN KEY(current_process_storage_id) REFERENCES medical_storage_process (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_0_fkey FOREIGN KEY(day_info_0) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_1_fkey FOREIGN KEY(day_info_1) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_2_fkey FOREIGN KEY(day_info_2) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_3_fkey FOREIGN KEY(day_info_3) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_4_fkey FOREIGN KEY(day_info_4) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_5_fkey FOREIGN KEY(day_info_5) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_6_fkey FOREIGN KEY(day_info_6) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_day_info_7_fkey FOREIGN KEY(day_info_7) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_dest_culture_id_fkey FOREIGN KEY(dest_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_egg_donor_id_fkey FOREIGN KEY(egg_donor_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_grade_id_fkey FOREIGN KEY(grade_id) REFERENCES medical_embryo_grading (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_group_embryo_id_fkey FOREIGN KEY(group_embryo_id) REFERENCES medical_group_embryo (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_icsi_performance_id_fkey FOREIGN KEY(icsi_performance_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_last_info_fkey FOREIGN KEY(last_info) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_embryo_culture_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_pgs_employee_biopsy_id_fkey FOREIGN KEY(pgs_employee_biopsy_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_process_storage_id_fkey FOREIGN KEY(process_storage_id) REFERENCES medical_storage_process (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_source_culture_id_fkey FOREIGN KEY(source_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_source_treatment_id_fkey FOREIGN KEY(source_treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_super_parent_id_fkey FOREIGN KEY(super_parent_id) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT medical_embryo_culture_user_test_fkey FOREIGN KEY(user_test) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_culture_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_embryo_detail (
	id SERIAL NOT NULL, 
	embryo_day INTEGER, 
	qty_embryo INTEGER, 
	grade_1 INTEGER, 
	grade_2 INTEGER, 
	grade_3 INTEGER, 
	grade_4 INTEGER, 
	qty_slow INTEGER, 
	qty_normal INTEGER, 
	qty_fast INTEGER, 
	qty_stop INTEGER, 
	qty_frozen INTEGER, 
	qty_continue INTEGER, 
	qty_discard INTEGER, 
	treatment_id INTEGER, 
	qty_embryo_transfer INTEGER, 
	qty_biopsy INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	day VARCHAR, 
	is_update_manual BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_embryo_detail_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_embryo_detail_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_detail_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT medical_embryo_detail_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_detail_needles_code_uniq UNIQUE (day, treatment_id)
)


CREATE TABLE medical_embryo_grading (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	alias_name VARCHAR, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_embryo_grading_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_embryo_grading_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_grading_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryo_grading_name_uniq UNIQUE (code)
)


CREATE TABLE medical_embryonic_stage (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	short_name VARCHAR, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_embryonic_stage_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_embryonic_stage_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryonic_stage_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryonic_stage_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryonic_stage_code_uniq UNIQUE (code)
)


CREATE TABLE medical_embryonic_stage_condition (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	grade_id INTEGER NOT NULL, 
	embryonic_stage_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	condition TEXT, 
	note TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_embryonic_stage_condition_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_embryonic_stage_condition_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryonic_stage_condition_embryonic_stage_id_fkey FOREIGN KEY(embryonic_stage_id) REFERENCES medical_embryonic_stage (id) ON DELETE SET NULL, 
	CONSTRAINT medical_embryonic_stage_condition_grade_id_fkey FOREIGN KEY(grade_id) REFERENCES medical_embryo_grading (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_embryonic_stage_condition_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_ex_husband (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	patient_record_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	year VARCHAR NOT NULL, 
	number_pregnancy VARCHAR, 
	number_children_alive VARCHAR, 
	number_miscarriage VARCHAR, 
	number_abortion VARCHAR, 
	number_stillbirth VARCHAR, 
	has_geu VARCHAR, 
	has_molar_pregnancy VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_ex_husband_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_ex_husband_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_ex_husband_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_ex_husband_patient_record_id_fkey FOREIGN KEY(patient_record_id) REFERENCES medical_patient_record (id) ON DELETE SET NULL, 
	CONSTRAINT medical_ex_husband_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_follicular_monitoring_decision (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	technique_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	note TEXT, 
	egg_donor BOOLEAN, 
	egg_recipient BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_follicular_monitoring_decision_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_follicular_monitoring_decision_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follicular_monitoring_decision_technique_id_fkey FOREIGN KEY(technique_id) REFERENCES medical_treatment_technique (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follicular_monitoring_decision_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follicular_monitoring_decision_code_technique_uniq UNIQUE (code, technique_id, egg_donor, egg_recipient)
)


CREATE TABLE medical_follicular_size (
	id SERIAL NOT NULL, 
	qty_left INTEGER, 
	qty_right INTEGER, 
	size INTEGER, 
	parent_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	date DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_follicular_size_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_follicular_size_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follicular_size_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES medical_follow_follicular (id) ON DELETE CASCADE, 
	CONSTRAINT medical_follicular_size_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_follow_follicular (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	treatment_id INTEGER, 
	endometrium_id INTEGER, 
	egg_donor_id INTEGER, 
	gestational_carrier_id INTEGER, 
	doctor_follow_id INTEGER, 
	inject_sperm_doctor_id INTEGER, 
	aspiration_doctor_id INTEGER, 
	doctor_transfer_id INTEGER, 
	embryonic_age_thawing INTEGER, 
	num_top_request_thawing INTEGER, 
	num_top_embryo_thawing INTEGER, 
	num_top_thawing_ovum INTEGER, 
	embryonic_age_thawing_2 INTEGER, 
	num_top_request_thawing_2 INTEGER, 
	total_follicle INTEGER, 
	total_follicle_max INTEGER, 
	decision_id INTEGER NOT NULL, 
	info_pgs_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	period VARCHAR, 
	order_week VARCHAR, 
	e2 VARCHAR, 
	lh VARCHAR, 
	fsh VARCHAR, 
	decision VARCHAR, 
	technical VARCHAR, 
	file_name VARCHAR(64), 
	indication_icsi_ivf VARCHAR, 
	type_indication_icsi_ivf VARCHAR, 
	type_indication VARCHAR, 
	ga_gant_dosage VARCHAR, 
	fsh_dosage VARCHAR, 
	lh_hmg_dosage VARCHAR, 
	cc_ai_dosage VARCHAR, 
	e2_dosage VARCHAR, 
	p4_dosage VARCHAR, 
	endometrium_technical VARCHAR, 
	note_top VARCHAR, 
	note_top_2 VARCHAR, 
	num_embryo_biopsy VARCHAR, 
	num_of_will_et VARCHAR, 
	day_embryo_transfer VARCHAR, 
	indication_icsi_endometrial VARCHAR, 
	indication VARCHAR, 
	indication_2 VARCHAR, 
	date DATE, 
	note TEXT, 
	left_ovary TEXT, 
	right_ovary TEXT, 
	note_endometrium TEXT, 
	note_right_ovary TEXT, 
	note_left_ovary TEXT, 
	summary_right_ovary TEXT, 
	summary_left_ovary TEXT, 
	summary_endometrium TEXT, 
	thawing_ovum BOOLEAN, 
	technical_is_datetime_hcg BOOLEAN, 
	technical_is_ultrasound_date BOOLEAN, 
	technical_is_date_thawing_ovum BOOLEAN, 
	technical_is_appointment_date BOOLEAN, 
	is_embryo_biopsy BOOLEAN, 
	technical_is_embryo_biopsy_date BOOLEAN, 
	timelapse BOOLEAN, 
	indication_iui2 BOOLEAN, 
	ultrasound_date TIMESTAMP WITHOUT TIME ZONE, 
	appointment_date TIMESTAMP WITHOUT TIME ZONE, 
	date_transfer_embryo TIMESTAMP WITHOUT TIME ZONE, 
	date_et TIMESTAMP WITHOUT TIME ZONE, 
	date_embryo_thawing TIMESTAMP WITHOUT TIME ZONE, 
	date_iui2 TIMESTAMP WITHOUT TIME ZONE, 
	datetime_hcg TIMESTAMP WITHOUT TIME ZONE, 
	date_thawing_ovum TIMESTAMP WITHOUT TIME ZONE, 
	date_iui1 TIMESTAMP WITHOUT TIME ZONE, 
	date_embryo_thawing_2 TIMESTAMP WITHOUT TIME ZONE, 
	embryo_freezing_date TIMESTAMP WITHOUT TIME ZONE, 
	embryo_freezing_date_2 TIMESTAMP WITHOUT TIME ZONE, 
	embryo_biopsy_date TIMESTAMP WITHOUT TIME ZONE, 
	refreezing_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	endometrium DOUBLE PRECISION, 
	qty_thawed INTEGER, 
	qty_thawed_2 INTEGER, 
	CONSTRAINT medical_follow_follicular_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_follow_follicular_aspiration_doctor_id_fkey FOREIGN KEY(aspiration_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_decision_id_fkey FOREIGN KEY(decision_id) REFERENCES medical_follicular_monitoring_decision (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_follow_follicular_doctor_follow_id_fkey FOREIGN KEY(doctor_follow_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_doctor_transfer_id_fkey FOREIGN KEY(doctor_transfer_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_egg_donor_id_fkey FOREIGN KEY(egg_donor_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_embryonic_age_thawing_2_fkey FOREIGN KEY(embryonic_age_thawing_2) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_embryonic_age_thawing_fkey FOREIGN KEY(embryonic_age_thawing) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_follow_follicular_endometrium_id_fkey FOREIGN KEY(endometrium_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_gestational_carrier_id_fkey FOREIGN KEY(gestational_carrier_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_info_pgs_id_fkey FOREIGN KEY(info_pgs_id) REFERENCES medical_pgs_info (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_inject_sperm_doctor_id_fkey FOREIGN KEY(inject_sperm_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_num_top_embryo_thawing_fkey FOREIGN KEY(num_top_embryo_thawing) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_follow_follicular_num_top_request_thawing_2_fkey FOREIGN KEY(num_top_request_thawing_2) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_follow_follicular_num_top_request_thawing_fkey FOREIGN KEY(num_top_request_thawing) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_follow_follicular_num_top_thawing_ovum_fkey FOREIGN KEY(num_top_thawing_ovum) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_follow_follicular_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_follow_follicular_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_follow_follicular_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_group_embryo (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	code VARCHAR NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_group_embryo_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_group_embryo_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_group_embryo_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_group_embryo_code_uniq UNIQUE (code)
)


CREATE TABLE medical_history_embryo_culture (
	id SERIAL NOT NULL, 
	origin_user_id INTEGER, 
	storing_user_id INTEGER, 
	thawing_user_id INTEGER, 
	tranfer_user_id INTEGER, 
	embryo_culture_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	origin_sample_model VARCHAR, 
	storing_sample_model VARCHAR, 
	fet_storing_sample_model VARCHAR, 
	thawing_sample_model VARCHAR, 
	transfer_sample_model VARCHAR, 
	fet_transfer_sample_model VARCHAR, 
	origin_date TIMESTAMP WITHOUT TIME ZONE, 
	storing_date TIMESTAMP WITHOUT TIME ZONE, 
	thawing_date TIMESTAMP WITHOUT TIME ZONE, 
	transfer_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_history_embryo_culture_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_history_embryo_culture_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_history_embryo_culture_embryo_culture_id_fkey FOREIGN KEY(embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_history_embryo_culture_origin_user_id_fkey FOREIGN KEY(origin_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_history_embryo_culture_storing_user_id_fkey FOREIGN KEY(storing_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_history_embryo_culture_thawing_user_id_fkey FOREIGN KEY(thawing_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_history_embryo_culture_tranfer_user_id_fkey FOREIGN KEY(tranfer_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_history_embryo_culture_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_history_relationship (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_history_relationship_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_history_relationship_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_history_relationship_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_hr_department_line (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_hr_department_line_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_hr_department_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_hr_department_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_icd (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name VARCHAR NOT NULL, 
	name_en VARCHAR, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_icd_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_icd_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_icd_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_image_embryo (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	can_image_1024_be_zoomed BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_image_embryo_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_image_embryo_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_image_embryo_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_image_embryo_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_image_embryo_upload_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_image_embryo_upload_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_image_embryo_upload_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_image_embryo_upload_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_initial_evaluation (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	department_id INTEGER, 
	doctor_id INTEGER, 
	nursing_id INTEGER, 
	treatment_id INTEGER, 
	staff_fall INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	pulse_rate VARCHAR, 
	blood_pressure VARCHAR, 
	breathing_rate VARCHAR, 
	spo2 VARCHAR, 
	allergy VARCHAR, 
	allergen VARCHAR, 
	is_patient_pain VARCHAR, 
	point_pain VARCHAR, 
	position_pain VARCHAR, 
	frequency_pain VARCHAR, 
	frequency_pain_other_note VARCHAR, 
	pain_character VARCHAR, 
	has_used_drug VARCHAR, 
	drug_name VARCHAR, 
	effective_drug VARCHAR, 
	is_pregnancy VARCHAR, 
	is_during_lactation VARCHAR, 
	disease_screening VARCHAR, 
	appointment VARCHAR, 
	has_travel_staff VARCHAR, 
	contact_similar_symptom_staff VARCHAR, 
	has_fever_staff VARCHAR, 
	screening_result_staff VARCHAR, 
	has_travel_nurse VARCHAR, 
	contact_similar_symptom_nurse VARCHAR, 
	has_fever_nurse VARCHAR, 
	screening_result_nurse VARCHAR, 
	needs_identified VARCHAR, 
	has_fever VARCHAR, 
	rash_lesions_skin VARCHAR, 
	has_travel VARCHAR, 
	shortness_dificulty_breath VARCHAR, 
	contact_similar_symptom VARCHAR, 
	reception_staff VARCHAR, 
	location_fall VARCHAR, 
	dizziness_fall VARCHAR, 
	standing_fall VARCHAR, 
	m12_fall VARCHAR, 
	sticker_fall VARCHAR, 
	infor_fall VARCHAR, 
	support_fall VARCHAR, 
	call_fall VARCHAR, 
	move_fall VARCHAR, 
	aid_fall VARCHAR, 
	remove_fall VARCHAR, 
	monitoring_fall VARCHAR, 
	bed_fall VARCHAR, 
	baby_fall VARCHAR, 
	orther_fall VARCHAR, 
	date DATE NOT NULL, 
	pain_start_date TIMESTAMP WITHOUT TIME ZONE, 
	date_done_staff TIMESTAMP WITHOUT TIME ZONE, 
	date_done_doctor TIMESTAMP WITHOUT TIME ZONE, 
	date_done_nursing TIMESTAMP WITHOUT TIME ZONE, 
	date_fall TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	temperature DOUBLE PRECISION, 
	height DOUBLE PRECISION, 
	weight DOUBLE PRECISION, 
	bmi DOUBLE PRECISION, 
	CONSTRAINT medical_initial_evaluation_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_initial_evaluation_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_department_id_fkey FOREIGN KEY(department_id) REFERENCES medical_department (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_nursing_id_fkey FOREIGN KEY(nursing_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_initial_evaluation_staff_fall_fkey FOREIGN KEY(staff_fall) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_initial_evaluation_prescription (
	id SERIAL NOT NULL, 
	product_id INTEGER NOT NULL, 
	prescription_usage_id INTEGER, 
	initial_evaluation_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	dose VARCHAR, 
	last_date DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_initial_evaluation_prescription_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_initial_evaluation_prescript_initial_evaluation_id_fkey FOREIGN KEY(initial_evaluation_id) REFERENCES medical_initial_evaluation (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_prescript_prescription_usage_id_fkey FOREIGN KEY(prescription_usage_id) REFERENCES medical_prescription_usage (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_prescription_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_initial_evaluation_prescription_product_id_fkey FOREIGN KEY(product_id) REFERENCES product_product (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_initial_evaluation_prescription_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_location (
	id SERIAL NOT NULL, 
	company_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	classify VARCHAR, 
	is_storage BOOLEAN, 
	is_thawing BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_location_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_location_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_location_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_location_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_location_name_uniq UNIQUE (name)
)


CREATE TABLE medical_location_room (
	id SERIAL NOT NULL, 
	company_id INTEGER NOT NULL, 
	location_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	temperature VARCHAR, 
	pm VARCHAR, 
	aqi VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_location_room_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_location_room_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_location_room_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_location_room_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT medical_location_room_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_location_room_name_uniq UNIQUE (name, company_id)
)


CREATE TABLE medical_marital_year (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	year VARCHAR, 
	notes VARCHAR, 
	have_child BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_marital_year_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_marital_year_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_marital_year_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_marital_year_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_message_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	reference_id VARCHAR NOT NULL, 
	context VARCHAR, 
	message JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_message_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_message_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_message_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_modify_patient_name_wizard (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	first_name VARCHAR, 
	middle_name VARCHAR, 
	last_name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_modify_patient_name_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_modify_patient_name_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_modify_patient_name_wizard_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_modify_patient_name_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_oocyte_freezing_info_culture_wizard (
	id SERIAL NOT NULL, 
	wz_culture_id INTEGER, 
	culture_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	choose BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_oocyte_freezing_info_culture_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_oocyte_freezing_info_culture_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_oocyte_freezing_info_culture_wizard_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_oocyte_freezing_info_culture_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_oocyte_freezing_info_culture_wizard_wz_culture_id_fkey FOREIGN KEY(wz_culture_id) REFERENCES medical_create_culture (id) ON DELETE SET NULL
)


CREATE TABLE medical_oocyte_info_culture_wizard (
	id SERIAL NOT NULL, 
	wz_culture_id INTEGER, 
	culture_id INTEGER, 
	medium_number INTEGER, 
	icsi_performance_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	stage_oocyte VARCHAR, 
	decision VARCHAR, 
	rescue_icsi BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_oocyte_info_culture_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_oocyte_info_culture_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_oocyte_info_culture_wizard_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT medical_oocyte_info_culture_wizard_icsi_performance_id_fkey FOREIGN KEY(icsi_performance_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_oocyte_info_culture_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_oocyte_info_culture_wizard_wz_culture_id_fkey FOREIGN KEY(wz_culture_id) REFERENCES medical_create_culture (id) ON DELETE SET NULL
)


CREATE TABLE medical_outpatient_examination (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	service_id INTEGER, 
	icd_diagnosis_id INTEGER, 
	num_day_re_exam INTEGER, 
	re_exam_doctor_id INTEGER, 
	doctor_id INTEGER, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	gender VARCHAR, 
	patient_code VARCHAR, 
	mobile VARCHAR, 
	service VARCHAR, 
	service2 VARCHAR, 
	pulse_rate VARCHAR, 
	blood_pressure VARCHAR, 
	breathing_rate VARCHAR, 
	past_medical_history VARCHAR, 
	history_of_allergy VARCHAR, 
	history_of_present_illness VARCHAR, 
	date DATE NOT NULL, 
	birthday DATE, 
	department TEXT, 
	chief_complaint TEXT, 
	clinical_examination TEXT, 
	initial_diagnosis TEXT, 
	principal_tests TEXT, 
	definitive_diagnosis TEXT, 
	treatment_plans TEXT, 
	recommendation TEXT, 
	is_re_xam BOOLEAN, 
	date_re_exam TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	temperature DOUBLE PRECISION, 
	height DOUBLE PRECISION, 
	weight DOUBLE PRECISION, 
	bmi DOUBLE PRECISION, 
	CONSTRAINT medical_outpatient_examination_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_outpatient_examination_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_outpatient_examination_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_outpatient_examination_icd_diagnosis_id_fkey FOREIGN KEY(icd_diagnosis_id) REFERENCES medical_icd (id) ON DELETE SET NULL, 
	CONSTRAINT medical_outpatient_examination_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_outpatient_examination_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_outpatient_examination_re_exam_doctor_id_fkey FOREIGN KEY(re_exam_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_outpatient_examination_service_id_fkey FOREIGN KEY(service_id) REFERENCES medical_test_indices (id) ON DELETE SET NULL, 
	CONSTRAINT medical_outpatient_examination_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_outpatient_examination_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	end_period_menses INTEGER, 
	end_time_menses INTEGER, 
	start_time_menses INTEGER, 
	iui_qty INTEGER, 
	ivf_qty INTEGER, 
	year_wait_child INTEGER, 
	month_wait_child INTEGER, 
	doctor_id INTEGER, 
	patient_record_count INTEGER, 
	age INTEGER, 
	company_id INTEGER NOT NULL, 
	origin_patient_id INTEGER, 
	ethnic_id INTEGER, 
	religion_id INTEGER, 
	state_id INTEGER, 
	country_id INTEGER, 
	current_relationship_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	pulse_rate VARCHAR, 
	breathing_rate VARCHAR, 
	notes_others VARCHAR, 
	is_contracept VARCHAR, 
	contraceptive VARCHAR, 
	notes_father VARCHAR, 
	notes_mother VARCHAR, 
	notes_grandparent VARCHAR, 
	has_medical_disease VARCHAR, 
	right_ovary VARCHAR, 
	left_ovary VARCHAR, 
	uterus_comment VARCHAR, 
	left_epididymis VARCHAR, 
	right_epididymis VARCHAR, 
	left_varicose_testicle VARCHAR, 
	right_varicose_testicle VARCHAR, 
	exam_inguinal_left VARCHAR, 
	exam_inguinal_right VARCHAR, 
	exam_rectal VARCHAR, 
	marital VARCHAR, 
	marriage_registration_number VARCHAR, 
	marriage_registration_place VARCHAR, 
	notes_smoking VARCHAR, 
	notes_wine VARCHAR, 
	using_drugs_note VARCHAR, 
	external_factors_note VARCHAR, 
	iui_result VARCHAR, 
	ivf_result VARCHAR, 
	use_contraception VARCHAR, 
	contraception VARCHAR, 
	semen_test VARCHAR, 
	frequence_sex_activity VARCHAR, 
	para_text VARCHAR, 
	number_pregnancy VARCHAR, 
	number_children_alive VARCHAR, 
	number_delivery VARCHAR, 
	number_caesarean_delivery VARCHAR, 
	number_premature_birth VARCHAR, 
	number_miscarriage VARCHAR, 
	number_abortion VARCHAR, 
	number_stillbirth VARCHAR, 
	has_geu VARCHAR, 
	has_molar_pregnancy VARCHAR, 
	sexual_activity_time_per_week VARCHAR, 
	has_pain_sex VARCHAR, 
	pre_number_pregnancy VARCHAR, 
	pre_number_children_alive VARCHAR, 
	pre_number_delivery VARCHAR, 
	pre_number_caesarean_delivery VARCHAR, 
	pre_number_premature_birth VARCHAR, 
	pre_number_miscarriage VARCHAR, 
	pre_number_abortion VARCHAR, 
	pre_number_stillbirth VARCHAR, 
	amenorrhea VARCHAR, 
	year_old_start_menses VARCHAR, 
	year_start_menses VARCHAR, 
	period_menses VARCHAR, 
	feature_menses VARCHAR, 
	time_menses VARCHAR, 
	volume_blood VARCHAR, 
	is_pain VARCHAR, 
	infertility VARCHAR, 
	has_disease_affects_childbirth VARCHAR, 
	has_disease_affects_childbirth_note VARCHAR, 
	medical_history VARCHAR, 
	pelvic_inflammatory_disease VARCHAR, 
	pelvic_inflammatory_disease_note VARCHAR, 
	has_historic_surgery VARCHAR, 
	surgery_geu VARCHAR, 
	surgery_cut_vt VARCHAR, 
	surgery_catheterization VARCHAR, 
	surgery_ovarian_cyst_removal VARCHAR, 
	surgery_ovarian_cancer_removal VARCHAR, 
	surgery_uterine_fibroid_removal VARCHAR, 
	surgery_vrt VARCHAR, 
	surgery_caesareans VARCHAR, 
	nipple_discharge VARCHAR, 
	nipple_discharge_note VARCHAR, 
	mental_illness_history VARCHAR, 
	family_history VARCHAR, 
	history_drug_allergy VARCHAR, 
	has_urinary_tract_infection VARCHAR, 
	had_mumps VARCHAR, 
	investigation VARCHAR, 
	tcvt_uterus VARCHAR, 
	tcvt_uterus_note VARCHAR, 
	tcvt_vt_right VARCHAR, 
	tcvt_vt_right_note VARCHAR, 
	tcvt_vt_left VARCHAR, 
	tcvt_vt_left_note VARCHAR, 
	pelvis VARCHAR, 
	abdomen VARCHAR, 
	laparoscopy_uterus VARCHAR, 
	ovaries VARCHAR, 
	laparoscopy_vt_right VARCHAR, 
	laparoscopy_vt_right_note VARCHAR, 
	laparoscopy_vt_left VARCHAR, 
	laparoscopy_vt_left_note VARCHAR, 
	vagina VARCHAR, 
	uterine_cavity VARCHAR, 
	ostias VARCHAR, 
	intervention VARCHAR, 
	blood_pressure VARCHAR, 
	pain_scale VARCHAR, 
	pain_score VARCHAR, 
	physical_examination VARCHAR, 
	hair_distribution VARCHAR, 
	breast_development VARCHAR, 
	lactation VARCHAR, 
	external_genitalia VARCHAR, 
	internal_genitalia VARCHAR, 
	hymen VARCHAR, 
	genitalia_vagina VARCHAR, 
	uterus_volume VARCHAR, 
	uterus_density VARCHAR, 
	uterus_mobility VARCHAR, 
	uterus_posture VARCHAR, 
	uterus_adnexas VARCHAR, 
	test_catheter VARCHAR, 
	penis VARCHAR, 
	swelling_scrotum VARCHAR, 
	rectal_examination VARCHAR, 
	prostate VARCHAR, 
	vesicles VARCHAR, 
	left_testicle VARCHAR, 
	left_testicle_volume VARCHAR, 
	left_epididymides VARCHAR, 
	left_vasa_deferentia VARCHAR, 
	left_varicocele VARCHAR, 
	left_inguinal_examination VARCHAR, 
	right_testicle VARCHAR, 
	right_testicle_volume VARCHAR, 
	right_epididymides VARCHAR, 
	right_vasa_deferentia VARCHAR, 
	right_varicocele VARCHAR, 
	right_inguinal_examination VARCHAR, 
	first_name VARCHAR, 
	last_name VARCHAR, 
	json_modify_name VARCHAR, 
	code VARCHAR, 
	gender VARCHAR, 
	location VARCHAR, 
	day_birth VARCHAR, 
	month_birth VARCHAR, 
	year_birth VARCHAR, 
	characters VARCHAR, 
	code_center VARCHAR, 
	internal_ref VARCHAR, 
	lang VARCHAR, 
	street VARCHAR, 
	address VARCHAR, 
	permanent_address VARCHAR, 
	mobile VARCHAR, 
	email VARCHAR, 
	id_passport VARCHAR, 
	id_card VARCHAR, 
	old_id_card VARCHAR, 
	place_issued VARCHAR, 
	career VARCHAR, 
	work_address VARCHAR, 
	role VARCHAR, 
	ultrasound_date DATE, 
	hsg_date DATE, 
	hysteroscopy_date DATE, 
	marriage_registration_date DATE, 
	tc_vt_scan_date DATE, 
	laparoscopy_date DATE, 
	diagnostic_operative_hystersoscopy_date DATE, 
	birthday DATE, 
	date_first DATE, 
	date_issued DATE, 
	notes_general TEXT, 
	systemic_disease_note TEXT, 
	female_medical_disease_note TEXT, 
	has_method_treat_infertility_used_note TEXT, 
	notes_period_menses TEXT, 
	notes_time_menses TEXT, 
	notes_blood TEXT, 
	notes_pain TEXT, 
	sexually_transmitted_disease_note TEXT, 
	male_has_sexually_transmitted_disease_note TEXT, 
	medical_history_note TEXT, 
	surgery_other_diseases TEXT, 
	has_male_surgery_note TEXT, 
	mental_illness_history_note TEXT, 
	family_history_note TEXT, 
	drug_allergy_note TEXT, 
	has_urinary_tract_infection_note TEXT, 
	had_mumps_note TEXT, 
	tcvt_note TEXT, 
	pelvis_note TEXT, 
	abdomen_note TEXT, 
	laparoscopy_uterus_note TEXT, 
	ovaries_note TEXT, 
	laparoscopy_note TEXT, 
	vagina_note TEXT, 
	uterine_cavity_note TEXT, 
	ostias_note TEXT, 
	intervention_note TEXT, 
	pain_note TEXT, 
	physical_examination_note TEXT, 
	hair_distribution_note TEXT, 
	breast_development_note TEXT, 
	lactation_note TEXT, 
	external_genitalia_note TEXT, 
	internal_genitalia_note TEXT, 
	hymen_note TEXT, 
	genitalia_vagina_note TEXT, 
	notes TEXT, 
	is_others BOOLEAN, 
	heredity_father BOOLEAN, 
	heredity_mother BOOLEAN, 
	heredity_grandparent BOOLEAN, 
	is_hsg BOOLEAN, 
	is_hysteroscopy BOOLEAN, 
	is_smoking BOOLEAN, 
	is_wine BOOLEAN, 
	is_using_drugs BOOLEAN, 
	external_factors_affected BOOLEAN, 
	show_iui BOOLEAN, 
	show_ivf BOOLEAN, 
	show_male_surgery_note BOOLEAN, 
	active BOOLEAN, 
	virtual_patient BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	temperature DOUBLE PRECISION, 
	height DOUBLE PRECISION, 
	weight DOUBLE PRECISION, 
	bmi DOUBLE PRECISION, 
	related_patient_id INTEGER, 
	amh VARCHAR, 
	fsh VARCHAR, 
	lh VARCHAR, 
	e2 VARCHAR, 
	p4 VARCHAR, 
	beta_hcg VARCHAR, 
	prolactin VARCHAR, 
	blood_type VARCHAR, 
	hiv VARCHAR, 
	hbsag VARCHAR, 
	hav VARCHAR, 
	hcv VARCHAR, 
	has_recognition BOOLEAN, 
	expected_medical_protocol_id INTEGER, 
	expected_treatment_technical VARCHAR, 
	expected_fsh_dosage VARCHAR, 
	treatment_history_summary TEXT, 
	wife_other_treatment_issue_note TEXT, 
	husband_other_treatment_issue_note TEXT, 
	is_diminished_ovarian_reserve BOOLEAN, 
	is_ovarian_endometriosis BOOLEAN, 
	is_adenomyosis BOOLEAN, 
	is_polycystic_ovary_syndrome BOOLEAN, 
	is_polycystic_ovarian_on_ultrasound BOOLEAN, 
	is_menstrual_disorders BOOLEAN, 
	is_hyperandrogenism BOOLEAN, 
	is_hypopituitarism BOOLEAN, 
	is_wife_genetic_disorder BOOLEAN, 
	is_wife_thalassemia BOOLEAN, 
	wife_other_treatment_issue BOOLEAN, 
	is_normozoospermia BOOLEAN, 
	is_retrograde_ejaculation BOOLEAN, 
	is_oligoasthenoteratozoospermia BOOLEAN, 
	is_varicocele BOOLEAN, 
	is_husband_genetic_disorder BOOLEAN, 
	is_cryptorchidism BOOLEAN, 
	is_azoospermia BOOLEAN, 
	is_obstructive BOOLEAN, 
	is_non_obstructive BOOLEAN, 
	is_husband_thalassemia BOOLEAN, 
	husband_other_treatment_issue BOOLEAN, 
	code_bank_reference VARCHAR, 
	session_code_bank_reference VARCHAR, 
	session_code_oocyte_bank_reference VARCHAR, 
	responsible_user_id INTEGER, 
	number_of_marriages INTEGER, 
	icd_refer_hospital_id INTEGER, 
	icd_initial_id INTEGER, 
	icd_definitive_id INTEGER, 
	icd_co_morbidity_id INTEGER, 
	notes_using_stimulants VARCHAR, 
	sexually_transmitted_disease_treatment VARCHAR, 
	notes_para VARCHAR, 
	has_history_of_birth_defects VARCHAR, 
	notes_history_of_birth_defects VARCHAR, 
	has_medical_disease_treatment VARCHAR, 
	notes_other_surgery_history VARCHAR, 
	has_genetic_pathology VARCHAR, 
	has_history_of_infetility_in_family VARCHAR, 
	has_history_of_birth_defects_in_family VARCHAR, 
	androgen VARCHAR, 
	left_breast_development VARCHAR, 
	right_breast_development VARCHAR, 
	secondary_genital_signs_text VARCHAR, 
	vulva_perineum_text VARCHAR, 
	vagina_text VARCHAR, 
	cervical_text VARCHAR, 
	uterus_text VARCHAR, 
	left_uterus_appendage_text VARCHAR, 
	right_uterus_appendage_text VARCHAR, 
	douglass_text VARCHAR, 
	other_parts VARCHAR, 
	uterine VARCHAR, 
	uterine_note VARCHAR, 
	uterine_tube_left VARCHAR, 
	uterine_tube_left_note VARCHAR, 
	uterine_tube_right VARCHAR, 
	uterine_tube_right_note VARCHAR, 
	uterine_pump_ultrasound VARCHAR, 
	uterine_pump_ultrasound_note VARCHAR, 
	diagnostic_hysteroscopy VARCHAR, 
	diagnostic_hysteroscopy_note VARCHAR, 
	breast_ultrasound VARCHAR, 
	breast_ultrasound_note VARCHAR, 
	mammography VARCHAR, 
	mammography_note VARCHAR, 
	cervical_cancer_screening VARCHAR, 
	cervical_cancer_screening_note VARCHAR, 
	thalassemia VARCHAR, 
	antiphospholipid VARCHAR, 
	thrombophilia VARCHAR, 
	ivf_other_reason VARCHAR, 
	left_undescended_testicles VARCHAR, 
	right_undescended_testicles VARCHAR, 
	left_dilation_surgery VARCHAR, 
	right_dilation_surgery VARCHAR, 
	sexual_desire VARCHAR, 
	frequence_sex_activity_hp VARCHAR, 
	ejaculation_disorder_hp VARCHAR, 
	erectile_dysfunction_hp VARCHAR, 
	retrograde_ejaculation_hp VARCHAR, 
	undefined_reason VARCHAR, 
	klinefelter VARCHAR, 
	dna_y VARCHAR, 
	other_dna VARCHAR, 
	cancer VARCHAR, 
	other_pain VARCHAR, 
	gnrh VARCHAR, 
	vasectomy VARCHAR, 
	vasectomy_dna VARCHAR, 
	other_reason VARCHAR, 
	erectile_dysfunction_mind VARCHAR, 
	ejaculation_disorder_sum VARCHAR, 
	left_testicular_biopsy VARCHAR, 
	right_testicular_biopsy VARCHAR, 
	testicular_biopsy_text VARCHAR, 
	karyotype VARCHAR, 
	dna_y_text VARCHAR, 
	ultrasound_text VARCHAR, 
	other_testicular VARCHAR, 
	iui_code VARCHAR, 
	ivf_code VARCHAR, 
	douglass VARCHAR, 
	environment_or_occupational_factors VARCHAR, 
	notes_genetic_pathology TEXT, 
	notes_history_of_infetility_in_family TEXT, 
	notes_history_of_birth_defects_in_family TEXT, 
	medical_history_in_family_others TEXT, 
	diagnosis TEXT, 
	treatment_plan TEXT, 
	left_vasectomy TEXT, 
	right_vasectomy TEXT, 
	diagnosis_refer_hospital TEXT, 
	initial_diagnosis TEXT, 
	definitive_diagnosis TEXT, 
	co_morbidity TEXT, 
	is_using_stimulants BOOLEAN, 
	show_medical_disease_note BOOLEAN, 
	has_other_surgery_history BOOLEAN, 
	CONSTRAINT medical_patient_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_ethnic_id_fkey FOREIGN KEY(ethnic_id) REFERENCES res_ethnic (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_expected_medical_protocol_id_fkey FOREIGN KEY(expected_medical_protocol_id) REFERENCES medical_protocol (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_icd_co_morbidity_id_fkey FOREIGN KEY(icd_co_morbidity_id) REFERENCES medical_icd (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_icd_definitive_id_fkey FOREIGN KEY(icd_definitive_id) REFERENCES medical_icd (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_icd_initial_id_fkey FOREIGN KEY(icd_initial_id) REFERENCES medical_icd (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_icd_refer_hospital_id_fkey FOREIGN KEY(icd_refer_hospital_id) REFERENCES medical_icd (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_origin_patient_id_fkey FOREIGN KEY(origin_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_related_patient_id_fkey FOREIGN KEY(related_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_religion_id_fkey FOREIGN KEY(religion_id) REFERENCES res_religion (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_responsible_user_id_fkey FOREIGN KEY(responsible_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_state_id_fkey FOREIGN KEY(state_id) REFERENCES res_country_state (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_pid_uniq UNIQUE (code)
)


CREATE TABLE medical_patient_action_freezing_wizard (
	id SERIAL NOT NULL, 
	patient_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	action_type VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_action_freezing_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_action_freezing_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_action_freezing_wizard_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_action_freezing_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_action_freezing_wizard_rel (
	wz_id INTEGER NOT NULL, 
	freezing_id INTEGER NOT NULL, 
	CONSTRAINT medical_patient_action_freezing_wizard_rel_pkey PRIMARY KEY (wz_id, freezing_id), 
	CONSTRAINT medical_patient_action_freezing_wizard_rel_freezing_id_fkey FOREIGN KEY(freezing_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_action_freezing_wizard_rel_wz_id_fkey FOREIGN KEY(wz_id) REFERENCES medical_patient_action_freezing_wizard (id) ON DELETE CASCADE
)


CREATE TABLE medical_patient_action_reference_bank (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code_bank_reference VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_action_reference_bank_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_action_reference_bank_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_action_reference_bank_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_document (
	id SERIAL NOT NULL, 
	medical_record_type_id INTEGER NOT NULL, 
	patient_id INTEGER, 
	qty_submitted INTEGER, 
	qty_need INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	date DATE, 
	notes TEXT, 
	is_submitted BOOLEAN, 
	is_full BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	status DOUBLE PRECISION, 
	CONSTRAINT medical_patient_document_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_document_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_document_medical_record_type_id_fkey FOREIGN KEY(medical_record_type_id) REFERENCES medical_record_type (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_document_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_document_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_document_submit (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	document_id INTEGER, 
	qty_submitted INTEGER, 
	qty_need INTEGER, 
	document_patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	file_name VARCHAR(64), 
	date DATE, 
	expiration_date DATE, 
	notes TEXT, 
	is_done BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	status DOUBLE PRECISION, 
	CONSTRAINT medical_patient_document_submit_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_document_submit_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_document_submit_document_id_fkey FOREIGN KEY(document_id) REFERENCES medical_document_type (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_document_submit_document_patient_id_fkey FOREIGN KEY(document_patient_id) REFERENCES medical_patient_document (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_document_submit_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_document_submit_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_medical_icd_rel (
	patient_id INTEGER NOT NULL, 
	icd_id INTEGER NOT NULL, 
	CONSTRAINT medical_patient_medical_icd_rel_pkey PRIMARY KEY (patient_id, icd_id), 
	CONSTRAINT medical_patient_medical_icd_rel_icd_id_fkey FOREIGN KEY(icd_id) REFERENCES medical_icd (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_medical_icd_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE
)


CREATE TABLE medical_patient_medical_patient_report_wizard_rel (
	medical_patient_report_wizard_id INTEGER NOT NULL, 
	medical_patient_id INTEGER NOT NULL, 
	CONSTRAINT medical_patient_medical_patient_report_wizard_rel_pkey PRIMARY KEY (medical_patient_report_wizard_id, medical_patient_id), 
	CONSTRAINT medical_patient_medical_patie_medical_patient_report_wizar_fkey FOREIGN KEY(medical_patient_report_wizard_id) REFERENCES medical_patient_report_wizard (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_medical_patient_report__medical_patient_id_fkey FOREIGN KEY(medical_patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE
)


CREATE TABLE medical_patient_partner (
	id SERIAL NOT NULL, 
	ethnic_id INTEGER, 
	religion_id INTEGER, 
	country_id INTEGER, 
	state_id INTEGER, 
	relation_patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	gender VARCHAR, 
	relation VARCHAR, 
	address VARCHAR, 
	permanent_address VARCHAR, 
	mobile VARCHAR, 
	email VARCHAR, 
	id_passport VARCHAR, 
	id_card VARCHAR, 
	old_id_card VARCHAR, 
	place_issued VARCHAR, 
	birthday DATE, 
	date_issued DATE, 
	notes TEXT, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_partner_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_partner_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_partner_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_partner_ethnic_id_fkey FOREIGN KEY(ethnic_id) REFERENCES res_ethnic (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_partner_relation_patient_id_fkey FOREIGN KEY(relation_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_partner_religion_id_fkey FOREIGN KEY(religion_id) REFERENCES res_religion (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_patient_partner_state_id_fkey FOREIGN KEY(state_id) REFERENCES res_country_state (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_partner_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_printed_report_event (
	id SERIAL NOT NULL, 
	current_patient_id INTEGER, 
	patient_id INTEGER, 
	represent_patient_id INTEGER, 
	report_id INTEGER, 
	sub_patient_id INTEGER, 
	related_sub_patient_id INTEGER, 
	relationship_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_printed_report_event_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_printed_report_even_related_sub_patient_id_fkey FOREIGN KEY(related_sub_patient_id) REFERENCES medical_patient_partner (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_current_patient_id_fkey FOREIGN KEY(current_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_relationship_id_fkey FOREIGN KEY(relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_report_id_fkey FOREIGN KEY(report_id) REFERENCES ir_act_report_xml (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_represent_patient_id_fkey FOREIGN KEY(represent_patient_id) REFERENCES medical_patient_partner (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_sub_patient_id_fkey FOREIGN KEY(sub_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_printed_report_event_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_record (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	end_period_menses INTEGER, 
	end_time_menses INTEGER, 
	start_time_menses INTEGER, 
	iui_qty INTEGER, 
	ivf_qty INTEGER, 
	year_wait_child INTEGER, 
	month_wait_child INTEGER, 
	doctor_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	current_relationship_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	pulse_rate VARCHAR, 
	breathing_rate VARCHAR, 
	notes_others VARCHAR, 
	is_contracept VARCHAR, 
	contraceptive VARCHAR, 
	notes_father VARCHAR, 
	notes_mother VARCHAR, 
	notes_grandparent VARCHAR, 
	has_medical_disease VARCHAR, 
	right_ovary VARCHAR, 
	left_ovary VARCHAR, 
	uterus_comment VARCHAR, 
	left_epididymis VARCHAR, 
	right_epididymis VARCHAR, 
	left_varicose_testicle VARCHAR, 
	right_varicose_testicle VARCHAR, 
	exam_inguinal_left VARCHAR, 
	exam_inguinal_right VARCHAR, 
	exam_rectal VARCHAR, 
	marital VARCHAR, 
	marriage_registration_number VARCHAR, 
	marriage_registration_place VARCHAR, 
	notes_smoking VARCHAR, 
	notes_wine VARCHAR, 
	using_drugs_note VARCHAR, 
	external_factors_note VARCHAR, 
	iui_result VARCHAR, 
	ivf_result VARCHAR, 
	use_contraception VARCHAR, 
	contraception VARCHAR, 
	semen_test VARCHAR, 
	frequence_sex_activity VARCHAR, 
	para_text VARCHAR, 
	number_pregnancy VARCHAR, 
	number_children_alive VARCHAR, 
	number_delivery VARCHAR, 
	number_caesarean_delivery VARCHAR, 
	number_premature_birth VARCHAR, 
	number_miscarriage VARCHAR, 
	number_abortion VARCHAR, 
	number_stillbirth VARCHAR, 
	has_geu VARCHAR, 
	has_molar_pregnancy VARCHAR, 
	sexual_activity_time_per_week VARCHAR, 
	has_pain_sex VARCHAR, 
	pre_number_pregnancy VARCHAR, 
	pre_number_children_alive VARCHAR, 
	pre_number_delivery VARCHAR, 
	pre_number_caesarean_delivery VARCHAR, 
	pre_number_premature_birth VARCHAR, 
	pre_number_miscarriage VARCHAR, 
	pre_number_abortion VARCHAR, 
	pre_number_stillbirth VARCHAR, 
	amenorrhea VARCHAR, 
	year_old_start_menses VARCHAR, 
	year_start_menses VARCHAR, 
	period_menses VARCHAR, 
	feature_menses VARCHAR, 
	time_menses VARCHAR, 
	volume_blood VARCHAR, 
	is_pain VARCHAR, 
	infertility VARCHAR, 
	has_disease_affects_childbirth VARCHAR, 
	has_disease_affects_childbirth_note VARCHAR, 
	medical_history VARCHAR, 
	pelvic_inflammatory_disease VARCHAR, 
	pelvic_inflammatory_disease_note VARCHAR, 
	has_historic_surgery VARCHAR, 
	surgery_geu VARCHAR, 
	surgery_cut_vt VARCHAR, 
	surgery_catheterization VARCHAR, 
	surgery_ovarian_cyst_removal VARCHAR, 
	surgery_ovarian_cancer_removal VARCHAR, 
	surgery_uterine_fibroid_removal VARCHAR, 
	surgery_vrt VARCHAR, 
	surgery_caesareans VARCHAR, 
	nipple_discharge VARCHAR, 
	nipple_discharge_note VARCHAR, 
	mental_illness_history VARCHAR, 
	family_history VARCHAR, 
	history_drug_allergy VARCHAR, 
	has_urinary_tract_infection VARCHAR, 
	had_mumps VARCHAR, 
	investigation VARCHAR, 
	tcvt_uterus VARCHAR, 
	tcvt_uterus_note VARCHAR, 
	tcvt_vt_right VARCHAR, 
	tcvt_vt_right_note VARCHAR, 
	tcvt_vt_left VARCHAR, 
	tcvt_vt_left_note VARCHAR, 
	pelvis VARCHAR, 
	abdomen VARCHAR, 
	laparoscopy_uterus VARCHAR, 
	ovaries VARCHAR, 
	laparoscopy_vt_right VARCHAR, 
	laparoscopy_vt_right_note VARCHAR, 
	laparoscopy_vt_left VARCHAR, 
	laparoscopy_vt_left_note VARCHAR, 
	vagina VARCHAR, 
	uterine_cavity VARCHAR, 
	ostias VARCHAR, 
	intervention VARCHAR, 
	blood_pressure VARCHAR, 
	pain_scale VARCHAR, 
	pain_score VARCHAR, 
	physical_examination VARCHAR, 
	hair_distribution VARCHAR, 
	breast_development VARCHAR, 
	lactation VARCHAR, 
	external_genitalia VARCHAR, 
	internal_genitalia VARCHAR, 
	hymen VARCHAR, 
	genitalia_vagina VARCHAR, 
	uterus_volume VARCHAR, 
	uterus_density VARCHAR, 
	uterus_mobility VARCHAR, 
	uterus_posture VARCHAR, 
	uterus_adnexas VARCHAR, 
	test_catheter VARCHAR, 
	penis VARCHAR, 
	swelling_scrotum VARCHAR, 
	rectal_examination VARCHAR, 
	prostate VARCHAR, 
	vesicles VARCHAR, 
	left_testicle VARCHAR, 
	left_testicle_volume VARCHAR, 
	left_epididymides VARCHAR, 
	left_vasa_deferentia VARCHAR, 
	left_varicocele VARCHAR, 
	left_inguinal_examination VARCHAR, 
	right_testicle VARCHAR, 
	right_testicle_volume VARCHAR, 
	right_epididymides VARCHAR, 
	right_vasa_deferentia VARCHAR, 
	right_varicocele VARCHAR, 
	right_inguinal_examination VARCHAR, 
	state VARCHAR, 
	role VARCHAR, 
	ultrasound_date DATE, 
	hsg_date DATE, 
	hysteroscopy_date DATE, 
	marriage_registration_date DATE, 
	tc_vt_scan_date DATE, 
	laparoscopy_date DATE, 
	diagnostic_operative_hystersoscopy_date DATE, 
	date DATE, 
	notes_general TEXT, 
	systemic_disease_note TEXT, 
	female_medical_disease_note TEXT, 
	has_method_treat_infertility_used_note TEXT, 
	notes_period_menses TEXT, 
	notes_time_menses TEXT, 
	notes_blood TEXT, 
	notes_pain TEXT, 
	sexually_transmitted_disease_note TEXT, 
	male_has_sexually_transmitted_disease_note TEXT, 
	medical_history_note TEXT, 
	surgery_other_diseases TEXT, 
	has_male_surgery_note TEXT, 
	mental_illness_history_note TEXT, 
	family_history_note TEXT, 
	drug_allergy_note TEXT, 
	has_urinary_tract_infection_note TEXT, 
	had_mumps_note TEXT, 
	tcvt_note TEXT, 
	pelvis_note TEXT, 
	abdomen_note TEXT, 
	laparoscopy_uterus_note TEXT, 
	ovaries_note TEXT, 
	laparoscopy_note TEXT, 
	vagina_note TEXT, 
	uterine_cavity_note TEXT, 
	ostias_note TEXT, 
	intervention_note TEXT, 
	pain_note TEXT, 
	physical_examination_note TEXT, 
	hair_distribution_note TEXT, 
	breast_development_note TEXT, 
	lactation_note TEXT, 
	external_genitalia_note TEXT, 
	internal_genitalia_note TEXT, 
	hymen_note TEXT, 
	genitalia_vagina_note TEXT, 
	is_others BOOLEAN, 
	heredity_father BOOLEAN, 
	heredity_mother BOOLEAN, 
	heredity_grandparent BOOLEAN, 
	is_hsg BOOLEAN, 
	is_hysteroscopy BOOLEAN, 
	is_smoking BOOLEAN, 
	is_wine BOOLEAN, 
	is_using_drugs BOOLEAN, 
	external_factors_affected BOOLEAN, 
	show_iui BOOLEAN, 
	show_ivf BOOLEAN, 
	show_male_surgery_note BOOLEAN, 
	active BOOLEAN, 
	approved_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	temperature DOUBLE PRECISION, 
	height DOUBLE PRECISION, 
	weight DOUBLE PRECISION, 
	bmi DOUBLE PRECISION, 
	amh VARCHAR, 
	fsh VARCHAR, 
	lh VARCHAR, 
	e2 VARCHAR, 
	p4 VARCHAR, 
	beta_hcg VARCHAR, 
	prolactin VARCHAR, 
	blood_type VARCHAR, 
	hiv VARCHAR, 
	hbsag VARCHAR, 
	hav VARCHAR, 
	hcv VARCHAR, 
	expected_medical_protocol_id INTEGER, 
	expected_treatment_technical VARCHAR, 
	expected_fsh_dosage VARCHAR, 
	treatment_history_summary TEXT, 
	wife_other_treatment_issue_note TEXT, 
	husband_other_treatment_issue_note TEXT, 
	is_diminished_ovarian_reserve BOOLEAN, 
	is_ovarian_endometriosis BOOLEAN, 
	is_adenomyosis BOOLEAN, 
	is_polycystic_ovary_syndrome BOOLEAN, 
	is_polycystic_ovarian_on_ultrasound BOOLEAN, 
	is_menstrual_disorders BOOLEAN, 
	is_hyperandrogenism BOOLEAN, 
	is_hypopituitarism BOOLEAN, 
	is_wife_genetic_disorder BOOLEAN, 
	is_wife_thalassemia BOOLEAN, 
	wife_other_treatment_issue BOOLEAN, 
	is_normozoospermia BOOLEAN, 
	is_retrograde_ejaculation BOOLEAN, 
	is_oligoasthenoteratozoospermia BOOLEAN, 
	is_varicocele BOOLEAN, 
	is_husband_genetic_disorder BOOLEAN, 
	is_cryptorchidism BOOLEAN, 
	is_azoospermia BOOLEAN, 
	is_obstructive BOOLEAN, 
	is_non_obstructive BOOLEAN, 
	is_husband_thalassemia BOOLEAN, 
	husband_other_treatment_issue BOOLEAN, 
	number_of_marriages INTEGER, 
	notes_using_stimulants VARCHAR, 
	sexually_transmitted_disease_treatment VARCHAR, 
	notes_para VARCHAR, 
	has_history_of_birth_defects VARCHAR, 
	notes_history_of_birth_defects VARCHAR, 
	has_medical_disease_treatment VARCHAR, 
	notes_other_surgery_history VARCHAR, 
	has_genetic_pathology VARCHAR, 
	has_history_of_infetility_in_family VARCHAR, 
	has_history_of_birth_defects_in_family VARCHAR, 
	androgen VARCHAR, 
	left_breast_development VARCHAR, 
	right_breast_development VARCHAR, 
	secondary_genital_signs_text VARCHAR, 
	vulva_perineum_text VARCHAR, 
	vagina_text VARCHAR, 
	cervical_text VARCHAR, 
	uterus_text VARCHAR, 
	left_uterus_appendage_text VARCHAR, 
	right_uterus_appendage_text VARCHAR, 
	douglass_text VARCHAR, 
	other_parts VARCHAR, 
	uterine VARCHAR, 
	uterine_note VARCHAR, 
	uterine_tube_left VARCHAR, 
	uterine_tube_left_note VARCHAR, 
	uterine_tube_right VARCHAR, 
	uterine_tube_right_note VARCHAR, 
	uterine_pump_ultrasound VARCHAR, 
	uterine_pump_ultrasound_note VARCHAR, 
	diagnostic_hysteroscopy VARCHAR, 
	diagnostic_hysteroscopy_note VARCHAR, 
	breast_ultrasound VARCHAR, 
	breast_ultrasound_note VARCHAR, 
	mammography VARCHAR, 
	mammography_note VARCHAR, 
	cervical_cancer_screening VARCHAR, 
	cervical_cancer_screening_note VARCHAR, 
	thalassemia VARCHAR, 
	antiphospholipid VARCHAR, 
	thrombophilia VARCHAR, 
	ivf_other_reason VARCHAR, 
	left_undescended_testicles VARCHAR, 
	right_undescended_testicles VARCHAR, 
	left_dilation_surgery VARCHAR, 
	right_dilation_surgery VARCHAR, 
	sexual_desire VARCHAR, 
	frequence_sex_activity_hp VARCHAR, 
	ejaculation_disorder_hp VARCHAR, 
	erectile_dysfunction_hp VARCHAR, 
	retrograde_ejaculation_hp VARCHAR, 
	undefined_reason VARCHAR, 
	klinefelter VARCHAR, 
	dna_y VARCHAR, 
	other_dna VARCHAR, 
	cancer VARCHAR, 
	other_pain VARCHAR, 
	gnrh VARCHAR, 
	vasectomy VARCHAR, 
	vasectomy_dna VARCHAR, 
	other_reason VARCHAR, 
	erectile_dysfunction_mind VARCHAR, 
	ejaculation_disorder_sum VARCHAR, 
	left_testicular_biopsy VARCHAR, 
	right_testicular_biopsy VARCHAR, 
	testicular_biopsy_text VARCHAR, 
	karyotype VARCHAR, 
	dna_y_text VARCHAR, 
	ultrasound_text VARCHAR, 
	other_testicular VARCHAR, 
	notes_genetic_pathology TEXT, 
	notes_history_of_infetility_in_family TEXT, 
	notes_history_of_birth_defects_in_family TEXT, 
	medical_history_in_family_others TEXT, 
	diagnosis TEXT, 
	treatment_plan TEXT, 
	is_using_stimulants BOOLEAN, 
	show_medical_disease_note BOOLEAN, 
	has_other_surgery_history BOOLEAN, 
	CONSTRAINT medical_patient_record_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_record_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_record_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_record_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_record_expected_medical_protocol_id_fkey FOREIGN KEY(expected_medical_protocol_id) REFERENCES medical_protocol (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_record_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_record_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_record_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_relationship (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	parent_id INTEGER, 
	history_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	role VARCHAR, 
	is_hide BOOLEAN, 
	active BOOLEAN, 
	is_hide_contact BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_relationship_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_relationship_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_relationship_history_id_fkey FOREIGN KEY(history_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_relationship_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_relationship_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_relationship_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_relationship_rel (
	patient_id INTEGER NOT NULL, 
	relationship_id INTEGER NOT NULL, 
	CONSTRAINT medical_patient_relationship_rel_pkey PRIMARY KEY (patient_id, relationship_id), 
	CONSTRAINT medical_patient_relationship_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_relationship_rel_relationship_id_fkey FOREIGN KEY(relationship_id) REFERENCES medical_patient_relationship (id) ON DELETE CASCADE
)


CREATE TABLE medical_patient_report_wizard (
	id SERIAL NOT NULL, 
	current_patient_id INTEGER NOT NULL, 
	medical_patient_id INTEGER NOT NULL, 
	related_patient_id INTEGER, 
	represent_patient_id INTEGER, 
	sub_medical_patient_id INTEGER, 
	related_sub_patient_id INTEGER, 
	relationship_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name_search VARCHAR, 
	is_show_sub_medical_patient BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_report_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_report_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_current_patient_id_fkey FOREIGN KEY(current_patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_report_wizard_medical_patient_id_fkey FOREIGN KEY(medical_patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_report_wizard_related_patient_id_fkey FOREIGN KEY(related_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_related_sub_patient_id_fkey FOREIGN KEY(related_sub_patient_id) REFERENCES medical_patient_partner (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_relationship_id_fkey FOREIGN KEY(relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_represent_patient_id_fkey FOREIGN KEY(represent_patient_id) REFERENCES medical_patient_partner (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_sub_medical_patient_id_fkey FOREIGN KEY(sub_medical_patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_report_wizard_line (
	id SERIAL NOT NULL, 
	wizard_id INTEGER, 
	report_printed_times INTEGER, 
	report_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	latest_printed_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_report_wizard_line_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_report_wizard_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_line_report_id_fkey FOREIGN KEY(report_id) REFERENCES ir_act_report_xml (id) ON DELETE CASCADE, 
	CONSTRAINT medical_patient_report_wizard_line_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES medical_patient_report_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_report_wizard_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_patient_treatment_process_history (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	patient_record_id INTEGER, 
	number_of_embryos INTEGER, 
	number_of_egg INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	ivf_center VARCHAR NOT NULL, 
	year VARCHAR, 
	regimen_and_dose VARCHAR, 
	embryo_transfer VARCHAR, 
	result VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_patient_treatment_process_history_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_patient_treatment_process_histor_patient_record_id_fkey FOREIGN KEY(patient_record_id) REFERENCES medical_patient_record (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_treatment_process_history_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_treatment_process_history_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_patient_treatment_process_history_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_pgs_info (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	ivf_schedule_days INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_pgs_info_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_pgs_info_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_pgs_info_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_pgs_info_name_code_uniq UNIQUE (name, code)
)


CREATE TABLE medical_pgs_info_age_thawing_rel (
	pgs_id INTEGER NOT NULL, 
	value_id INTEGER NOT NULL, 
	CONSTRAINT medical_pgs_info_age_thawing_rel_pkey PRIMARY KEY (pgs_id, value_id), 
	CONSTRAINT medical_pgs_info_age_thawing_rel_pgs_id_fkey FOREIGN KEY(pgs_id) REFERENCES medical_pgs_info (id) ON DELETE CASCADE, 
	CONSTRAINT medical_pgs_info_age_thawing_rel_value_id_fkey FOREIGN KEY(value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE medical_pgs_info_line (
	id SERIAL NOT NULL, 
	pgs_id INTEGER NOT NULL, 
	embryonic_age_thawing_id INTEGER NOT NULL, 
	schedule_days INTEGER NOT NULL, 
	sequence INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_pgs_info_line_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_pgs_info_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_pgs_info_line_embryonic_age_thawing_id_fkey FOREIGN KEY(embryonic_age_thawing_id) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_pgs_info_line_pgs_id_fkey FOREIGN KEY(pgs_id) REFERENCES medical_pgs_info (id) ON DELETE CASCADE, 
	CONSTRAINT medical_pgs_info_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_pgs_info_line_pgs_uniq UNIQUE (pgs_id, embryonic_age_thawing_id)
)


CREATE TABLE medical_prescription_order (
	id SERIAL NOT NULL, 
	doctor_id INTEGER, 
	pre_prescription_id INTEGER, 
	treatment_id INTEGER, 
	follicular_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	department_id INTEGER, 
	current_relationship_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	origin VARCHAR, 
	diagnose VARCHAR, 
	date_order DATE, 
	note TEXT, 
	is_sync BOOLEAN, 
	is_find_pre_prescription BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_prescription_order_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_prescription_order_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_department_id_fkey FOREIGN KEY(department_id) REFERENCES medical_department (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_follicular_id_fkey FOREIGN KEY(follicular_id) REFERENCES medical_follow_follicular (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_prescription_order_pre_prescription_id_fkey FOREIGN KEY(pre_prescription_id) REFERENCES medical_prescription_order (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_prescription_order_line (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	product_id INTEGER NOT NULL, 
	prescription_id INTEGER, 
	uom_id INTEGER, 
	uom_usage_id INTEGER, 
	num_day INTEGER, 
	prescription_usage_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	ingredient VARCHAR, 
	morning_note VARCHAR, 
	noon_note VARCHAR, 
	afternoon_note VARCHAR, 
	evening_note VARCHAR, 
	use_eating VARCHAR, 
	date_from DATE, 
	date_to DATE, 
	day_usage TEXT, 
	note TEXT, 
	dosage_instruction TEXT, 
	alternate BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	product_uom_qty DOUBLE PRECISION, 
	morning_qty DOUBLE PRECISION, 
	noon_qty DOUBLE PRECISION, 
	afternoon_qty DOUBLE PRECISION, 
	evening_qty DOUBLE PRECISION, 
	price_unit DOUBLE PRECISION, 
	subtotal DOUBLE PRECISION, 
	total DOUBLE PRECISION, 
	CONSTRAINT medical_prescription_order_line_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_prescription_order_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_line_prescription_id_fkey FOREIGN KEY(prescription_id) REFERENCES medical_prescription_order (id) ON DELETE CASCADE, 
	CONSTRAINT medical_prescription_order_line_prescription_usage_id_fkey FOREIGN KEY(prescription_usage_id) REFERENCES medical_prescription_usage (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_line_product_id_fkey FOREIGN KEY(product_id) REFERENCES product_product (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_prescription_order_line_uom_id_fkey FOREIGN KEY(uom_id) REFERENCES uom_uom (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_line_uom_usage_id_fkey FOREIGN KEY(uom_usage_id) REFERENCES uom_uom (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_order_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_prescription_usage (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_prescription_usage_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_prescription_usage_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_prescription_usage_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_procedure_room (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	code VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_procedure_room_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_procedure_room_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_procedure_room_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_process_pgt (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_process_pgt_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_process_pgt_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_process_pgt_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_process_pgt_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_process_pgt_embryo_culture_rel (
	process_pgt_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_process_pgt_embryo_culture_rel_pkey PRIMARY KEY (process_pgt_id, culture_id), 
	CONSTRAINT medical_process_pgt_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_process_pgt_embryo_culture_rel_process_pgt_id_fkey FOREIGN KEY(process_pgt_id) REFERENCES medical_process_pgt (id) ON DELETE CASCADE
)


CREATE TABLE medical_process_storage (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_process_storage_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_process_storage_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_process_storage_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_process_storage_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_process_storage_embryo_culture_rel (
	popup_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_process_storage_embryo_culture_rel_pkey PRIMARY KEY (popup_id, culture_id), 
	CONSTRAINT medical_process_storage_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_process_storage_embryo_culture_rel_popup_id_fkey FOREIGN KEY(popup_id) REFERENCES medical_process_storage (id) ON DELETE CASCADE
)


CREATE TABLE medical_process_transfer (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_process_transfer_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_process_transfer_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_process_transfer_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_process_transfer_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_process_transfer_embryo_culture_rel (
	popup_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_process_transfer_embryo_culture_rel_pkey PRIMARY KEY (popup_id, culture_id), 
	CONSTRAINT medical_process_transfer_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_process_transfer_embryo_culture_rel_popup_id_fkey FOREIGN KEY(popup_id) REFERENCES medical_process_transfer (id) ON DELETE CASCADE
)


CREATE TABLE medical_protocol (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	description TEXT, 
	is_show_note BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_protocol_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_protocol_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_protocol_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_protocol_unique_name UNIQUE (name)
)


CREATE TABLE medical_record_document (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	document_type_id INTEGER NOT NULL, 
	medical_record_type_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	is_required BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_record_document_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_record_document_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_record_document_document_type_id_fkey FOREIGN KEY(document_type_id) REFERENCES medical_document_type (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_record_document_medical_record_type_id_fkey FOREIGN KEY(medical_record_type_id) REFERENCES medical_record_type (id) ON DELETE SET NULL, 
	CONSTRAINT medical_record_document_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_record_type (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_record_type_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_record_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_record_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_refrozen_wizard (
	id SERIAL NOT NULL, 
	thaw_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	reason TEXT NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_refrozen_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_refrozen_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_refrozen_wizard_thaw_id_fkey FOREIGN KEY(thaw_id) REFERENCES medical_thawing_process (id) ON DELETE CASCADE, 
	CONSTRAINT medical_refrozen_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_renewal (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	subdivision VARCHAR, 
	type VARCHAR, 
	state VARCHAR, 
	period VARCHAR NOT NULL, 
	date_renewal DATE, 
	extended_end_date DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	number_renewal DOUBLE PRECISION NOT NULL, 
	CONSTRAINT medical_renewal_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_renewal_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_renewal_line (
	id SERIAL NOT NULL, 
	cryopreserv_id INTEGER, 
	number_renewal INTEGER, 
	renewal_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type_renewal VARCHAR, 
	description VARCHAR, 
	date_renewal DATE, 
	date_new DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_renewal_line_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_renewal_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_line_cryopreserv_id_fkey FOREIGN KEY(cryopreserv_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_line_renewal_id_fkey FOREIGN KEY(renewal_id) REFERENCES medical_renewal (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_renewal_reminder (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	done_user_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	state VARCHAR NOT NULL, 
	type_cryopreserv VARCHAR, 
	type_cryopreserv_name VARCHAR, 
	issued_date DATE, 
	date DATE, 
	active BOOLEAN, 
	planned BOOLEAN, 
	reminded BOOLEAN, 
	reminded_date TIMESTAMP WITHOUT TIME ZONE, 
	date_done TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_renewal_reminder_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_renewal_reminder_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_done_user_id_fkey FOREIGN KEY(done_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_renewal_reminder_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_renewal_reminder_log (
	id SERIAL NOT NULL, 
	reminder_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_renewal_reminder_log_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_renewal_reminder_log_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_log_reminder_id_fkey FOREIGN KEY(reminder_id) REFERENCES medical_renewal_reminder (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_log_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_renewal_reminder_log_line (
	id SERIAL NOT NULL, 
	reminder_id INTEGER, 
	reminder_log_id INTEGER, 
	user_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	note TEXT, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_renewal_reminder_log_line_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_renewal_reminder_log_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_log_line_reminder_id_fkey FOREIGN KEY(reminder_id) REFERENCES medical_renewal_reminder (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_log_line_reminder_log_id_fkey FOREIGN KEY(reminder_log_id) REFERENCES medical_renewal_reminder_log (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_log_line_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_log_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_renewal_reminder_queue (
	id SERIAL NOT NULL, 
	res_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	channel VARCHAR NOT NULL, 
	state VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_renewal_reminder_queue_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_renewal_reminder_queue_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_renewal_reminder_queue_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_renewal_storage_sample_storage_rel (
	renewal_id INTEGER NOT NULL, 
	cryopreserv_id INTEGER NOT NULL, 
	CONSTRAINT medical_renewal_storage_sample_storage_rel_pkey PRIMARY KEY (renewal_id, cryopreserv_id), 
	CONSTRAINT medical_renewal_storage_sample_storage_rel_cryopreserv_id_fkey FOREIGN KEY(cryopreserv_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_renewal_storage_sample_storage_rel_renewal_id_fkey FOREIGN KEY(renewal_id) REFERENCES medical_renewal (id) ON DELETE CASCADE
)


CREATE TABLE medical_state_menses (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	description VARCHAR, 
	date DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_state_menses_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_state_menses_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_state_menses_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_state_menses_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_storage_configuration (
	id SERIAL NOT NULL, 
	default_duration INTEGER NOT NULL, 
	remind_before INTEGER NOT NULL, 
	recurring_interval INTEGER, 
	max_recurring_time INTEGER, 
	batch_remind_within INTEGER, 
	email_template_id INTEGER, 
	sms_template_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	type VARCHAR, 
	sms_provider VARCHAR, 
	set_retaintion_reminder BOOLEAN NOT NULL, 
	recurring_reminder BOOLEAN NOT NULL, 
	remind_all BOOLEAN, 
	remind_by_email BOOLEAN, 
	remind_by_sms BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_storage_configuration_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_storage_configuration_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_configuration_email_template_id_fkey FOREIGN KEY(email_template_id) REFERENCES mail_template (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_configuration_sms_template_id_fkey FOREIGN KEY(sms_template_id) REFERENCES sms_template (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_configuration_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_configuration_type_uniq UNIQUE (type)
)


CREATE TABLE medical_storage_embryo_culture_rel (
	storage_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_storage_embryo_culture_rel_pkey PRIMARY KEY (storage_id, culture_id), 
	CONSTRAINT medical_storage_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_storage_embryo_culture_rel_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE
)


CREATE TABLE medical_storage_history (
	id SERIAL NOT NULL, 
	frozen_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	location_id INTEGER, 
	room_id INTEGER, 
	tank_id INTEGER, 
	canister_id INTEGER, 
	canister_layer_id INTEGER, 
	pos_canister_id INTEGER, 
	cane_id INTEGER, 
	pos_cane_id INTEGER, 
	device_id INTEGER, 
	group_embryo_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	sequence_cryo_container VARCHAR, 
	operation VARCHAR, 
	pos_device VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_storage_history_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_storage_history_cane_id_fkey FOREIGN KEY(cane_id) REFERENCES medical_canes (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_storage_history_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_canister_layer_id_fkey FOREIGN KEY(canister_layer_id) REFERENCES medical_canister_layer (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_device_id_fkey FOREIGN KEY(device_id) REFERENCES medical_storage_tool (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_frozen_id_fkey FOREIGN KEY(frozen_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_group_embryo_id_fkey FOREIGN KEY(group_embryo_id) REFERENCES medical_group_embryo (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_storage_history_pos_cane_id_fkey FOREIGN KEY(pos_cane_id) REFERENCES medical_canes_position (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_storage_history_pos_canister_id_fkey FOREIGN KEY(pos_canister_id) REFERENCES medical_canister_position (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_location_room (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_history_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_storage_process (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER, 
	employee_id INTEGER, 
	supervisor_id INTEGER, 
	location_id INTEGER, 
	tank_id INTEGER, 
	department_id INTEGER, 
	company_id INTEGER, 
	mobility INTEGER, 
	empl_storage_id INTEGER, 
	empl_storage_checker_id INTEGER, 
	treatment_id INTEGER, 
	qty_culture_residual INTEGER, 
	blood_type_id INTEGER, 
	current_relationship_id INTEGER, 
	egg_donor_id INTEGER, 
	thawing_id INTEGER, 
	certificate_id INTEGER, 
	skin_color_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	type VARCHAR, 
	reason VARCHAR, 
	state VARCHAR, 
	detail VARCHAR, 
	cryopreserv_method VARCHAR, 
	embryo_stage VARCHAR, 
	day_of VARCHAR, 
	reason_freezing_sperm VARCHAR, 
	cycle_type_default VARCHAR, 
	egg_type_default VARCHAR, 
	egg_origin_default VARCHAR, 
	sperm_storage_sample VARCHAR, 
	normal_morphology VARCHAR, 
	first_hiv VARCHAR, 
	first_hbv VARCHAR, 
	first_hcv VARCHAR, 
	second_hiv VARCHAR, 
	second_hbv VARCHAR, 
	second_hcv VARCHAR, 
	sample_origin VARCHAR, 
	date DATE, 
	first_immunological_test_date DATE, 
	second_immunological_test_date DATE, 
	note TEXT, 
	after_note TEXT, 
	male_note TEXT, 
	volume_after_stored_sperm NUMERIC, 
	concentration_after_stored_sperm NUMERIC, 
	pr_after_stored_sperm NUMERIC, 
	np_after_stored_sperm NUMERIC, 
	im_after_stored_sperm NUMERIC, 
	active BOOLEAN, 
	show_reason_freezing_sperm_note BOOLEAN, 
	show_reason_freezing_sperm_other_center BOOLEAN, 
	have_been_freezing BOOLEAN, 
	date_or TIMESTAMP WITHOUT TIME ZONE, 
	date_cold_stored_perm TIMESTAMP WITHOUT TIME ZONE, 
	freezing_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	percent_sp_after DOUBLE PRECISION, 
	height DOUBLE PRECISION, 
	disable_reminder BOOLEAN, 
	analyse_archive_id INTEGER, 
	tube_5ml_check_id INTEGER, 
	cryotube_check_id INTEGER, 
	freezing_code VARCHAR, 
	biopsy_code VARCHAR, 
	freezing_sperm_donor_code VARCHAR, 
	avoid_ejaculation_date VARCHAR, 
	liquefaction_viscosity VARCHAR, 
	round_cell VARCHAR, 
	general_note VARCHAR, 
	before_note TEXT, 
	volume_before_stored_sperm NUMERIC, 
	density_before_stored_sperm NUMERIC, 
	pr_before_stored_sperm NUMERIC, 
	np_before_stored_sperm NUMERIC, 
	im_before_stored_sperm NUMERIC, 
	volume_sperm_stored_cryotube NUMERIC, 
	density_trial_thaw NUMERIC, 
	pr_trial_thaw NUMERIC, 
	sp_trial_thaw NUMERIC, 
	np_trial_thaw NUMERIC, 
	im_trial_thaw NUMERIC, 
	efficiency_trial_thaw NUMERIC, 
	date_of_producing TIMESTAMP WITHOUT TIME ZONE, 
	date_analysis TIMESTAMP WITHOUT TIME ZONE, 
	percent_sp DOUBLE PRECISION, 
	CONSTRAINT medical_storage_process_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_storage_process_analyse_archive_id_fkey FOREIGN KEY(analyse_archive_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_blood_type_id_fkey FOREIGN KEY(blood_type_id) REFERENCES medical_blood_type (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_certificate_id_fkey FOREIGN KEY(certificate_id) REFERENCES education_certificate (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_cryotube_check_id_fkey FOREIGN KEY(cryotube_check_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_department_id_fkey FOREIGN KEY(department_id) REFERENCES medical_location_room (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_egg_donor_id_fkey FOREIGN KEY(egg_donor_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_empl_storage_checker_id_fkey FOREIGN KEY(empl_storage_checker_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_empl_storage_id_fkey FOREIGN KEY(empl_storage_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_storage_process_skin_color_id_fkey FOREIGN KEY(skin_color_id) REFERENCES skin_color (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_supervisor_id_fkey FOREIGN KEY(supervisor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_thawing_id_fkey FOREIGN KEY(thawing_id) REFERENCES medical_thawing_process (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_tube_5ml_check_id_fkey FOREIGN KEY(tube_5ml_check_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_storage_process_environment (
	id SERIAL NOT NULL, 
	archive_medium_id INTEGER NOT NULL, 
	waiting_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	expired_date DATE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_storage_process_environment_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_storage_process_environment_archive_medium_id_fkey FOREIGN KEY(archive_medium_id) REFERENCES product_template (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_storage_process_environment_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_environment_waiting_id_fkey FOREIGN KEY(waiting_id) REFERENCES medical_storage_process (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_process_environment_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_storage_tool (
	id SERIAL NOT NULL, 
	vendor_id INTEGER, 
	number INTEGER, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	len_version VARCHAR, 
	type VARCHAR, 
	fuction_type VARCHAR, 
	is_male BOOLEAN, 
	is_show_position BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_storage_tool_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_storage_tool_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_tool_vendor_id_fkey FOREIGN KEY(vendor_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_tool_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_storage_tool_name_uniq UNIQUE (name, type)
)


CREATE TABLE medical_tank (
	id SERIAL NOT NULL, 
	room_id INTEGER NOT NULL, 
	sequence INTEGER, 
	location_id INTEGER, 
	storage_tool_id INTEGER NOT NULL, 
	number INTEGER NOT NULL, 
	qty_layer INTEGER, 
	qty_cane_per_layer INTEGER NOT NULL, 
	canister_qty INTEGER, 
	cane_qty INTEGER, 
	cane_used_qty INTEGER, 
	cane_residual_qty INTEGER, 
	qty_position INTEGER, 
	qty_use INTEGER, 
	qty_residual INTEGER, 
	size INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	fuction_type VARCHAR, 
	state VARCHAR, 
	color VARCHAR, 
	temperature VARCHAR, 
	volume VARCHAR, 
	liquid_level VARCHAR, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	position_h DOUBLE PRECISION, 
	position_v DOUBLE PRECISION, 
	CONSTRAINT medical_tank_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_tank_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_tank_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT medical_tank_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_location_room (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_tank_storage_tool_id_fkey FOREIGN KEY(storage_tool_id) REFERENCES medical_storage_tool (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_tank_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_tank_name_uniq UNIQUE (name, room_id, active)
)


CREATE TABLE medical_test (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	doctor_id INTEGER NOT NULL, 
	physican_id INTEGER, 
	test_category_id INTEGER, 
	validate_user_id INTEGER, 
	validate_employee_id INTEGER, 
	company_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	barcode VARCHAR, 
	state VARCHAR, 
	active BOOLEAN, 
	received_date TIMESTAMP WITHOUT TIME ZONE, 
	done_date TIMESTAMP WITHOUT TIME ZONE, 
	validate_time TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	current_relationship_id INTEGER, 
	treatment_id INTEGER, 
	perform_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_test_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_test_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_test_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_test_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_test_physican_id_fkey FOREIGN KEY(physican_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_test_category_id_fkey FOREIGN KEY(test_category_id) REFERENCES medical_test_category (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT medical_test_validate_employee_id_fkey FOREIGN KEY(validate_employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_validate_user_id_fkey FOREIGN KEY(validate_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_test_category (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	barcode VARCHAR, 
	type VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_test_category_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_test_category_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_category_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_category_code_uniq UNIQUE (code)
)


CREATE TABLE medical_test_follow_treatment_wizard (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	test_id INTEGER, 
	follow_treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_test_follow_treatment_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_test_follow_treatment_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_follow_treatment_wizard_follow_treatment_id_fkey FOREIGN KEY(follow_treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_follow_treatment_wizard_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_follow_treatment_wizard_test_id_fkey FOREIGN KEY(test_id) REFERENCES medical_test (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_follow_treatment_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_test_follow_treatment_wizard_medical_treatment_rel (
	medical_test_follow_treatment_wizard_id INTEGER NOT NULL, 
	medical_treatment_id INTEGER NOT NULL, 
	CONSTRAINT medical_test_follow_treatment_wizard_medical_treatment_rel_pkey PRIMARY KEY (medical_test_follow_treatment_wizard_id, medical_treatment_id), 
	CONSTRAINT medical_test_follow_treatment_medical_test_follow_treatmen_fkey FOREIGN KEY(medical_test_follow_treatment_wizard_id) REFERENCES medical_test_follow_treatment_wizard (id) ON DELETE CASCADE, 
	CONSTRAINT medical_test_follow_treatment_wizard__medical_treatment_id_fkey FOREIGN KEY(medical_treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE medical_test_group (
	id SERIAL NOT NULL, 
	test_category_id INTEGER, 
	section_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	type VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_test_group_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_test_group_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_group_section_id_fkey FOREIGN KEY(section_id) REFERENCES medical_test_indices (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_group_test_category_id_fkey FOREIGN KEY(test_category_id) REFERENCES medical_test_category (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_group_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_test_indices (
	id SERIAL NOT NULL, 
	test_category_id INTEGER NOT NULL, 
	test_group_id INTEGER, 
	uom_id INTEGER, 
	sequence INTEGER, 
	default_choice_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name_english VARCHAR, 
	shortname VARCHAR, 
	code VARCHAR, 
	ims_code VARCHAR, 
	multi_type VARCHAR NOT NULL, 
	display_type VARCHAR, 
	type VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	male_ref JSONB, 
	female_ref JSONB, 
	python_compute TEXT, 
	active BOOLEAN, 
	is_compute BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	prices DOUBLE PRECISION, 
	CONSTRAINT medical_test_indices_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_test_indices_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_indices_default_choice_id_fkey FOREIGN KEY(default_choice_id) REFERENCES medical_test_indices_result_selection (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_indices_test_category_id_fkey FOREIGN KEY(test_category_id) REFERENCES medical_test_category (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_test_indices_test_group_id_fkey FOREIGN KEY(test_group_id) REFERENCES medical_test_group (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_indices_uom_id_fkey FOREIGN KEY(uom_id) REFERENCES uom_uom (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_indices_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_test_indices_medical_test_indices_result_selection_rel (
	medical_test_indices_id INTEGER NOT NULL, 
	medical_test_indices_result_selection_id INTEGER NOT NULL, 
	CONSTRAINT medical_test_indices_medical_test_indices_result_selection_pkey PRIMARY KEY (medical_test_indices_id, medical_test_indices_result_selection_id), 
	CONSTRAINT medical_test_indices_medical__medical_test_indices_result__fkey FOREIGN KEY(medical_test_indices_result_selection_id) REFERENCES medical_test_indices_result_selection (id) ON DELETE CASCADE, 
	CONSTRAINT medical_test_indices_medical_test__medical_test_indices_id_fkey FOREIGN KEY(medical_test_indices_id) REFERENCES medical_test_indices (id) ON DELETE CASCADE
)


CREATE TABLE medical_test_indices_result_selection (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_test_indices_result_selection_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_test_indices_result_selection_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_indices_result_selection_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_indices_result_selection_code_uniq UNIQUE (code)
)


CREATE TABLE medical_test_indices_treatment_test_subscriber_rel (
	treatment_test_subscriber_id INTEGER NOT NULL, 
	medical_test_indices_id INTEGER NOT NULL, 
	CONSTRAINT medical_test_indices_treatment_test_subscriber_rel_pkey PRIMARY KEY (treatment_test_subscriber_id, medical_test_indices_id), 
	CONSTRAINT medical_test_indices_treatmen_treatment_test_subscriber_id_fkey FOREIGN KEY(treatment_test_subscriber_id) REFERENCES treatment_test_subscriber (id) ON DELETE CASCADE, 
	CONSTRAINT medical_test_indices_treatment_tes_medical_test_indices_id_fkey FOREIGN KEY(medical_test_indices_id) REFERENCES medical_test_indices (id) ON DELETE CASCADE
)


CREATE TABLE medical_test_result (
	id SERIAL NOT NULL, 
	test_id INTEGER, 
	patient_id INTEGER, 
	test_indices_id INTEGER NOT NULL, 
	test_category_id INTEGER, 
	test_group_id INTEGER, 
	uom_id INTEGER, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	state VARCHAR, 
	result VARCHAR, 
	display_type VARCHAR, 
	male_ref JSONB, 
	female_ref JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_test_result_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_test_result_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_result_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_result_test_category_id_fkey FOREIGN KEY(test_category_id) REFERENCES medical_test_category (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_result_test_group_id_fkey FOREIGN KEY(test_group_id) REFERENCES medical_test_group (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_result_test_id_fkey FOREIGN KEY(test_id) REFERENCES medical_test (id) ON DELETE CASCADE, 
	CONSTRAINT medical_test_result_test_indices_id_fkey FOREIGN KEY(test_indices_id) REFERENCES medical_test_indices (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_test_result_uom_id_fkey FOREIGN KEY(uom_id) REFERENCES uom_uom (id) ON DELETE SET NULL, 
	CONSTRAINT medical_test_result_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_thaw_bank_popup (
	id SERIAL NOT NULL, 
	current_relationship_id INTEGER, 
	patient_id INTEGER, 
	treatment_id INTEGER, 
	blood_type_id INTEGER, 
	certificate_id INTEGER, 
	skin_color_id INTEGER, 
	embryonic_age_thawing_id INTEGER, 
	employee_id INTEGER, 
	supervisor_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code_patient_transfer_bank VARCHAR, 
	thawing_state VARCHAR, 
	type VARCHAR, 
	reason VARCHAR, 
	is_biopsy BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	height DOUBLE PRECISION, 
	CONSTRAINT medical_thaw_bank_popup_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_thaw_bank_popup_blood_type_id_fkey FOREIGN KEY(blood_type_id) REFERENCES medical_blood_type (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_certificate_id_fkey FOREIGN KEY(certificate_id) REFERENCES education_certificate (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_embryonic_age_thawing_id_fkey FOREIGN KEY(embryonic_age_thawing_id) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_skin_color_id_fkey FOREIGN KEY(skin_color_id) REFERENCES skin_color (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_supervisor_id_fkey FOREIGN KEY(supervisor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_bank_popup_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_thaw_popup (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	embryonic_age_thawing_id INTEGER, 
	num_top_thawing_id INTEGER, 
	employee_id INTEGER, 
	supervisor_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	gender VARCHAR, 
	technical VARCHAR, 
	reason VARCHAR, 
	date_thawing DATE, 
	note_thawing TEXT, 
	is_straw_empty BOOLEAN, 
	is_thawed_remain BOOLEAN, 
	is_changed_storage BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_thaw_popup_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_thaw_popup_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_popup_embryonic_age_thawing_id_fkey FOREIGN KEY(embryonic_age_thawing_id) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_thaw_popup_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_popup_num_top_thawing_id_fkey FOREIGN KEY(num_top_thawing_id) REFERENCES selection_value (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_thaw_popup_supervisor_id_fkey FOREIGN KEY(supervisor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_popup_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_popup_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_thaw_popup_detail (
	id SERIAL NOT NULL, 
	wz_id INTEGER, 
	straw_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	choose BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_thaw_popup_detail_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_thaw_popup_detail_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_popup_detail_straw_id_fkey FOREIGN KEY(straw_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_thaw_popup_detail_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thaw_popup_detail_wz_id_fkey FOREIGN KEY(wz_id) REFERENCES medical_thaw_popup (id) ON DELETE SET NULL
)


CREATE TABLE medical_thaw_sample_bank_popup_sample_storage (
	thaw_id INTEGER NOT NULL, 
	storage_id INTEGER NOT NULL, 
	CONSTRAINT medical_thaw_sample_bank_popup_sample_storage_pkey PRIMARY KEY (thaw_id, storage_id), 
	CONSTRAINT medical_thaw_sample_bank_popup_sample_storage_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_thaw_sample_bank_popup_sample_storage_thaw_id_fkey FOREIGN KEY(thaw_id) REFERENCES medical_thaw_bank_popup (id) ON DELETE CASCADE
)


CREATE TABLE medical_thaw_sample_popup_thaw_origin_popup_rel (
	popup_id INTEGER NOT NULL, 
	storage_id INTEGER NOT NULL, 
	CONSTRAINT medical_thaw_sample_popup_thaw_origin_popup_rel_pkey PRIMARY KEY (popup_id, storage_id), 
	CONSTRAINT medical_thaw_sample_popup_thaw_origin_popup_rel_popup_id_fkey FOREIGN KEY(popup_id) REFERENCES medical_thaw_popup (id) ON DELETE CASCADE, 
	CONSTRAINT medical_thaw_sample_popup_thaw_origin_popup_rel_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE
)


CREATE TABLE medical_thawing_process (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER, 
	employee_id INTEGER, 
	supervisor_id INTEGER, 
	location_id INTEGER, 
	tank_id INTEGER, 
	department_id INTEGER, 
	company_id INTEGER NOT NULL, 
	treatment_id INTEGER, 
	cryopreserv_id INTEGER, 
	appointment_procedure_id INTEGER, 
	current_relationship_id INTEGER, 
	embryonic_age_thawing_id INTEGER, 
	canister_id INTEGER, 
	canister_layer_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	type VARCHAR, 
	reason VARCHAR, 
	state VARCHAR, 
	usage VARCHAR, 
	reason_cancel VARCHAR, 
	date DATE, 
	active BOOLEAN, 
	is_refrozen BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_thawing_process_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_thawing_process_appointment_procedure_id_fkey FOREIGN KEY(appointment_procedure_id) REFERENCES medical_appointment_procedure (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_canister_layer_id_fkey FOREIGN KEY(canister_layer_id) REFERENCES medical_canister_layer (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_thawing_process_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_cryopreserv_id_fkey FOREIGN KEY(cryopreserv_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_department_id_fkey FOREIGN KEY(department_id) REFERENCES medical_location_room (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_embryonic_age_thawing_id_fkey FOREIGN KEY(embryonic_age_thawing_id) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_supervisor_id_fkey FOREIGN KEY(supervisor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_thawing_process_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_transfer_bank (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	transfer_type VARCHAR, 
	sample_type VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_transfer_bank_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_transfer_bank_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_transfer_bank_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	doctor_id INTEGER, 
	technique_id INTEGER, 
	stage_id INTEGER, 
	time_month INTEGER, 
	time_year INTEGER, 
	medical_protocol_id INTEGER, 
	egg_donor_id INTEGER, 
	surrogacy_id INTEGER, 
	gestational_carrier_id INTEGER, 
	aspiration_doctor_id INTEGER, 
	employee_support_id INTEGER, 
	anesthesiologist_id INTEGER, 
	qty_expected INTEGER, 
	qty_or INTEGER, 
	qty_oocyte_separation INTEGER, 
	doctor_transfer_id INTEGER, 
	employee_supported_transfer_id INTEGER, 
	empl_lab_load_id INTEGER, 
	empl_lab_check_id INTEGER, 
	parent_id INTEGER, 
	qty_oocyte_retrieval INTEGER, 
	qty_gv INTEGER, 
	qty_m2_0 INTEGER, 
	qty_m2 INTEGER, 
	qty_deg INTEGER, 
	qty_abs INTEGER, 
	qty_m1_to_m2 INTEGER, 
	qty_m1 INTEGER, 
	qty_oocyte_icsi INTEGER, 
	qty_degenerate INTEGER, 
	qty_fertilized INTEGER, 
	qty_3pn INTEGER, 
	qty_gt_3pn INTEGER, 
	qty_discard_1 INTEGER, 
	qty_2pn INTEGER, 
	qty_2pb INTEGER, 
	qty_2tb INTEGER, 
	qty_continue_1 INTEGER, 
	qty_1pn INTEGER, 
	qty_frozen_1 INTEGER, 
	qty_1tb_1 INTEGER, 
	qty_deg_1 INTEGER, 
	qty_gv_m1_to_m2 INTEGER, 
	qty_oocyte_from_m2 INTEGER, 
	sperm_washer_id INTEGER, 
	percent_im INTEGER, 
	surgeon_id INTEGER, 
	expert_lab_id INTEGER, 
	diagnostic_id INTEGER, 
	inject_sperm_doctor_id INTEGER, 
	company_id INTEGER NOT NULL, 
	fertility_specialist_id INTEGER, 
	current_relationship_id INTEGER, 
	number_oocyte INTEGER, 
	icsi_performance_id INTEGER, 
	qty_frozen INTEGER, 
	qty_discard INTEGER, 
	qty_continue INTEGER, 
	concentration_2nd INTEGER, 
	percent_pr_2nd INTEGER, 
	percent_np_2nd INTEGER, 
	percent_im_2nd INTEGER, 
	normal_morphology_2nd INTEGER, 
	concentration_washed_2nd INTEGER, 
	note_pr_2nd INTEGER, 
	note_np_2nd INTEGER, 
	note_im_2nd INTEGER, 
	normal_morphology_aft_2nd INTEGER, 
	qty_oocytes_thawed INTEGER, 
	treatment_diagnosis_male_id INTEGER, 
	qty_deformed_ovules INTEGER, 
	qty_oocyte_rupture INTEGER, 
	qty_embryos_leftover INTEGER, 
	no_fet_straws INTEGER, 
	embryo_d3_culture_d5_manual INTEGER, 
	qty_embryos_re_freezing_manual INTEGER, 
	qty_oocytes_survived INTEGER, 
	inject_sperm_doctor_2nd_id INTEGER, 
	employee_support_2nd_id INTEGER, 
	ohss_state_id INTEGER, 
	history_ohss_state_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	patient_code VARCHAR, 
	role VARCHAR, 
	technical VARCHAR, 
	times_use VARCHAR, 
	times_surgery VARCHAR, 
	para VARCHAR, 
	infertility_cause_note VARCHAR, 
	protocol_note VARCHAR, 
	sperm_bank_code VARCHAR, 
	embryo_bank_code VARCHAR, 
	order_menses VARCHAR, 
	qty_expected_text VARCHAR, 
	qty_or_note VARCHAR, 
	qty_oocyte_text VARCHAR, 
	qty_oocyte_separation_note VARCHAR, 
	needle_id VARCHAR, 
	needles_code VARCHAR, 
	note_aspiration VARCHAR, 
	method_aspiration VARCHAR, 
	note_other VARCHAR, 
	state_after VARCHAR, 
	note_after VARCHAR, 
	note_empl VARCHAR, 
	transfer_embryo VARCHAR, 
	uterus_contraction VARCHAR, 
	embryo_transfer_state VARCHAR, 
	catheter VARCHAR, 
	type_catheter VARCHAR, 
	note_type VARCHAR, 
	is_use_tool_support VARCHAR, 
	note_tool_support VARCHAR, 
	is_anesthesia VARCHAR, 
	note_anesthesia VARCHAR, 
	viscous VARCHAR, 
	blood VARCHAR, 
	qty_oocyte_retrieval_text VARCHAR, 
	qty_gv_text VARCHAR, 
	qty_m2_0_text VARCHAR, 
	qty_continue_text VARCHAR, 
	qty_m2_text VARCHAR, 
	qty_deg_text VARCHAR, 
	qty_abs_text VARCHAR, 
	qty_m1_to_m2_text VARCHAR, 
	qty_frozen_text VARCHAR, 
	qty_m1_text VARCHAR, 
	qty_oocyte_icsi_text VARCHAR, 
	qty_degenerate_text VARCHAR, 
	qty_discard_text VARCHAR, 
	qty_fertilized_text VARCHAR, 
	qty_3pn_text VARCHAR, 
	qty_gt_3pn_text VARCHAR, 
	qty_discard_1_text VARCHAR, 
	qty_2pn_text VARCHAR, 
	qty_continue_1_text VARCHAR, 
	qty_1pn_text VARCHAR, 
	qty_frozen_1_text VARCHAR, 
	qty_1tb_1_text VARCHAR, 
	qty_deg_1_text VARCHAR, 
	qty_gv_m1_to_m2_text VARCHAR, 
	qty_oocyte_from_m2_text VARCHAR, 
	avoid_ejaculation_date VARCHAR, 
	other VARCHAR, 
	normal_morphology VARCHAR, 
	method_preparation VARCHAR, 
	medium_preparation VARCHAR, 
	normal_morphology_aft VARCHAR, 
	preparation_1 VARCHAR, 
	preparation_2 VARCHAR, 
	fragmentation VARCHAR, 
	result_after_pt VARCHAR, 
	note_pt VARCHAR, 
	corpuscle VARCHAR, 
	state_inject VARCHAR, 
	note_injecting_sperm VARCHAR, 
	is_inject_sperm_2nd VARCHAR, 
	note_injecting_sperm_2nd VARCHAR, 
	catheter_inject_sperm VARCHAR, 
	type_tool_inject VARCHAR, 
	note_type_tool VARCHAR, 
	viscous_catheter VARCHAR, 
	blood_catheter VARCHAR, 
	is_use_tool VARCHAR, 
	note_use_tool VARCHAR, 
	note_injecting_sperm_other VARCHAR, 
	note_injecting_sperm_other_2nd VARCHAR, 
	qty_embryo_transfer VARCHAR, 
	embryo_grade_1 VARCHAR, 
	embryo_grade_2 VARCHAR, 
	embryo_grade_3 VARCHAR, 
	embryo_grade_4 VARCHAR, 
	qty_et_discard_embryos VARCHAR, 
	qty_remain_frozen_embryos VARCHAR, 
	egg_origin VARCHAR, 
	sperm_procedure VARCHAR, 
	standard_sperm_count VARCHAR, 
	note_sperm VARCHAR, 
	conclude_sperm VARCHAR, 
	v_sample_right VARCHAR, 
	concentration_sperm_right VARCHAR, 
	normal_morphology_sperm_right VARCHAR, 
	v_sample_left VARCHAR, 
	concentration_sperm_left VARCHAR, 
	normal_morphology_sperm_left VARCHAR, 
	avoid_ejaculation_date_2nd VARCHAR, 
	method_preparation_2nd VARCHAR, 
	medium_preparation_2nd VARCHAR, 
	note_other_2nd VARCHAR, 
	reason_cancel VARCHAR, 
	iui_sperm_seperation_method_note VARCHAR, 
	qty_deformed_ovules_text VARCHAR, 
	qty_oocyte_rupture_text VARCHAR, 
	qty_embryo_frozen VARCHAR, 
	storage_embryo_grade_1 VARCHAR, 
	storage_embryo_grade_2 VARCHAR, 
	storage_embryo_grade_3 VARCHAR, 
	storage_embryo_grade_4 VARCHAR, 
	qty_embryo_thawed VARCHAR, 
	thawed_embryo_grade_1 VARCHAR, 
	thawed_embryo_grade_2 VARCHAR, 
	thawed_embryo_grade_3 VARCHAR, 
	thawed_embryo_grade_4 VARCHAR, 
	sperm_volume VARCHAR, 
	sperm_concentration VARCHAR, 
	sperm_motility VARCHAR, 
	sperm_normal_morphology VARCHAR, 
	culti_note VARCHAR, 
	wife_normal_morphology VARCHAR, 
	qty_oocytes_thawed_text VARCHAR, 
	qty_oocytes_survived_text VARCHAR, 
	general_embryo_biopsy_file_name VARCHAR(64), 
	general_embryo_biopsy VARCHAR, 
	actual_follicle_qty VARCHAR, 
	culture_table_lock_status VARCHAR, 
	state_inject_2 VARCHAR, 
	catheter_inject_sperm_2nd VARCHAR, 
	type_tool_inject_2 VARCHAR, 
	note_type_tool_2 VARCHAR, 
	viscous_catheter_2 VARCHAR, 
	blood_catheter_2 VARCHAR, 
	is_use_tool_2 VARCHAR, 
	note_use_tool_2 VARCHAR, 
	note_injecting_sperm_other_second VARCHAR, 
	note_injecting_sperm_other_second_2nd VARCHAR, 
	share_oocytes_note VARCHAR, 
	treatment_plan VARCHAR, 
	treatment_plan_manual VARCHAR, 
	history_drug_allergy VARCHAR, 
	egg_donor_history_drug_allergy VARCHAR, 
	last_mentrual_period DATE, 
	egg_donor_last_mentrual_period DATE, 
	gestational_carrier_lmp DATE, 
	date_or DATE, 
	start_date DATE, 
	description TEXT, 
	solution TEXT, 
	state_tranfer TEXT, 
	sperm_before_preparation_note TEXT, 
	left_epididymis TEXT, 
	right_epididymis TEXT, 
	tissue_left TEXT, 
	tissue_right TEXT, 
	state_inject_after TEXT, 
	note_sperm_info TEXT, 
	egg_note_info TEXT, 
	indication_embryo_d2 TEXT, 
	indication_embryo_d3 TEXT, 
	indication_embryo_d5 TEXT, 
	sperm_before_preparation_note_2nd TEXT, 
	indication_embryo_d6 TEXT, 
	indication_embryo_other TEXT, 
	complications TEXT, 
	embryo_transfer_state_note TEXT, 
	sperm_note_text TEXT, 
	sperm_conclusion_text TEXT, 
	indication_embryo_d7 TEXT, 
	state_inject_after_2 TEXT, 
	complications_2 TEXT, 
	fsh_dose TEXT, 
	plan_note TEXT, 
	drug_allergy_note TEXT, 
	egg_donor_drug_allergy_note TEXT, 
	volume NUMERIC, 
	concentration NUMERIC, 
	percent_pr NUMERIC, 
	percent_np NUMERIC, 
	concentration_washed NUMERIC, 
	percent_pr_after NUMERIC, 
	percent_np_after NUMERIC, 
	percent_im_after NUMERIC, 
	total_sperm_aft NUMERIC, 
	total_sperm_aft_2nd NUMERIC, 
	wife_concentration NUMERIC, 
	wife_volume NUMERIC, 
	wife_percent_sp NUMERIC, 
	wife_percent_pr NUMERIC, 
	wife_percent_np NUMERIC, 
	active BOOLEAN, 
	show_note_cause BOOLEAN, 
	show_note_protocol BOOLEAN, 
	use_donor_oocytes BOOLEAN, 
	is_surrogacy BOOLEAN, 
	use_gestational_carrier BOOLEAN, 
	thawing_egg BOOLEAN, 
	is_storage BOOLEAN, 
	sperm_frozen BOOLEAN, 
	is_pesa BOOLEAN, 
	is_tese BOOLEAN, 
	use_sperm_donor BOOLEAN, 
	use_embryo_donor BOOLEAN, 
	is_aoa BOOLEAN, 
	thawing_embryo BOOLEAN, 
	is_transfer_2 BOOLEAN, 
	is_embryo_leftover BOOLEAN, 
	is_refreezing BOOLEAN, 
	is_clean BOOLEAN, 
	is_viscous BOOLEAN, 
	is_blood BOOLEAN, 
	created_result BOOLEAN, 
	is_fresh BOOLEAN, 
	is_sperm_storage BOOLEAN, 
	is_td_receive BOOLEAN, 
	is_sperm_bank BOOLEAN, 
	is_fresh_surgery BOOLEAN, 
	is_fresh_bank BOOLEAN, 
	is_pr BOOLEAN, 
	is_np BOOLEAN, 
	is_other BOOLEAN, 
	is_follow_other BOOLEAN, 
	is_clean_catheter BOOLEAN, 
	is_viscous_catheter BOOLEAN, 
	is_blood_catheter BOOLEAN, 
	technical_is_date_of_appointment BOOLEAN, 
	embryo_d2 BOOLEAN, 
	embryo_d3 BOOLEAN, 
	embryo_d4 BOOLEAN, 
	embryo_d5 BOOLEAN, 
	embryo_d6 BOOLEAN, 
	is_fresh_2nd BOOLEAN, 
	is_frozen_sperm_2nd BOOLEAN, 
	is_sperm_pesa_tese_2nd BOOLEAN, 
	is_sperm_bank_2nd BOOLEAN, 
	is_fresh_surgery_2nd BOOLEAN, 
	is_fresh_bank_2nd BOOLEAN, 
	is_pr2 BOOLEAN, 
	is_np2 BOOLEAN, 
	is_other_2nd BOOLEAN, 
	is_follow_other2 BOOLEAN, 
	is_ultrasound_today BOOLEAN, 
	is_frozen BOOLEAN, 
	is_cancel BOOLEAN, 
	is_locked BOOLEAN, 
	is_micro_tese BOOLEAN, 
	storage_sperm BOOLEAN, 
	sperm_bank BOOLEAN, 
	is_update_manual_day_0 BOOLEAN, 
	is_update_manual_day_1 BOOLEAN, 
	culti_pgs BOOLEAN, 
	culti_pgt_m BOOLEAN, 
	culti_pgt_sr BOOLEAN, 
	culti_pgt_one BOOLEAN, 
	culti_pgt_quick BOOLEAN, 
	culti_pgt_a_m BOOLEAN, 
	culti_time_lapse BOOLEAN, 
	is_indication_iui2 BOOLEAN, 
	culti_aoa BOOLEAN, 
	culti_ah BOOLEAN, 
	is_culture BOOLEAN, 
	embryo_d7 BOOLEAN, 
	fresh_embryo_d7 BOOLEAN, 
	lock_day_info_0 BOOLEAN, 
	lock_day_info_1 BOOLEAN, 
	lock_day_info_2 BOOLEAN, 
	lock_day_info_3 BOOLEAN, 
	lock_day_info_4 BOOLEAN, 
	lock_day_info_5 BOOLEAN, 
	lock_day_info_6 BOOLEAN, 
	lock_day_info_7 BOOLEAN, 
	is_clean_catheter_2 BOOLEAN, 
	is_viscous_catheter_2 BOOLEAN, 
	is_blood_catheter_2 BOOLEAN, 
	fresh_sperm BOOLEAN, 
	collect_eggs BOOLEAN, 
	share_oocytes BOOLEAN, 
	is_mesa BOOLEAN, 
	timelapse BOOLEAN, 
	is_ohss BOOLEAN, 
	is_history_ohss BOOLEAN, 
	or_date TIMESTAMP WITHOUT TIME ZONE, 
	date_transfer TIMESTAMP WITHOUT TIME ZONE, 
	preparation_date TIMESTAMP WITHOUT TIME ZONE, 
	collected_sperm_date TIMESTAMP WITHOUT TIME ZONE, 
	received_date TIMESTAMP WITHOUT TIME ZONE, 
	testicular_surgery_date TIMESTAMP WITHOUT TIME ZONE, 
	inject_sperm_date TIMESTAMP WITHOUT TIME ZONE, 
	date_of_appointment TIMESTAMP WITHOUT TIME ZONE, 
	preparation_date_2nd TIMESTAMP WITHOUT TIME ZONE, 
	collected_sperm_date_2nd TIMESTAMP WITHOUT TIME ZONE, 
	received_date_2nd TIMESTAMP WITHOUT TIME ZONE, 
	ultrasound_date TIMESTAMP WITHOUT TIME ZONE, 
	date_embryo_thawing TIMESTAMP WITHOUT TIME ZONE, 
	date_iui2 TIMESTAMP WITHOUT TIME ZONE, 
	appointment_date TIMESTAMP WITHOUT TIME ZONE, 
	inject_sperm_date_2nd TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	mobility DOUBLE PRECISION, 
	preparation_time DOUBLE PRECISION, 
	preparation_time_done DOUBLE PRECISION, 
	volume_after DOUBLE PRECISION, 
	volume_2nd DOUBLE PRECISION, 
	mobility_2nd DOUBLE PRECISION, 
	preparation_time_2nd DOUBLE PRECISION, 
	preparation_time_done_2nd DOUBLE PRECISION, 
	volume_after_2nd DOUBLE PRECISION, 
	percent_sp DOUBLE PRECISION, 
	percent_sp_after DOUBLE PRECISION, 
	culture_finish_day VARCHAR, 
	culture_finish_date TIMESTAMP WITHOUT TIME ZONE, 
	beta_hcg_id INTEGER, 
	scheduled_perform_id INTEGER, 
	day_use_fsh INTEGER, 
	anesthesia_method_id INTEGER, 
	procedure_doctor_id INTEGER, 
	employee_support_1_id INTEGER, 
	employee_support_2_id INTEGER, 
	employee_support_3_id INTEGER, 
	wife_weight INTEGER, 
	wife_height INTEGER, 
	husband_progressive INTEGER, 
	husband_non_progressive INTEGER, 
	husband_immotile INTEGER, 
	husband_hdbt INTEGER, 
	pre_embryologist_id INTEGER, 
	post_environment_prep_id INTEGER, 
	pre_witness_id INTEGER, 
	post_witness_id INTEGER, 
	post_double_check_embryologist_id INTEGER, 
	post_embryologist_transfer_id INTEGER, 
	post_embryologist_receiver_id INTEGER, 
	catheter_transfer_embryo_id INTEGER, 
	embryo_freezing_code VARCHAR, 
	oocyte_freezing_code VARCHAR, 
	biopsy_code VARCHAR, 
	treatment_diagnosis VARCHAR, 
	treatment_gestational_age VARCHAR, 
	no_of_ultrasound_gestational_sacs VARCHAR, 
	treatment_no_of_embryo_will_reduced VARCHAR, 
	history_of_allergy VARCHAR, 
	allergen VARCHAR, 
	duration_infertility VARCHAR, 
	clomid VARCHAR, 
	ovofar_fsh VARCHAR, 
	drug_fsh_other VARCHAR, 
	dosage_fsh VARCHAR, 
	endometrial_thickness VARCHAR, 
	gestational_age VARCHAR, 
	ultrasound_before_procedure VARCHAR, 
	num_embryo_will_reduced VARCHAR, 
	diagnosis_before VARCHAR, 
	diagnosis_after VARCHAR, 
	treatment_method VARCHAR, 
	blood_loss VARCHAR, 
	medical_implant_register VARCHAR, 
	patient_sample VARCHAR, 
	wife_indicated VARCHAR, 
	wife_regimen VARCHAR, 
	wife_menstrual_cycle VARCHAR, 
	wife_menstrual_date VARCHAR, 
	wife_test_amh VARCHAR, 
	wife_test_prl VARCHAR, 
	wife_test_fsh VARCHAR, 
	wife_test_progesterone VARCHAR, 
	wife_test_testosterone VARCHAR, 
	wife_test_e2 VARCHAR, 
	wife_test_lh VARCHAR, 
	wife_test_hcg VARCHAR, 
	wife_endoscopic_btc VARCHAR, 
	wife_endoscopic_vt_p VARCHAR, 
	wife_endoscopic_vt_t VARCHAR, 
	wife_ultrasound_btc VARCHAR, 
	wife_ultrasound_bt_t VARCHAR, 
	wife_ultrasound_bt_p VARCHAR, 
	husband_result VARCHAR, 
	husband_other_test VARCHAR, 
	liquefaction VARCHAR, 
	semen_color VARCHAR, 
	viscosity VARCHAR, 
	agglutination VARCHAR, 
	round_cell VARCHAR, 
	time_transfer_embryo VARCHAR, 
	catheter_transfer_embryo_note VARCHAR, 
	other_treatment TEXT, 
	show_drug_fsh_other BOOLEAN, 
	day_performance_processes TIMESTAMP WITHOUT TIME ZONE, 
	treatment_procedure_date TIMESTAMP WITHOUT TIME ZONE, 
	date_transfer_receive TIMESTAMP WITHOUT TIME ZONE, 
	wife_freezing_volume DOUBLE PRECISION, 
	wife_freezing_concentration DOUBLE PRECISION, 
	wife_freezing_percent_pr DOUBLE PRECISION, 
	wife_freezing_percent_np DOUBLE PRECISION, 
	wife_bmi DOUBLE PRECISION, 
	husband_concentration DOUBLE PRECISION, 
	CONSTRAINT medical_treatment_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_anesthesia_method_id_fkey FOREIGN KEY(anesthesia_method_id) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_anesthesiologist_id_fkey FOREIGN KEY(anesthesiologist_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_aspiration_doctor_id_fkey FOREIGN KEY(aspiration_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_beta_hcg_id_fkey FOREIGN KEY(beta_hcg_id) REFERENCES medical_beta_hcg_pregnant (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_catheter_transfer_embryo_id_fkey FOREIGN KEY(catheter_transfer_embryo_id) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_treatment_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_current_relationship_id_fkey FOREIGN KEY(current_relationship_id) REFERENCES medical_history_relationship (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_diagnostic_id_fkey FOREIGN KEY(diagnostic_id) REFERENCES medical_diagnostic (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_treatment_doctor_transfer_id_fkey FOREIGN KEY(doctor_transfer_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_egg_donor_id_fkey FOREIGN KEY(egg_donor_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_empl_lab_check_id_fkey FOREIGN KEY(empl_lab_check_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_empl_lab_load_id_fkey FOREIGN KEY(empl_lab_load_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_employee_support_1_id_fkey FOREIGN KEY(employee_support_1_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_employee_support_2_id_fkey FOREIGN KEY(employee_support_2_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_employee_support_2nd_id_fkey FOREIGN KEY(employee_support_2nd_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_employee_support_3_id_fkey FOREIGN KEY(employee_support_3_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_employee_support_id_fkey FOREIGN KEY(employee_support_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_employee_supported_transfer_id_fkey FOREIGN KEY(employee_supported_transfer_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_expert_lab_id_fkey FOREIGN KEY(expert_lab_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_fertility_specialist_id_fkey FOREIGN KEY(fertility_specialist_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_gestational_carrier_id_fkey FOREIGN KEY(gestational_carrier_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_history_ohss_state_id_fkey FOREIGN KEY(history_ohss_state_id) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_icsi_performance_id_fkey FOREIGN KEY(icsi_performance_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_inject_sperm_doctor_2nd_id_fkey FOREIGN KEY(inject_sperm_doctor_2nd_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_inject_sperm_doctor_id_fkey FOREIGN KEY(inject_sperm_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_medical_protocol_id_fkey FOREIGN KEY(medical_protocol_id) REFERENCES medical_protocol (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_ohss_state_id_fkey FOREIGN KEY(ohss_state_id) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_treatment_post_double_check_embryologist_id_fkey FOREIGN KEY(post_double_check_embryologist_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_post_embryologist_receiver_id_fkey FOREIGN KEY(post_embryologist_receiver_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_post_embryologist_transfer_id_fkey FOREIGN KEY(post_embryologist_transfer_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_post_environment_prep_id_fkey FOREIGN KEY(post_environment_prep_id) REFERENCES selection_value (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_post_witness_id_fkey FOREIGN KEY(post_witness_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_pre_embryologist_id_fkey FOREIGN KEY(pre_embryologist_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_pre_witness_id_fkey FOREIGN KEY(pre_witness_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_procedure_doctor_id_fkey FOREIGN KEY(procedure_doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_scheduled_perform_id_fkey FOREIGN KEY(scheduled_perform_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_sperm_washer_id_fkey FOREIGN KEY(sperm_washer_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_stage_id_fkey FOREIGN KEY(stage_id) REFERENCES medical_treatment_stage (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_treatment_surgeon_id_fkey FOREIGN KEY(surgeon_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_surrogacy_id_fkey FOREIGN KEY(surrogacy_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_technique_id_fkey FOREIGN KEY(technique_id) REFERENCES medical_treatment_technique (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_treatment_diagnosis_male_id_fkey FOREIGN KEY(treatment_diagnosis_male_id) REFERENCES medical_diagnostic (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_needles_code_uniq UNIQUE (needles_code)
)


CREATE TABLE medical_treatment_convert_wizard (
	id SERIAL NOT NULL, 
	treatment_id INTEGER NOT NULL, 
	technique_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_treatment_convert_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_convert_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_convert_wizard_technique_id_fkey FOREIGN KEY(technique_id) REFERENCES medical_treatment_technique (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_convert_wizard_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_convert_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment_document (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	document_file_name VARCHAR(64), 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_treatment_document_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_document_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_document_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_document_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment_embryo_biopsy_detail_rel (
	treatment_id INTEGER NOT NULL, 
	embryo_biopsy_detail_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_embryo_biopsy_detail_rel_pkey PRIMARY KEY (treatment_id, embryo_biopsy_detail_id), 
	CONSTRAINT medical_treatment_embryo_biopsy_de_embryo_biopsy_detail_id_fkey FOREIGN KEY(embryo_biopsy_detail_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_embryo_biopsy_detail_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_embryo_culture_storage_rel (
	treatment_archvie_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_embryo_culture_storage_rel_pkey PRIMARY KEY (treatment_archvie_id, culture_id), 
	CONSTRAINT medical_treatment_embryo_culture_stor_treatment_archvie_id_fkey FOREIGN KEY(treatment_archvie_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_embryo_culture_storage_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_embryo_culture_thaw_rel (
	treatment_thaw_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_embryo_culture_thaw_rel_pkey PRIMARY KEY (treatment_thaw_id, culture_id), 
	CONSTRAINT medical_treatment_embryo_culture_thaw_re_treatment_thaw_id_fkey FOREIGN KEY(treatment_thaw_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_embryo_culture_thaw_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_medium (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	sequence INTEGER, 
	medium_type_id INTEGER, 
	technique_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	gender VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_treatment_medium_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_medium_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_medium_medium_type_id_fkey FOREIGN KEY(medium_type_id) REFERENCES medium_type (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_medium_technique_id_fkey FOREIGN KEY(technique_id) REFERENCES medical_treatment_technique (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_medium_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_medium_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment_patient_progress (
	id SERIAL NOT NULL, 
	treatment_id INTEGER, 
	employee_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	progress_note VARCHAR, 
	intervention VARCHAR, 
	date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_treatment_patient_progress_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_patient_progress_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_patient_progress_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_patient_progress_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_patient_progress_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment_relationship_rel (
	treatment_id INTEGER NOT NULL, 
	relationship_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_relationship_rel_pkey PRIMARY KEY (treatment_id, relationship_id), 
	CONSTRAINT medical_treatment_relationship_rel_relationship_id_fkey FOREIGN KEY(relationship_id) REFERENCES medical_patient_relationship (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_relationship_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_result (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	doctor_id INTEGER, 
	times INTEGER, 
	treatment_id INTEGER, 
	company_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	day_birth VARCHAR, 
	month_birth VARCHAR, 
	year_birth VARCHAR, 
	mobile VARCHAR, 
	email VARCHAR, 
	technical VARCHAR, 
	action VARCHAR, 
	index VARCHAR, 
	conclude VARCHAR, 
	gestational_sac VARCHAR, 
	note_gestational_sac VARCHAR, 
	note_expected VARCHAR, 
	num_baby_born VARCHAR, 
	number_boy VARCHAR, 
	number_girl VARCHAR, 
	num_baby_live VARCHAR, 
	methods_of_childbirth VARCHAR, 
	weight_baby_boy VARCHAR, 
	weight_baby_girl VARCHAR, 
	week_birth VARCHAR, 
	stillbirth_note VARCHAR, 
	date_test DATE, 
	date_remind DATE, 
	date DATE, 
	date_expected DATE, 
	birth_date DATE, 
	ultrasound_date_expected DATE, 
	is_color BOOLEAN, 
	missed_beta BOOLEAN, 
	missed_clinical_prenancy BOOLEAN, 
	chemical_pregnancy BOOLEAN, 
	clinical_pregnancy BOOLEAN, 
	fetal_development BOOLEAN, 
	preterm_birth BOOLEAN, 
	stillbirth BOOLEAN, 
	ectopic_pregnancy BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	gestational_sac_digit INTEGER, 
	num_baby_live_digit INTEGER, 
	date_transfer TIMESTAMP WITHOUT TIME ZONE, 
	inject_sperm_date TIMESTAMP WITHOUT TIME ZONE, 
	index_digit DOUBLE PRECISION, 
	place_of_birth VARCHAR, 
	born_note VARCHAR, 
	range_old_id INTEGER, 
	embryo_day VARCHAR, 
	chemical_pregnancy_note VARCHAR, 
	CONSTRAINT medical_treatment_result_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_result_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT medical_treatment_result_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_result_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_result_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_result_range_old_id_fkey FOREIGN KEY(range_old_id) REFERENCES range_years_old (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_result_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_result_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment_result_beta (
	id SERIAL NOT NULL, 
	result_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	index VARCHAR, 
	note VARCHAR, 
	date DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_treatment_result_beta_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_result_beta_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_result_beta_result_id_fkey FOREIGN KEY(result_id) REFERENCES medical_treatment_result (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_result_beta_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment_result_patient_rel (
	result_id INTEGER NOT NULL, 
	patient_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_result_patient_rel_pkey PRIMARY KEY (result_id, patient_id), 
	CONSTRAINT medical_treatment_result_patient_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_result_patient_rel_result_id_fkey FOREIGN KEY(result_id) REFERENCES medical_treatment_result (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_stage (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	technique_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	domain VARCHAR, 
	gender VARCHAR, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	statusbar_visible BOOLEAN, 
	last_stage BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_treatment_stage_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_stage_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_stage_technique_id_fkey FOREIGN KEY(technique_id) REFERENCES medical_treatment_technique (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_stage_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_treatment_storage_semen_rel (
	treatment_id INTEGER NOT NULL, 
	storage_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_storage_semen_rel_pkey PRIMARY KEY (treatment_id, storage_id), 
	CONSTRAINT medical_treatment_storage_semen_rel_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_storage_semen_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_storage_zygote_rel (
	treatment_id INTEGER NOT NULL, 
	storage_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_storage_zygote_rel_pkey PRIMARY KEY (treatment_id, storage_id), 
	CONSTRAINT medical_treatment_storage_zygote_rel_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_storage_zygote_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_technique (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	sequence_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	sequence_code VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_treatment_technique_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_treatment_technique_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_technique_sequence_id_fkey FOREIGN KEY(sequence_id) REFERENCES ir_sequence (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_technique_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_treatment_technique_code_uniq UNIQUE (code)
)


CREATE TABLE medical_treatment_technique_medium_type_rel (
	medium_type_id INTEGER NOT NULL, 
	medical_treatment_technique_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_technique_medium_type_rel_pkey PRIMARY KEY (medium_type_id, medical_treatment_technique_id), 
	CONSTRAINT medical_treatment_technique_m_medical_treatment_technique__fkey FOREIGN KEY(medical_treatment_technique_id) REFERENCES medical_treatment_technique (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_technique_medium_type_rel_medium_type_id_fkey FOREIGN KEY(medium_type_id) REFERENCES medium_type (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_thaw_semen_rel (
	treatment_id INTEGER NOT NULL, 
	storage_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_thaw_semen_rel_pkey PRIMARY KEY (treatment_id, storage_id), 
	CONSTRAINT medical_treatment_thaw_semen_rel_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_thaw_semen_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE medical_treatment_thaw_zygote_rel (
	treatment_id INTEGER NOT NULL, 
	storage_id INTEGER NOT NULL, 
	CONSTRAINT medical_treatment_thaw_zygote_rel_pkey PRIMARY KEY (treatment_id, storage_id), 
	CONSTRAINT medical_treatment_thaw_zygote_rel_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT medical_treatment_thaw_zygote_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE medical_update_relation_popup (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	current_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	role VARCHAR, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_update_relation_popup_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_update_relation_popup_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_update_relation_popup_current_id_fkey FOREIGN KEY(current_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_update_relation_popup_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT medical_update_relation_popup_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_waiting_current_thaw_embryo_culture_rel (
	waiting_current_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_waiting_current_thaw_embryo_culture_rel_pkey PRIMARY KEY (waiting_current_id, culture_id), 
	CONSTRAINT medical_waiting_current_thaw_embryo_cul_waiting_current_id_fkey FOREIGN KEY(waiting_current_id) REFERENCES medical_thawing_process (id) ON DELETE CASCADE, 
	CONSTRAINT medical_waiting_current_thaw_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE medical_waiting_procedure (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	employee_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	state VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medical_waiting_procedure_pkey PRIMARY KEY (id), 
	CONSTRAINT medical_waiting_procedure_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medical_waiting_procedure_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT medical_waiting_procedure_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT medical_waiting_procedure_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE medical_waiting_storage_source_sperm_default_rel (
	medical_waiting_storage_id INTEGER NOT NULL, 
	selection_value_id INTEGER NOT NULL, 
	CONSTRAINT medical_waiting_storage_source_sperm_default_rel_pkey PRIMARY KEY (medical_waiting_storage_id, selection_value_id), 
	CONSTRAINT medical_waiting_storage_source__medical_waiting_storage_id_fkey FOREIGN KEY(medical_waiting_storage_id) REFERENCES medical_storage_process (id) ON DELETE CASCADE, 
	CONSTRAINT medical_waiting_storage_source_sperm_de_selection_value_id_fkey FOREIGN KEY(selection_value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE medical_waiting_thaw_embryo_culture_rel (
	thaw_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT medical_waiting_thaw_embryo_culture_rel_pkey PRIMARY KEY (thaw_id, culture_id), 
	CONSTRAINT medical_waiting_thaw_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT medical_waiting_thaw_embryo_culture_rel_thaw_id_fkey FOREIGN KEY(thaw_id) REFERENCES medical_thawing_process (id) ON DELETE CASCADE
)


CREATE TABLE medical_waiting_thaw_embryo_tool_rel (
	waiting_id INTEGER NOT NULL, 
	tool_id INTEGER NOT NULL, 
	CONSTRAINT medical_waiting_thaw_embryo_tool_rel_pkey PRIMARY KEY (waiting_id, tool_id), 
	CONSTRAINT medical_waiting_thaw_embryo_tool_rel_tool_id_fkey FOREIGN KEY(tool_id) REFERENCES medical_storage_tool (id) ON DELETE CASCADE, 
	CONSTRAINT medical_waiting_thaw_embryo_tool_rel_waiting_id_fkey FOREIGN KEY(waiting_id) REFERENCES medical_thawing_process (id) ON DELETE CASCADE
)


CREATE TABLE medium_type (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR, 
	gender VARCHAR, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT medium_type_pkey PRIMARY KEY (id), 
	CONSTRAINT medium_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medium_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT medium_type_name_uniq UNIQUE (name)
)


CREATE TABLE message_attachment_rel (
	message_id INTEGER NOT NULL, 
	attachment_id INTEGER NOT NULL, 
	CONSTRAINT message_attachment_rel_pkey PRIMARY KEY (message_id, attachment_id), 
	CONSTRAINT message_attachment_rel_attachment_id_fkey FOREIGN KEY(attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE, 
	CONSTRAINT message_attachment_rel_message_id_fkey FOREIGN KEY(message_id) REFERENCES mail_message (id) ON DELETE CASCADE
)


CREATE TABLE oocyte_info_culture_wizard_oocyte_morphology_relation (
	wizard_id INTEGER NOT NULL, 
	oocyte_morphology_id INTEGER NOT NULL, 
	CONSTRAINT oocyte_info_culture_wizard_oocyte_morphology_relation_pkey PRIMARY KEY (wizard_id, oocyte_morphology_id), 
	CONSTRAINT oocyte_info_culture_wizard_oocyte_mor_oocyte_morphology_id_fkey FOREIGN KEY(oocyte_morphology_id) REFERENCES selection_value (id) ON DELETE CASCADE, 
	CONSTRAINT oocyte_info_culture_wizard_oocyte_morphology_rel_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES medical_oocyte_info_culture_wizard (id) ON DELETE CASCADE
)


CREATE TABLE oocyte_morphology_value_relation (
	culture_id INTEGER NOT NULL, 
	oocyte_morphology_id INTEGER NOT NULL, 
	CONSTRAINT oocyte_morphology_value_relation_pkey PRIMARY KEY (culture_id, oocyte_morphology_id), 
	CONSTRAINT oocyte_morphology_value_relation_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT oocyte_morphology_value_relation_oocyte_morphology_id_fkey FOREIGN KEY(oocyte_morphology_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE outpatient_exam_medical_icd_rel (
	outpatient_exam_id INTEGER NOT NULL, 
	icd_id INTEGER NOT NULL, 
	CONSTRAINT outpatient_exam_medical_icd_rel_pkey PRIMARY KEY (outpatient_exam_id, icd_id), 
	CONSTRAINT outpatient_exam_medical_icd_rel_icd_id_fkey FOREIGN KEY(icd_id) REFERENCES medical_icd (id) ON DELETE CASCADE, 
	CONSTRAINT outpatient_exam_medical_icd_rel_outpatient_exam_id_fkey FOREIGN KEY(outpatient_exam_id) REFERENCES medical_outpatient_examination (id) ON DELETE CASCADE
)


CREATE TABLE patient_fingerprint (
	id SERIAL NOT NULL, 
	fingername_id INTEGER NOT NULL, 
	patient_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	template VARCHAR, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT patient_fingerprint_pkey PRIMARY KEY (id), 
	CONSTRAINT patient_fingerprint_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT patient_fingerprint_fingername_id_fkey FOREIGN KEY(fingername_id) REFERENCES finger_name (id) ON DELETE RESTRICT, 
	CONSTRAINT patient_fingerprint_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT patient_fingerprint_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT patient_fingerprint_uniq_fingername_patient_active UNIQUE (fingername_id, patient_id, active)
)


CREATE TABLE patient_fingerprint_history (
	id SERIAL NOT NULL, 
	patient_id INTEGER NOT NULL, 
	fingerprint_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	state VARCHAR, 
	type VARCHAR, 
	date_check TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	score DOUBLE PRECISION, 
	CONSTRAINT patient_fingerprint_history_pkey PRIMARY KEY (id), 
	CONSTRAINT patient_fingerprint_history_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT patient_fingerprint_history_fingerprint_id_fkey FOREIGN KEY(fingerprint_id) REFERENCES patient_fingerprint (id) ON DELETE SET NULL, 
	CONSTRAINT patient_fingerprint_history_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT patient_fingerprint_history_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE patient_ivf_reason_relation (
	patient_id INTEGER NOT NULL, 
	reason_id INTEGER NOT NULL, 
	CONSTRAINT patient_ivf_reason_relation_pkey PRIMARY KEY (patient_id, reason_id), 
	CONSTRAINT patient_ivf_reason_relation_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT patient_ivf_reason_relation_reason_id_fkey FOREIGN KEY(reason_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE patient_recognition_history (
	id SERIAL NOT NULL, 
	patient_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	duplicate_warning BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	accuracy DOUBLE PRECISION, 
	CONSTRAINT patient_recognition_history_pkey PRIMARY KEY (id), 
	CONSTRAINT patient_recognition_history_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT patient_recognition_history_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE RESTRICT, 
	CONSTRAINT patient_recognition_history_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE patient_record_history_rel (
	record_id INTEGER NOT NULL, 
	history_relatonship_id INTEGER NOT NULL, 
	CONSTRAINT patient_record_history_rel_pkey PRIMARY KEY (record_id, history_relatonship_id), 
	CONSTRAINT patient_record_history_rel_history_relatonship_id_fkey FOREIGN KEY(history_relatonship_id) REFERENCES medical_history_relationship (id) ON DELETE CASCADE, 
	CONSTRAINT patient_record_history_rel_record_id_fkey FOREIGN KEY(record_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE
)


CREATE TABLE patient_record_ivf_reason_relation (
	patient_id INTEGER NOT NULL, 
	reason_id INTEGER NOT NULL, 
	CONSTRAINT patient_record_ivf_reason_relation_pkey PRIMARY KEY (patient_id, reason_id), 
	CONSTRAINT patient_record_ivf_reason_relation_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT patient_record_ivf_reason_relation_reason_id_fkey FOREIGN KEY(reason_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE patient_record_relationship_rel (
	record_id INTEGER NOT NULL, 
	relatonship_id INTEGER NOT NULL, 
	CONSTRAINT patient_record_relationship_rel_pkey PRIMARY KEY (record_id, relatonship_id), 
	CONSTRAINT patient_record_relationship_rel_record_id_fkey FOREIGN KEY(record_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT patient_record_relationship_rel_relatonship_id_fkey FOREIGN KEY(relatonship_id) REFERENCES medical_patient_relationship (id) ON DELETE CASCADE
)


CREATE TABLE patient_relationship_rel (
	patient_id INTEGER NOT NULL, 
	relationship_id INTEGER NOT NULL, 
	CONSTRAINT patient_relationship_rel_pkey PRIMARY KEY (patient_id, relationship_id), 
	CONSTRAINT patient_relationship_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT patient_relationship_rel_relationship_id_fkey FOREIGN KEY(relationship_id) REFERENCES medical_history_relationship (id) ON DELETE CASCADE
)


CREATE TABLE phone_blacklist (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	number VARCHAR NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT phone_blacklist_pkey PRIMARY KEY (id), 
	CONSTRAINT phone_blacklist_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT phone_blacklist_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT phone_blacklist_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT phone_blacklist_unique_number UNIQUE (number)
)


CREATE TABLE phone_blacklist_remove (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	phone VARCHAR NOT NULL, 
	reason VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT phone_blacklist_remove_pkey PRIMARY KEY (id), 
	CONSTRAINT phone_blacklist_remove_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT phone_blacklist_remove_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE pregnancy_by_value_rel (
	treatment_id INTEGER NOT NULL, 
	value_id INTEGER NOT NULL, 
	CONSTRAINT pregnancy_by_value_rel_pkey PRIMARY KEY (treatment_id, value_id), 
	CONSTRAINT pregnancy_by_value_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT pregnancy_by_value_rel_value_id_fkey FOREIGN KEY(value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE privacy_log (
	id SERIAL NOT NULL, 
	user_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	anonymized_name VARCHAR NOT NULL, 
	anonymized_email VARCHAR NOT NULL, 
	execution_details TEXT, 
	records_description TEXT, 
	additional_note TEXT, 
	date TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT privacy_log_pkey PRIMARY KEY (id), 
	CONSTRAINT privacy_log_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT privacy_log_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE RESTRICT, 
	CONSTRAINT privacy_log_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE privacy_lookup_wizard (
	id SERIAL NOT NULL, 
	log_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	email VARCHAR NOT NULL, 
	execution_details TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT privacy_lookup_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT privacy_lookup_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT privacy_lookup_wizard_log_id_fkey FOREIGN KEY(log_id) REFERENCES privacy_log (id) ON DELETE SET NULL, 
	CONSTRAINT privacy_lookup_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE privacy_lookup_wizard_line (
	id SERIAL NOT NULL, 
	wizard_id INTEGER, 
	res_id INTEGER NOT NULL, 
	res_model_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	res_name VARCHAR, 
	res_model VARCHAR, 
	execution_details VARCHAR, 
	has_active BOOLEAN, 
	is_active BOOLEAN, 
	is_unlinked BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT privacy_lookup_wizard_line_pkey PRIMARY KEY (id), 
	CONSTRAINT privacy_lookup_wizard_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT privacy_lookup_wizard_line_res_model_id_fkey FOREIGN KEY(res_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT privacy_lookup_wizard_line_wizard_id_fkey FOREIGN KEY(wizard_id) REFERENCES privacy_lookup_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT privacy_lookup_wizard_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE procedure_statistical (
	id INTEGER, 
	patient_id INTEGER, 
	procedure_date TIMESTAMP WITHOUT TIME ZONE, 
	type TEXT, 
	type_procedure TEXT, 
	doctor_id INTEGER
)


CREATE TABLE process_storage_line (
	id SERIAL NOT NULL, 
	culture_id INTEGER, 
	grade_id INTEGER, 
	process_id INTEGER, 
	group_embryo_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	info_current VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT process_storage_line_pkey PRIMARY KEY (id), 
	CONSTRAINT process_storage_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_line_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_line_grade_id_fkey FOREIGN KEY(grade_id) REFERENCES medical_embryo_grading (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_line_group_embryo_id_fkey FOREIGN KEY(group_embryo_id) REFERENCES medical_group_embryo (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_line_process_id_fkey FOREIGN KEY(process_id) REFERENCES process_storage_popup (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE process_storage_popup (
	id SERIAL NOT NULL, 
	tool_storage_id INTEGER, 
	group_embryo_id INTEGER, 
	employee_id INTEGER, 
	empl_check_id INTEGER, 
	employee_secon_id INTEGER, 
	empl_secon_check_id INTEGER, 
	patient_id INTEGER, 
	location_id INTEGER, 
	room_id INTEGER, 
	tank_id INTEGER, 
	canister_id INTEGER, 
	canister_layer_id INTEGER, 
	canister_position_id INTEGER, 
	canes_id INTEGER, 
	sequence INTEGER, 
	canes_position_id INTEGER, 
	storage_id INTEGER NOT NULL, 
	cassette_id INTEGER, 
	canes_position_index INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	position VARCHAR, 
	code_canes VARCHAR NOT NULL, 
	sequence_cryo_container VARCHAR NOT NULL, 
	day_of VARCHAR, 
	is_male BOOLEAN, 
	readonly_canes_id BOOLEAN, 
	date_storage TIMESTAMP WITHOUT TIME ZONE, 
	date_or TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT process_storage_popup_pkey PRIMARY KEY (id), 
	CONSTRAINT process_storage_popup_canes_id_fkey FOREIGN KEY(canes_id) REFERENCES medical_canes (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_canes_position_id_fkey FOREIGN KEY(canes_position_id) REFERENCES medical_canes_position (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_canister_id_fkey FOREIGN KEY(canister_id) REFERENCES medical_canister (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_canister_layer_id_fkey FOREIGN KEY(canister_layer_id) REFERENCES medical_canister_layer (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_canister_position_id_fkey FOREIGN KEY(canister_position_id) REFERENCES medical_canister_position (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_cassette_id_fkey FOREIGN KEY(cassette_id) REFERENCES medical_cassette (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_empl_check_id_fkey FOREIGN KEY(empl_check_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_empl_secon_check_id_fkey FOREIGN KEY(empl_secon_check_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_employee_secon_id_fkey FOREIGN KEY(employee_secon_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_group_embryo_id_fkey FOREIGN KEY(group_embryo_id) REFERENCES medical_group_embryo (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_location_id_fkey FOREIGN KEY(location_id) REFERENCES medical_location (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_room_id_fkey FOREIGN KEY(room_id) REFERENCES medical_location_room (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_storage_id_fkey FOREIGN KEY(storage_id) REFERENCES medical_storage_process (id) ON DELETE CASCADE, 
	CONSTRAINT process_storage_popup_tank_id_fkey FOREIGN KEY(tank_id) REFERENCES medical_tank (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_tool_storage_id_fkey FOREIGN KEY(tool_storage_id) REFERENCES medical_storage_tool (id) ON DELETE SET NULL, 
	CONSTRAINT process_storage_popup_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE process_storage_popup_embryo_culture_rel (
	popup_id INTEGER NOT NULL, 
	culture_id INTEGER NOT NULL, 
	CONSTRAINT process_storage_popup_embryo_culture_rel_pkey PRIMARY KEY (popup_id, culture_id), 
	CONSTRAINT process_storage_popup_embryo_culture_rel_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT process_storage_popup_embryo_culture_rel_popup_id_fkey FOREIGN KEY(popup_id) REFERENCES process_storage_popup (id) ON DELETE CASCADE
)


CREATE TABLE process_thawing_detail_wizard (
	id SERIAL NOT NULL, 
	wz_id INTEGER, 
	wz_refrozen_id INTEGER, 
	culture_id INTEGER NOT NULL, 
	culture_grade_id INTEGER, 
	culture_group_embryo_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	culture_name VARCHAR, 
	culture_emb_day VARCHAR, 
	culture_decision VARCHAR, 
	culture_emb_morphology VARCHAR, 
	re_frozen BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT process_thawing_detail_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT process_thawing_detail_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT process_thawing_detail_wizard_culture_grade_id_fkey FOREIGN KEY(culture_grade_id) REFERENCES medical_embryo_grading (id) ON DELETE SET NULL, 
	CONSTRAINT process_thawing_detail_wizard_culture_group_embryo_id_fkey FOREIGN KEY(culture_group_embryo_id) REFERENCES medical_group_embryo (id) ON DELETE SET NULL, 
	CONSTRAINT process_thawing_detail_wizard_culture_id_fkey FOREIGN KEY(culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT process_thawing_detail_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT process_thawing_detail_wizard_wz_id_fkey FOREIGN KEY(wz_id) REFERENCES process_thawing_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT process_thawing_detail_wizard_wz_refrozen_id_fkey FOREIGN KEY(wz_refrozen_id) REFERENCES medical_refrozen_wizard (id) ON DELETE SET NULL
)


CREATE TABLE process_thawing_wizard (
	id SERIAL NOT NULL, 
	thaw_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT process_thawing_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT process_thawing_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT process_thawing_wizard_thaw_id_fkey FOREIGN KEY(thaw_id) REFERENCES medical_thawing_process (id) ON DELETE SET NULL, 
	CONSTRAINT process_thawing_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_attr_exclusion_value_ids_rel (
	product_template_attribute_exclusion_id INTEGER NOT NULL, 
	product_template_attribute_value_id INTEGER NOT NULL, 
	CONSTRAINT product_attr_exclusion_value_ids_rel_pkey PRIMARY KEY (product_template_attribute_exclusion_id, product_template_attribute_value_id), 
	CONSTRAINT product_attr_exclusion_value__product_template_attribute_e_fkey FOREIGN KEY(product_template_attribute_exclusion_id) REFERENCES product_template_attribute_exclusion (id) ON DELETE CASCADE, 
	CONSTRAINT product_attr_exclusion_value__product_template_attribute_v_fkey FOREIGN KEY(product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE CASCADE
)


CREATE TABLE product_attribute (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_variant VARCHAR NOT NULL, 
	display_type VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_attribute_pkey PRIMARY KEY (id), 
	CONSTRAINT product_attribute_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_attribute_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_attribute_custom_value (
	id SERIAL NOT NULL, 
	custom_product_template_attribute_value_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	custom_value VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_attribute_custom_value_pkey PRIMARY KEY (id), 
	CONSTRAINT product_attribute_custom_valu_custom_product_template_attr_fkey FOREIGN KEY(custom_product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE RESTRICT, 
	CONSTRAINT product_attribute_custom_value_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_attribute_custom_value_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_attribute_product_template_rel (
	product_attribute_id INTEGER NOT NULL, 
	product_template_id INTEGER NOT NULL, 
	CONSTRAINT product_attribute_product_template_rel_pkey PRIMARY KEY (product_attribute_id, product_template_id), 
	CONSTRAINT product_attribute_product_template_re_product_attribute_id_fkey FOREIGN KEY(product_attribute_id) REFERENCES product_attribute (id) ON DELETE CASCADE, 
	CONSTRAINT product_attribute_product_template_rel_product_template_id_fkey FOREIGN KEY(product_template_id) REFERENCES product_template (id) ON DELETE CASCADE
)


CREATE TABLE product_attribute_value (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	attribute_id INTEGER NOT NULL, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	html_color VARCHAR, 
	name JSONB NOT NULL, 
	is_custom BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_attribute_value_pkey PRIMARY KEY (id), 
	CONSTRAINT product_attribute_value_attribute_id_fkey FOREIGN KEY(attribute_id) REFERENCES product_attribute (id) ON DELETE CASCADE, 
	CONSTRAINT product_attribute_value_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_attribute_value_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_attribute_value_value_company_uniq UNIQUE (name, attribute_id)
)


CREATE TABLE product_attribute_value_product_template_attribute_line_rel (
	product_attribute_value_id INTEGER NOT NULL, 
	product_template_attribute_line_id INTEGER NOT NULL, 
	CONSTRAINT product_attribute_value_product_template_attribute_line_re_pkey PRIMARY KEY (product_attribute_value_id, product_template_attribute_line_id), 
	CONSTRAINT product_attribute_value_produ_product_template_attribute_l_fkey FOREIGN KEY(product_template_attribute_line_id) REFERENCES product_template_attribute_line (id) ON DELETE CASCADE, 
	CONSTRAINT product_attribute_value_product_product_attribute_value_id_fkey FOREIGN KEY(product_attribute_value_id) REFERENCES product_attribute_value (id) ON DELETE RESTRICT
)


CREATE TABLE product_category (
	id SERIAL NOT NULL, 
	parent_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	complete_name VARCHAR, 
	parent_path VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_category_pkey PRIMARY KEY (id), 
	CONSTRAINT product_category_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_category_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES product_category (id) ON DELETE CASCADE, 
	CONSTRAINT product_category_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_label_layout (
	id SERIAL NOT NULL, 
	custom_quantity INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	print_format VARCHAR NOT NULL, 
	extra_html TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_label_layout_pkey PRIMARY KEY (id), 
	CONSTRAINT product_label_layout_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_label_layout_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_label_layout_product_product_rel (
	product_label_layout_id INTEGER NOT NULL, 
	product_product_id INTEGER NOT NULL, 
	CONSTRAINT product_label_layout_product_product_rel_pkey PRIMARY KEY (product_label_layout_id, product_product_id), 
	CONSTRAINT product_label_layout_product_produ_product_label_layout_id_fkey FOREIGN KEY(product_label_layout_id) REFERENCES product_label_layout (id) ON DELETE CASCADE, 
	CONSTRAINT product_label_layout_product_product_re_product_product_id_fkey FOREIGN KEY(product_product_id) REFERENCES product_product (id) ON DELETE CASCADE
)


CREATE TABLE product_label_layout_product_template_rel (
	product_label_layout_id INTEGER NOT NULL, 
	product_template_id INTEGER NOT NULL, 
	CONSTRAINT product_label_layout_product_template_rel_pkey PRIMARY KEY (product_label_layout_id, product_template_id), 
	CONSTRAINT product_label_layout_product_templ_product_label_layout_id_fkey FOREIGN KEY(product_label_layout_id) REFERENCES product_label_layout (id) ON DELETE CASCADE, 
	CONSTRAINT product_label_layout_product_template__product_template_id_fkey FOREIGN KEY(product_template_id) REFERENCES product_template (id) ON DELETE CASCADE
)


CREATE TABLE product_packaging (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	product_id INTEGER, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	barcode VARCHAR, 
	qty NUMERIC, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_packaging_pkey PRIMARY KEY (id), 
	CONSTRAINT product_packaging_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT product_packaging_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_packaging_product_id_fkey FOREIGN KEY(product_id) REFERENCES product_product (id) ON DELETE SET NULL, 
	CONSTRAINT product_packaging_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_packaging_barcode_uniq UNIQUE (barcode), 
	CONSTRAINT product_packaging_positive_qty CHECK (qty > 0::numeric)
)


CREATE TABLE product_pricelist (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	currency_id INTEGER NOT NULL, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	discount_policy VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_pricelist_pkey PRIMARY KEY (id), 
	CONSTRAINT product_pricelist_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT product_pricelist_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_pricelist_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT, 
	CONSTRAINT product_pricelist_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_pricelist_item (
	id SERIAL NOT NULL, 
	pricelist_id INTEGER NOT NULL, 
	company_id INTEGER, 
	currency_id INTEGER, 
	categ_id INTEGER, 
	product_tmpl_id INTEGER, 
	product_id INTEGER, 
	base_pricelist_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	applied_on VARCHAR NOT NULL, 
	base VARCHAR NOT NULL, 
	compute_price VARCHAR NOT NULL, 
	min_quantity NUMERIC, 
	fixed_price NUMERIC, 
	price_discount NUMERIC, 
	price_round NUMERIC, 
	price_surcharge NUMERIC, 
	price_min_margin NUMERIC, 
	price_max_margin NUMERIC, 
	active BOOLEAN, 
	date_start TIMESTAMP WITHOUT TIME ZONE, 
	date_end TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	percent_price DOUBLE PRECISION, 
	CONSTRAINT product_pricelist_item_pkey PRIMARY KEY (id), 
	CONSTRAINT product_pricelist_item_base_pricelist_id_fkey FOREIGN KEY(base_pricelist_id) REFERENCES product_pricelist (id) ON DELETE SET NULL, 
	CONSTRAINT product_pricelist_item_categ_id_fkey FOREIGN KEY(categ_id) REFERENCES product_category (id) ON DELETE CASCADE, 
	CONSTRAINT product_pricelist_item_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT product_pricelist_item_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_pricelist_item_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE SET NULL, 
	CONSTRAINT product_pricelist_item_pricelist_id_fkey FOREIGN KEY(pricelist_id) REFERENCES product_pricelist (id) ON DELETE CASCADE, 
	CONSTRAINT product_pricelist_item_product_id_fkey FOREIGN KEY(product_id) REFERENCES product_product (id) ON DELETE CASCADE, 
	CONSTRAINT product_pricelist_item_product_tmpl_id_fkey FOREIGN KEY(product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE, 
	CONSTRAINT product_pricelist_item_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_product (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	product_tmpl_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	default_code VARCHAR, 
	barcode VARCHAR, 
	combination_indices VARCHAR, 
	volume NUMERIC, 
	weight NUMERIC, 
	active BOOLEAN, 
	can_image_variant_1024_be_zoomed BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_product_pkey PRIMARY KEY (id), 
	CONSTRAINT product_product_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_product_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT product_product_product_tmpl_id_fkey FOREIGN KEY(product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE, 
	CONSTRAINT product_product_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_supplierinfo (
	id SERIAL NOT NULL, 
	partner_id INTEGER NOT NULL, 
	sequence INTEGER, 
	company_id INTEGER, 
	currency_id INTEGER NOT NULL, 
	product_id INTEGER, 
	product_tmpl_id INTEGER, 
	delay INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	product_name VARCHAR, 
	product_code VARCHAR, 
	date_start DATE, 
	date_end DATE, 
	min_qty NUMERIC NOT NULL, 
	price NUMERIC NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_supplierinfo_pkey PRIMARY KEY (id), 
	CONSTRAINT product_supplierinfo_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT product_supplierinfo_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_supplierinfo_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT, 
	CONSTRAINT product_supplierinfo_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT product_supplierinfo_product_id_fkey FOREIGN KEY(product_id) REFERENCES product_product (id) ON DELETE SET NULL, 
	CONSTRAINT product_supplierinfo_product_tmpl_id_fkey FOREIGN KEY(product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE, 
	CONSTRAINT product_supplierinfo_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_tag (
	id SERIAL NOT NULL, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_tag_pkey PRIMARY KEY (id), 
	CONSTRAINT product_tag_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_tag_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_tag_name_uniq UNIQUE (name)
)


CREATE TABLE product_tag_product_product_rel (
	product_product_id INTEGER NOT NULL, 
	product_tag_id INTEGER NOT NULL, 
	CONSTRAINT product_tag_product_product_rel_pkey PRIMARY KEY (product_product_id, product_tag_id), 
	CONSTRAINT product_tag_product_product_rel_product_product_id_fkey FOREIGN KEY(product_product_id) REFERENCES product_product (id) ON DELETE CASCADE, 
	CONSTRAINT product_tag_product_product_rel_product_tag_id_fkey FOREIGN KEY(product_tag_id) REFERENCES product_tag (id) ON DELETE CASCADE
)


CREATE TABLE product_tag_product_template_rel (
	product_template_id INTEGER NOT NULL, 
	product_tag_id INTEGER NOT NULL, 
	CONSTRAINT product_tag_product_template_rel_pkey PRIMARY KEY (product_template_id, product_tag_id), 
	CONSTRAINT product_tag_product_template_rel_product_tag_id_fkey FOREIGN KEY(product_tag_id) REFERENCES product_tag (id) ON DELETE CASCADE, 
	CONSTRAINT product_tag_product_template_rel_product_template_id_fkey FOREIGN KEY(product_template_id) REFERENCES product_template (id) ON DELETE CASCADE
)


CREATE TABLE product_template (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	sequence INTEGER, 
	categ_id INTEGER NOT NULL, 
	uom_id INTEGER NOT NULL, 
	uom_po_id INTEGER NOT NULL, 
	company_id INTEGER, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	detailed_type VARCHAR NOT NULL, 
	type VARCHAR, 
	default_code VARCHAR, 
	priority VARCHAR, 
	name JSONB NOT NULL, 
	description JSONB, 
	description_purchase JSONB, 
	description_sale JSONB, 
	list_price NUMERIC, 
	volume NUMERIC, 
	weight NUMERIC, 
	sale_ok BOOLEAN, 
	purchase_ok BOOLEAN, 
	active BOOLEAN, 
	can_image_1024_be_zoomed BOOLEAN, 
	has_configurable_attributes BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	prescription_usage_id INTEGER, 
	uom_manufacture_id INTEGER, 
	volume_per_uom_id INTEGER, 
	ingredient VARCHAR, 
	shortname VARCHAR, 
	use_eating VARCHAR, 
	medicine_usage VARCHAR, 
	medicine_ok BOOLEAN, 
	is_trigger BOOLEAN, 
	is_ovarian_stimulation BOOLEAN, 
	is_luteal_support BOOLEAN, 
	package_manufacture_qty DOUBLE PRECISION, 
	package_sale_qty DOUBLE PRECISION, 
	volume_per_package DOUBLE PRECISION, 
	CONSTRAINT product_template_pkey PRIMARY KEY (id), 
	CONSTRAINT product_template_categ_id_fkey FOREIGN KEY(categ_id) REFERENCES product_category (id) ON DELETE RESTRICT, 
	CONSTRAINT product_template_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_prescription_usage_id_fkey FOREIGN KEY(prescription_usage_id) REFERENCES medical_prescription_usage (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_uom_id_fkey FOREIGN KEY(uom_id) REFERENCES uom_uom (id) ON DELETE RESTRICT, 
	CONSTRAINT product_template_uom_manufacture_id_fkey FOREIGN KEY(uom_manufacture_id) REFERENCES uom_uom (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_uom_po_id_fkey FOREIGN KEY(uom_po_id) REFERENCES uom_uom (id) ON DELETE RESTRICT, 
	CONSTRAINT product_template_volume_per_uom_id_fkey FOREIGN KEY(volume_per_uom_id) REFERENCES uom_uom (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_template_attribute_exclusion (
	id SERIAL NOT NULL, 
	product_template_attribute_value_id INTEGER, 
	product_tmpl_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_template_attribute_exclusion_pkey PRIMARY KEY (id), 
	CONSTRAINT product_template_attribute_ex_product_template_attribute_v_fkey FOREIGN KEY(product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE CASCADE, 
	CONSTRAINT product_template_attribute_exclusion_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_attribute_exclusion_product_tmpl_id_fkey FOREIGN KEY(product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE, 
	CONSTRAINT product_template_attribute_exclusion_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_template_attribute_line (
	id SERIAL NOT NULL, 
	product_tmpl_id INTEGER NOT NULL, 
	attribute_id INTEGER NOT NULL, 
	value_count INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_template_attribute_line_pkey PRIMARY KEY (id), 
	CONSTRAINT product_template_attribute_line_attribute_id_fkey FOREIGN KEY(attribute_id) REFERENCES product_attribute (id) ON DELETE RESTRICT, 
	CONSTRAINT product_template_attribute_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_attribute_line_product_tmpl_id_fkey FOREIGN KEY(product_tmpl_id) REFERENCES product_template (id) ON DELETE CASCADE, 
	CONSTRAINT product_template_attribute_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE product_template_attribute_value (
	id SERIAL NOT NULL, 
	product_attribute_value_id INTEGER NOT NULL, 
	attribute_line_id INTEGER NOT NULL, 
	product_tmpl_id INTEGER, 
	attribute_id INTEGER, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	price_extra NUMERIC, 
	ptav_active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT product_template_attribute_value_pkey PRIMARY KEY (id), 
	CONSTRAINT product_template_attribute_valu_product_attribute_value_id_fkey FOREIGN KEY(product_attribute_value_id) REFERENCES product_attribute_value (id) ON DELETE CASCADE, 
	CONSTRAINT product_template_attribute_value_attribute_id_fkey FOREIGN KEY(attribute_id) REFERENCES product_attribute (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_attribute_value_attribute_line_id_fkey FOREIGN KEY(attribute_line_id) REFERENCES product_template_attribute_line (id) ON DELETE CASCADE, 
	CONSTRAINT product_template_attribute_value_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_attribute_value_product_tmpl_id_fkey FOREIGN KEY(product_tmpl_id) REFERENCES product_template (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_attribute_value_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT product_template_attribute_value_attribute_value_unique UNIQUE (attribute_line_id, product_attribute_value_id)
)


CREATE TABLE product_variant_combination (
	product_product_id INTEGER NOT NULL, 
	product_template_attribute_value_id INTEGER NOT NULL, 
	CONSTRAINT product_variant_combination_pkey PRIMARY KEY (product_product_id, product_template_attribute_value_id), 
	CONSTRAINT product_variant_combination_product_product_id_fkey FOREIGN KEY(product_product_id) REFERENCES product_product (id) ON DELETE CASCADE, 
	CONSTRAINT product_variant_combination_product_template_attribute_val_fkey FOREIGN KEY(product_template_attribute_value_id) REFERENCES product_template_attribute_value (id) ON DELETE RESTRICT
)


CREATE TABLE queue_job (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	user_id INTEGER, 
	company_id INTEGER, 
	priority INTEGER, 
	retry INTEGER, 
	max_retries INTEGER, 
	job_function_id INTEGER, 
	worker_pid INTEGER, 
	uuid VARCHAR NOT NULL, 
	graph_uuid VARCHAR, 
	name VARCHAR, 
	model_name VARCHAR, 
	method_name VARCHAR, 
	func_string VARCHAR, 
	state VARCHAR NOT NULL, 
	exc_name VARCHAR, 
	exc_message VARCHAR, 
	channel_method_name VARCHAR, 
	channel VARCHAR, 
	identity_key VARCHAR, 
	records TEXT, 
	dependencies TEXT, 
	args TEXT, 
	kwargs TEXT, 
	exc_info TEXT, 
	result TEXT, 
	date_created TIMESTAMP WITHOUT TIME ZONE, 
	date_started TIMESTAMP WITHOUT TIME ZONE, 
	date_enqueued TIMESTAMP WITHOUT TIME ZONE, 
	date_done TIMESTAMP WITHOUT TIME ZONE, 
	date_cancelled TIMESTAMP WITHOUT TIME ZONE, 
	eta TIMESTAMP WITHOUT TIME ZONE, 
	exec_time DOUBLE PRECISION, 
	CONSTRAINT queue_job_pkey PRIMARY KEY (id), 
	CONSTRAINT queue_job_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT queue_job_job_function_id_fkey FOREIGN KEY(job_function_id) REFERENCES queue_job_function (id) ON DELETE SET NULL, 
	CONSTRAINT queue_job_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT queue_job_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE queue_job_channel (
	id SERIAL NOT NULL, 
	parent_id INTEGER, 
	removal_interval INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	complete_name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT queue_job_channel_pkey PRIMARY KEY (id), 
	CONSTRAINT queue_job_channel_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT queue_job_channel_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES queue_job_channel (id) ON DELETE RESTRICT, 
	CONSTRAINT queue_job_channel_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT queue_job_channel_name_uniq UNIQUE (complete_name)
)


CREATE TABLE queue_job_function (
	id SERIAL NOT NULL, 
	model_id INTEGER, 
	channel_id INTEGER NOT NULL, 
	name VARCHAR, 
	method VARCHAR, 
	channel VARCHAR, 
	retry_pattern TEXT, 
	related_action TEXT, 
	CONSTRAINT queue_job_function_pkey PRIMARY KEY (id), 
	CONSTRAINT queue_job_function_channel_id_fkey FOREIGN KEY(channel_id) REFERENCES queue_job_channel (id) ON DELETE RESTRICT, 
	CONSTRAINT queue_job_function_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE
)


CREATE TABLE queue_job_queue_jobs_to_cancelled_rel (
	queue_jobs_to_cancelled_id INTEGER NOT NULL, 
	queue_job_id INTEGER NOT NULL, 
	CONSTRAINT queue_job_queue_jobs_to_cancelled_rel_pkey PRIMARY KEY (queue_jobs_to_cancelled_id, queue_job_id), 
	CONSTRAINT queue_job_queue_jobs_to_cancell_queue_jobs_to_cancelled_id_fkey FOREIGN KEY(queue_jobs_to_cancelled_id) REFERENCES queue_jobs_to_cancelled (id) ON DELETE CASCADE, 
	CONSTRAINT queue_job_queue_jobs_to_cancelled_rel_queue_job_id_fkey FOREIGN KEY(queue_job_id) REFERENCES queue_job (id) ON DELETE CASCADE
)


CREATE TABLE queue_job_queue_jobs_to_done_rel (
	queue_jobs_to_done_id INTEGER NOT NULL, 
	queue_job_id INTEGER NOT NULL, 
	CONSTRAINT queue_job_queue_jobs_to_done_rel_pkey PRIMARY KEY (queue_jobs_to_done_id, queue_job_id), 
	CONSTRAINT queue_job_queue_jobs_to_done_rel_queue_job_id_fkey FOREIGN KEY(queue_job_id) REFERENCES queue_job (id) ON DELETE CASCADE, 
	CONSTRAINT queue_job_queue_jobs_to_done_rel_queue_jobs_to_done_id_fkey FOREIGN KEY(queue_jobs_to_done_id) REFERENCES queue_jobs_to_done (id) ON DELETE CASCADE
)


CREATE TABLE queue_job_queue_requeue_job_rel (
	queue_requeue_job_id INTEGER NOT NULL, 
	queue_job_id INTEGER NOT NULL, 
	CONSTRAINT queue_job_queue_requeue_job_rel_pkey PRIMARY KEY (queue_requeue_job_id, queue_job_id), 
	CONSTRAINT queue_job_queue_requeue_job_rel_queue_job_id_fkey FOREIGN KEY(queue_job_id) REFERENCES queue_job (id) ON DELETE CASCADE, 
	CONSTRAINT queue_job_queue_requeue_job_rel_queue_requeue_job_id_fkey FOREIGN KEY(queue_requeue_job_id) REFERENCES queue_requeue_job (id) ON DELETE CASCADE
)


CREATE TABLE queue_jobs_to_cancelled (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT queue_jobs_to_cancelled_pkey PRIMARY KEY (id), 
	CONSTRAINT queue_jobs_to_cancelled_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT queue_jobs_to_cancelled_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE queue_jobs_to_done (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT queue_jobs_to_done_pkey PRIMARY KEY (id), 
	CONSTRAINT queue_jobs_to_done_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT queue_jobs_to_done_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE queue_requeue_job (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT queue_requeue_job_pkey PRIMARY KEY (id), 
	CONSTRAINT queue_requeue_job_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT queue_requeue_job_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE quick_day_info_0_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_0_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_0_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_0_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE quick_day_info_1_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_1_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_1_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_1_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE quick_day_info_2_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_2_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_2_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_2_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE quick_day_info_3_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_3_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_3_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_3_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE quick_day_info_4_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_4_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_4_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_4_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE quick_day_info_5_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_5_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_5_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_5_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE quick_day_info_6_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_6_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_6_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_6_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE quick_day_info_7_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	hierarchy_selection_model_id INTEGER NOT NULL, 
	CONSTRAINT quick_day_info_7_rel_pkey PRIMARY KEY (medical_embryo_culture_id, hierarchy_selection_model_id), 
	CONSTRAINT quick_day_info_7_rel_hierarchy_selection_model_id_fkey FOREIGN KEY(hierarchy_selection_model_id) REFERENCES hierarchy_selection_model (id) ON DELETE CASCADE, 
	CONSTRAINT quick_day_info_7_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE
)


CREATE TABLE range_years_old (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	from_age INTEGER NOT NULL, 
	to_age INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT range_years_old_pkey PRIMARY KEY (id), 
	CONSTRAINT range_years_old_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT range_years_old_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE recognition_history_patient_rel (
	recognition_history_id INTEGER NOT NULL, 
	patient_id INTEGER NOT NULL, 
	CONSTRAINT recognition_history_patient_rel_pkey PRIMARY KEY (recognition_history_id, patient_id), 
	CONSTRAINT recognition_history_patient_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT recognition_history_patient_rel_recognition_history_id_fkey FOREIGN KEY(recognition_history_id) REFERENCES patient_recognition_history (id) ON DELETE CASCADE
)


CREATE TABLE rel_modules_langexport (
	wiz_id INTEGER NOT NULL, 
	module_id INTEGER NOT NULL, 
	CONSTRAINT rel_modules_langexport_pkey PRIMARY KEY (wiz_id, module_id), 
	CONSTRAINT rel_modules_langexport_module_id_fkey FOREIGN KEY(module_id) REFERENCES ir_module_module (id) ON DELETE CASCADE, 
	CONSTRAINT rel_modules_langexport_wiz_id_fkey FOREIGN KEY(wiz_id) REFERENCES base_language_export (id) ON DELETE CASCADE
)


CREATE TABLE rel_server_actions (
	server_id INTEGER NOT NULL, 
	action_id INTEGER NOT NULL, 
	CONSTRAINT rel_server_actions_pkey PRIMARY KEY (server_id, action_id), 
	CONSTRAINT rel_server_actions_action_id_fkey FOREIGN KEY(action_id) REFERENCES ir_act_server (id) ON DELETE CASCADE, 
	CONSTRAINT rel_server_actions_server_id_fkey FOREIGN KEY(server_id) REFERENCES ir_act_server (id) ON DELETE CASCADE
)


CREATE TABLE relation_contact (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	popup_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	role VARCHAR, 
	active BOOLEAN, 
	is_current BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT relation_contact_pkey PRIMARY KEY (id), 
	CONSTRAINT relation_contact_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT relation_contact_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT relation_contact_popup_id_fkey FOREIGN KEY(popup_id) REFERENCES medical_create_relation_popup (id) ON DELETE SET NULL, 
	CONSTRAINT relation_contact_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE renew_cryostraw_group (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	"check" BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT renew_cryostraw_group_pkey PRIMARY KEY (id), 
	CONSTRAINT renew_cryostraw_group_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT renew_cryostraw_group_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE report_layout (
	id SERIAL NOT NULL, 
	view_id INTEGER NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	image VARCHAR, 
	pdf VARCHAR, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT report_layout_pkey PRIMARY KEY (id), 
	CONSTRAINT report_layout_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT report_layout_view_id_fkey FOREIGN KEY(view_id) REFERENCES ir_ui_view (id) ON DELETE RESTRICT, 
	CONSTRAINT report_layout_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE report_paperformat (
	id SERIAL NOT NULL, 
	page_height INTEGER, 
	page_width INTEGER, 
	header_spacing INTEGER, 
	dpi INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	format VARCHAR, 
	orientation VARCHAR, 
	"default" BOOLEAN, 
	header_line BOOLEAN, 
	disable_shrinking BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	margin_top DOUBLE PRECISION, 
	margin_bottom DOUBLE PRECISION, 
	margin_left DOUBLE PRECISION, 
	margin_right DOUBLE PRECISION, 
	CONSTRAINT report_paperformat_pkey PRIMARY KEY (id), 
	CONSTRAINT report_paperformat_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT report_paperformat_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE report_procedure_patient_detail_wizard (
	id SERIAL NOT NULL, 
	report_fet_id INTEGER, 
	report_et_id INTEGER, 
	report_or_id INTEGER, 
	report_iui_id INTEGER, 
	doctor_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	procedure_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT report_procedure_patient_detail_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT report_procedure_patient_detail_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT report_procedure_patient_detail_wizard_doctor_id_fkey FOREIGN KEY(doctor_id) REFERENCES hr_employee (id) ON DELETE SET NULL, 
	CONSTRAINT report_procedure_patient_detail_wizard_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT report_procedure_patient_detail_wizard_report_et_id_fkey FOREIGN KEY(report_et_id) REFERENCES report_procedure_patient_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT report_procedure_patient_detail_wizard_report_fet_id_fkey FOREIGN KEY(report_fet_id) REFERENCES report_procedure_patient_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT report_procedure_patient_detail_wizard_report_iui_id_fkey FOREIGN KEY(report_iui_id) REFERENCES report_procedure_patient_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT report_procedure_patient_detail_wizard_report_or_id_fkey FOREIGN KEY(report_or_id) REFERENCES report_procedure_patient_wizard (id) ON DELETE SET NULL, 
	CONSTRAINT report_procedure_patient_detail_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE report_procedure_patient_wizard (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	from_date DATE NOT NULL, 
	to_date DATE NOT NULL, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT report_procedure_patient_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT report_procedure_patient_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT report_procedure_patient_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_bank (
	id SERIAL NOT NULL, 
	state INTEGER, 
	country INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	street VARCHAR, 
	street2 VARCHAR, 
	zip VARCHAR, 
	city VARCHAR, 
	email VARCHAR, 
	phone VARCHAR, 
	bic VARCHAR, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_bank_pkey PRIMARY KEY (id), 
	CONSTRAINT res_bank_country_fkey FOREIGN KEY(country) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT res_bank_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_bank_state_fkey FOREIGN KEY(state) REFERENCES res_country_state (id) ON DELETE SET NULL, 
	CONSTRAINT res_bank_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_company (
	id SERIAL NOT NULL, 
	name VARCHAR NOT NULL, 
	partner_id INTEGER NOT NULL, 
	currency_id INTEGER NOT NULL, 
	sequence INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	parent_id INTEGER, 
	paperformat_id INTEGER, 
	external_report_layout_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	email VARCHAR, 
	phone VARCHAR, 
	mobile VARCHAR, 
	base_onboarding_company_state VARCHAR, 
	font VARCHAR, 
	primary_color VARCHAR, 
	secondary_color VARCHAR, 
	layout_background VARCHAR NOT NULL, 
	report_footer JSONB, 
	report_header TEXT, 
	company_details TEXT, 
	active BOOLEAN, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	logo_web BYTEA, 
	resource_calendar_id INTEGER, 
	hr_presence_control_email_amount INTEGER, 
	hr_presence_control_ip_list VARCHAR, 
	governing_body VARCHAR, 
	footer_note VARCHAR, 
	center_name JSONB, 
	partner_gid INTEGER, 
	iap_enrich_auto_done BOOLEAN, 
	snailmail_color BOOLEAN, 
	snailmail_cover BOOLEAN, 
	snailmail_duplex BOOLEAN, 
	CONSTRAINT res_company_pkey PRIMARY KEY (id), 
	CONSTRAINT res_company_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_company_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE RESTRICT, 
	CONSTRAINT res_company_external_report_layout_id_fkey FOREIGN KEY(external_report_layout_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL, 
	CONSTRAINT res_company_paperformat_id_fkey FOREIGN KEY(paperformat_id) REFERENCES report_paperformat (id) ON DELETE SET NULL, 
	CONSTRAINT res_company_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT res_company_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT, 
	CONSTRAINT res_company_resource_calendar_id_fkey FOREIGN KEY(resource_calendar_id) REFERENCES resource_calendar (id) ON DELETE RESTRICT, 
	CONSTRAINT res_company_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_company_name_uniq UNIQUE (name)
)


CREATE TABLE res_company_res_users_rel (
	res_company_id INTEGER NOT NULL, 
	res_users_id INTEGER NOT NULL, 
	CONSTRAINT res_company_res_users_rel_pkey PRIMARY KEY (res_company_id, res_users_id), 
	CONSTRAINT res_company_res_users_rel_res_company_id_fkey FOREIGN KEY(res_company_id) REFERENCES res_company (id) ON DELETE CASCADE, 
	CONSTRAINT res_company_res_users_rel_res_users_id_fkey FOREIGN KEY(res_users_id) REFERENCES res_users (id) ON DELETE CASCADE
)


CREATE TABLE res_company_users_rel (
	cid INTEGER NOT NULL, 
	user_id INTEGER NOT NULL, 
	CONSTRAINT res_company_users_rel_pkey PRIMARY KEY (cid, user_id), 
	CONSTRAINT res_company_users_rel_cid_fkey FOREIGN KEY(cid) REFERENCES res_company (id) ON DELETE CASCADE, 
	CONSTRAINT res_company_users_rel_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE
)


CREATE TABLE res_config (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_config_pkey PRIMARY KEY (id), 
	CONSTRAINT res_config_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_config_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_config_installer (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_config_installer_pkey PRIMARY KEY (id), 
	CONSTRAINT res_config_installer_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_config_installer_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_config_settings (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	company_id INTEGER NOT NULL, 
	user_default_rights BOOLEAN, 
	external_email_server_default BOOLEAN, 
	module_base_import BOOLEAN, 
	module_google_calendar BOOLEAN, 
	module_microsoft_calendar BOOLEAN, 
	module_mail_plugin BOOLEAN, 
	module_auth_oauth BOOLEAN, 
	module_auth_ldap BOOLEAN, 
	module_base_gengo BOOLEAN, 
	module_account_inter_company_rules BOOLEAN, 
	module_voip BOOLEAN, 
	module_web_unsplash BOOLEAN, 
	module_partner_autocomplete BOOLEAN, 
	module_base_geolocalize BOOLEAN, 
	module_google_recaptcha BOOLEAN, 
	group_multi_currency BOOLEAN, 
	show_effect BOOLEAN, 
	module_product_images BOOLEAN, 
	profiling_enabled_until TIMESTAMP WITHOUT TIME ZONE, 
	alias_domain VARCHAR, 
	twilio_account_sid VARCHAR, 
	twilio_account_token VARCHAR, 
	module_google_gmail BOOLEAN, 
	module_microsoft_outlook BOOLEAN, 
	restrict_template_rendering BOOLEAN, 
	use_twilio_rtc_servers BOOLEAN, 
	auth_signup_template_user_id INTEGER, 
	auth_signup_uninvited VARCHAR, 
	auth_signup_reset_password BOOLEAN, 
	google_gmail_client_identifier VARCHAR, 
	google_gmail_client_secret VARCHAR, 
	module_hr_presence BOOLEAN, 
	module_hr_skills BOOLEAN, 
	module_hr_homeworking BOOLEAN, 
	hr_presence_control_login BOOLEAN, 
	hr_presence_control_email BOOLEAN, 
	hr_presence_control_ip BOOLEAN, 
	module_hr_attendance BOOLEAN, 
	hr_employee_self_edit BOOLEAN, 
	product_pricelist_setting VARCHAR, 
	product_weight_in_lbs VARCHAR, 
	product_volume_volume_in_cubic_feet VARCHAR, 
	group_discount_per_so_line BOOLEAN, 
	group_uom BOOLEAN, 
	group_product_variant BOOLEAN, 
	module_sale_product_matrix BOOLEAN, 
	module_loyalty BOOLEAN, 
	group_stock_packaging BOOLEAN, 
	group_product_pricelist BOOLEAN, 
	group_sale_pricelist BOOLEAN, 
	unsplash_access_key VARCHAR, 
	unsplash_app_id VARCHAR, 
	create_patient_record_behavior VARCHAR, 
	allow_multi_circle BOOLEAN, 
	allow_gestational_carrier BOOLEAN, 
	module_ims_test_semen_analysis BOOLEAN, 
	ims_number_expiration_days INTEGER, 
	hcg_indices_treatment_search_duration INTEGER, 
	depends_field_state_treatment VARCHAR, 
	hide_role_contact VARCHAR, 
	reset_time BOOLEAN, 
	is_generate_pgs BOOLEAN, 
	is_generate_embryo_freezing BOOLEAN, 
	is_generate_oocyte_thawing BOOLEAN, 
	is_auto_compute_retrieval_date BOOLEAN, 
	prevent_duplicate_fet_embryo_thawing_procedure BOOLEAN, 
	hours_compute_retrieval_date DOUBLE PRECISION, 
	padding_frozen_deadline INTEGER, 
	sperm_sample_update_period INTEGER, 
	dont_allow_update_treatment_embryo BOOLEAN, 
	module_ims_procedure_validator BOOLEAN, 
	procedure_dashboard_d7 BOOLEAN, 
	speed_up_thawing_process BOOLEAN, 
	CONSTRAINT res_config_settings_pkey PRIMARY KEY (id), 
	CONSTRAINT res_config_settings_auth_signup_template_user_id_fkey FOREIGN KEY(auth_signup_template_user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_config_settings_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE CASCADE, 
	CONSTRAINT res_config_settings_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_config_settings_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_country (
	id SERIAL NOT NULL, 
	address_view_id INTEGER, 
	currency_id INTEGER, 
	phone_code INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR(2), 
	name_position VARCHAR, 
	name JSONB NOT NULL, 
	vat_label JSONB, 
	address_format TEXT, 
	state_required BOOLEAN, 
	zip_required BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_country_pkey PRIMARY KEY (id), 
	CONSTRAINT res_country_address_view_id_fkey FOREIGN KEY(address_view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL, 
	CONSTRAINT res_country_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_country_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE SET NULL, 
	CONSTRAINT res_country_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_country_code_uniq UNIQUE (code), 
	CONSTRAINT res_country_name_uniq UNIQUE (name)
)


CREATE TABLE res_country_group (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_country_group_pkey PRIMARY KEY (id), 
	CONSTRAINT res_country_group_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_country_group_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_country_group_pricelist_rel (
	pricelist_id INTEGER NOT NULL, 
	res_country_group_id INTEGER NOT NULL, 
	CONSTRAINT res_country_group_pricelist_rel_pkey PRIMARY KEY (pricelist_id, res_country_group_id), 
	CONSTRAINT res_country_group_pricelist_rel_pricelist_id_fkey FOREIGN KEY(pricelist_id) REFERENCES product_pricelist (id) ON DELETE CASCADE, 
	CONSTRAINT res_country_group_pricelist_rel_res_country_group_id_fkey FOREIGN KEY(res_country_group_id) REFERENCES res_country_group (id) ON DELETE CASCADE
)


CREATE TABLE res_country_res_country_group_rel (
	res_country_id INTEGER NOT NULL, 
	res_country_group_id INTEGER NOT NULL, 
	CONSTRAINT res_country_res_country_group_rel_pkey PRIMARY KEY (res_country_id, res_country_group_id), 
	CONSTRAINT res_country_res_country_group_rel_res_country_group_id_fkey FOREIGN KEY(res_country_group_id) REFERENCES res_country_group (id) ON DELETE CASCADE, 
	CONSTRAINT res_country_res_country_group_rel_res_country_id_fkey FOREIGN KEY(res_country_id) REFERENCES res_country (id) ON DELETE CASCADE
)


CREATE TABLE res_country_state (
	id SERIAL NOT NULL, 
	country_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	code VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_country_state_pkey PRIMARY KEY (id), 
	CONSTRAINT res_country_state_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE RESTRICT, 
	CONSTRAINT res_country_state_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_country_state_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_country_state_name_code_uniq UNIQUE (country_id, code)
)


CREATE TABLE res_currency (
	id SERIAL NOT NULL, 
	name VARCHAR NOT NULL, 
	symbol VARCHAR NOT NULL, 
	decimal_places INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	full_name VARCHAR, 
	position VARCHAR, 
	currency_unit_label VARCHAR, 
	currency_subunit_label VARCHAR, 
	rounding NUMERIC, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_currency_pkey PRIMARY KEY (id), 
	CONSTRAINT res_currency_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_currency_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_currency_unique_name UNIQUE (name), 
	CONSTRAINT res_currency_rounding_gt_zero CHECK (rounding > 0::numeric)
)


CREATE TABLE res_currency_rate (
	id SERIAL NOT NULL, 
	currency_id INTEGER NOT NULL, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name DATE NOT NULL, 
	rate NUMERIC, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_currency_rate_pkey PRIMARY KEY (id), 
	CONSTRAINT res_currency_rate_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT res_currency_rate_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_currency_rate_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE CASCADE, 
	CONSTRAINT res_currency_rate_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_currency_rate_unique_name_per_day UNIQUE (name, currency_id, company_id), 
	CONSTRAINT res_currency_rate_currency_rate_check CHECK (rate > 0::numeric)
)


CREATE TABLE res_ethnic (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	description VARCHAR, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_ethnic_pkey PRIMARY KEY (id), 
	CONSTRAINT res_ethnic_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_ethnic_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_ethnic_code_uniq UNIQUE (code, name, active)
)


CREATE TABLE res_groups (
	id SERIAL NOT NULL, 
	name JSONB NOT NULL, 
	category_id INTEGER, 
	color INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	comment JSONB, 
	share BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_groups_pkey PRIMARY KEY (id), 
	CONSTRAINT res_groups_category_id_fkey FOREIGN KEY(category_id) REFERENCES ir_module_category (id) ON DELETE SET NULL, 
	CONSTRAINT res_groups_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_groups_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_groups_name_uniq UNIQUE (category_id, name)
)


CREATE TABLE res_groups_implied_rel (
	gid INTEGER NOT NULL, 
	hid INTEGER NOT NULL, 
	CONSTRAINT res_groups_implied_rel_pkey PRIMARY KEY (gid, hid), 
	CONSTRAINT res_groups_implied_rel_gid_fkey FOREIGN KEY(gid) REFERENCES res_groups (id) ON DELETE CASCADE, 
	CONSTRAINT res_groups_implied_rel_hid_fkey FOREIGN KEY(hid) REFERENCES res_groups (id) ON DELETE CASCADE
)


CREATE TABLE res_groups_report_rel (
	uid INTEGER NOT NULL, 
	gid INTEGER NOT NULL, 
	CONSTRAINT res_groups_report_rel_pkey PRIMARY KEY (uid, gid), 
	CONSTRAINT res_groups_report_rel_gid_fkey FOREIGN KEY(gid) REFERENCES res_groups (id) ON DELETE CASCADE, 
	CONSTRAINT res_groups_report_rel_uid_fkey FOREIGN KEY(uid) REFERENCES ir_act_report_xml (id) ON DELETE CASCADE
)


CREATE TABLE res_groups_spreadsheet_dashboard_rel (
	spreadsheet_dashboard_id INTEGER NOT NULL, 
	res_groups_id INTEGER NOT NULL, 
	CONSTRAINT res_groups_spreadsheet_dashboard_rel_pkey PRIMARY KEY (spreadsheet_dashboard_id, res_groups_id), 
	CONSTRAINT res_groups_spreadsheet_dashboard__spreadsheet_dashboard_id_fkey FOREIGN KEY(spreadsheet_dashboard_id) REFERENCES spreadsheet_dashboard (id) ON DELETE CASCADE, 
	CONSTRAINT res_groups_spreadsheet_dashboard_rel_res_groups_id_fkey FOREIGN KEY(res_groups_id) REFERENCES res_groups (id) ON DELETE CASCADE
)


CREATE TABLE res_groups_users_rel (
	gid INTEGER NOT NULL, 
	uid INTEGER NOT NULL, 
	CONSTRAINT res_groups_users_rel_pkey PRIMARY KEY (gid, uid), 
	CONSTRAINT res_groups_users_rel_gid_fkey FOREIGN KEY(gid) REFERENCES res_groups (id) ON DELETE CASCADE, 
	CONSTRAINT res_groups_users_rel_uid_fkey FOREIGN KEY(uid) REFERENCES res_users (id) ON DELETE CASCADE
)


CREATE TABLE res_lang (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	code VARCHAR NOT NULL, 
	iso_code VARCHAR, 
	url_code VARCHAR NOT NULL, 
	direction VARCHAR NOT NULL, 
	date_format VARCHAR NOT NULL, 
	time_format VARCHAR NOT NULL, 
	week_start VARCHAR NOT NULL, 
	grouping VARCHAR NOT NULL, 
	decimal_point VARCHAR NOT NULL, 
	thousands_sep VARCHAR, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_lang_pkey PRIMARY KEY (id), 
	CONSTRAINT res_lang_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_lang_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_lang_code_uniq UNIQUE (code), 
	CONSTRAINT res_lang_name_uniq UNIQUE (name), 
	CONSTRAINT res_lang_url_code_uniq UNIQUE (url_code)
)


CREATE TABLE res_lang_install_rel (
	language_wizard_id INTEGER NOT NULL, 
	lang_id INTEGER NOT NULL, 
	CONSTRAINT res_lang_install_rel_pkey PRIMARY KEY (language_wizard_id, lang_id), 
	CONSTRAINT res_lang_install_rel_lang_id_fkey FOREIGN KEY(lang_id) REFERENCES res_lang (id) ON DELETE CASCADE, 
	CONSTRAINT res_lang_install_rel_language_wizard_id_fkey FOREIGN KEY(language_wizard_id) REFERENCES base_language_install (id) ON DELETE CASCADE
)


CREATE TABLE res_partner (
	id SERIAL NOT NULL, 
	company_id INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	name VARCHAR, 
	title INTEGER, 
	parent_id INTEGER, 
	user_id INTEGER, 
	state_id INTEGER, 
	country_id INTEGER, 
	industry_id INTEGER, 
	color INTEGER, 
	commercial_partner_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	display_name VARCHAR, 
	ref VARCHAR, 
	lang VARCHAR, 
	tz VARCHAR, 
	vat VARCHAR, 
	company_registry VARCHAR, 
	website VARCHAR, 
	function VARCHAR, 
	type VARCHAR, 
	street VARCHAR, 
	street2 VARCHAR, 
	zip VARCHAR, 
	city VARCHAR, 
	email VARCHAR, 
	phone VARCHAR, 
	mobile VARCHAR, 
	commercial_company_name VARCHAR, 
	company_name VARCHAR, 
	date DATE, 
	comment TEXT, 
	partner_latitude NUMERIC, 
	partner_longitude NUMERIC, 
	active BOOLEAN, 
	employee BOOLEAN, 
	is_company BOOLEAN, 
	partner_share BOOLEAN, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	message_main_attachment_id INTEGER, 
	message_bounce INTEGER, 
	email_normalized VARCHAR, 
	signup_type VARCHAR, 
	signup_expiration TIMESTAMP WITHOUT TIME ZONE, 
	signup_token VARCHAR, 
	partner_gid INTEGER, 
	additional_info VARCHAR, 
	phone_sanitized VARCHAR, 
	CONSTRAINT res_partner_pkey PRIMARY KEY (id), 
	CONSTRAINT res_partner_commercial_partner_id_fkey FOREIGN KEY(commercial_partner_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE RESTRICT, 
	CONSTRAINT res_partner_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_industry_id_fkey FOREIGN KEY(industry_id) REFERENCES res_partner_industry (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_state_id_fkey FOREIGN KEY(state_id) REFERENCES res_country_state (id) ON DELETE RESTRICT, 
	CONSTRAINT res_partner_title_fkey FOREIGN KEY(title) REFERENCES res_partner_title (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_check_name CHECK (type::text = 'contact'::text AND name IS NOT NULL OR type::text <> 'contact'::text)
)


CREATE TABLE res_partner_autocomplete_sync (
	id SERIAL NOT NULL, 
	partner_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	synched BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_partner_autocomplete_sync_pkey PRIMARY KEY (id), 
	CONSTRAINT res_partner_autocomplete_sync_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_autocomplete_sync_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT res_partner_autocomplete_sync_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_partner_bank (
	id SERIAL NOT NULL, 
	partner_id INTEGER NOT NULL, 
	bank_id INTEGER, 
	sequence INTEGER, 
	currency_id INTEGER, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	acc_number VARCHAR NOT NULL, 
	sanitized_acc_number VARCHAR, 
	acc_holder_name VARCHAR, 
	active BOOLEAN, 
	allow_out_payment BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_partner_bank_pkey PRIMARY KEY (id), 
	CONSTRAINT res_partner_bank_bank_id_fkey FOREIGN KEY(bank_id) REFERENCES res_bank (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_bank_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_bank_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_bank_currency_id_fkey FOREIGN KEY(currency_id) REFERENCES res_currency (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_bank_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT res_partner_bank_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_bank_unique_number UNIQUE (sanitized_acc_number, partner_id)
)


CREATE TABLE res_partner_category (
	id SERIAL NOT NULL, 
	color INTEGER, 
	parent_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	parent_path VARCHAR, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_partner_category_pkey PRIMARY KEY (id), 
	CONSTRAINT res_partner_category_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_category_parent_id_fkey FOREIGN KEY(parent_id) REFERENCES res_partner_category (id) ON DELETE CASCADE, 
	CONSTRAINT res_partner_category_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_partner_industry (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB, 
	full_name JSONB, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_partner_industry_pkey PRIMARY KEY (id), 
	CONSTRAINT res_partner_industry_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_industry_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_partner_res_partner_category_rel (
	category_id INTEGER NOT NULL, 
	partner_id INTEGER NOT NULL, 
	CONSTRAINT res_partner_res_partner_category_rel_pkey PRIMARY KEY (category_id, partner_id), 
	CONSTRAINT res_partner_res_partner_category_rel_category_id_fkey FOREIGN KEY(category_id) REFERENCES res_partner_category (id) ON DELETE CASCADE, 
	CONSTRAINT res_partner_res_partner_category_rel_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE
)


CREATE TABLE res_partner_title (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	shortcut JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_partner_title_pkey PRIMARY KEY (id), 
	CONSTRAINT res_partner_title_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_partner_title_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_religion (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	description VARCHAR, 
	name JSONB NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_religion_pkey PRIMARY KEY (id), 
	CONSTRAINT res_religion_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_religion_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_religion_code_uniq UNIQUE (code, name, active)
)


CREATE TABLE res_users (
	id SERIAL NOT NULL, 
	company_id INTEGER NOT NULL, 
	partner_id INTEGER NOT NULL, 
	active BOOLEAN DEFAULT true, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	login VARCHAR NOT NULL, 
	password VARCHAR, 
	action_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	signature TEXT, 
	share BOOLEAN, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	totp_secret VARCHAR, 
	notification_type VARCHAR NOT NULL, 
	odoobot_state VARCHAR, 
	odoobot_failed BOOLEAN, 
	company_name VARCHAR, 
	CONSTRAINT res_users_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT res_users_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT, 
	CONSTRAINT res_users_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_login_key UNIQUE (login), 
	CONSTRAINT res_users_notification_type CHECK (notification_type::text = 'email'::text OR NOT share)
)


CREATE TABLE res_users_apikeys (
	id SERIAL NOT NULL, 
	name VARCHAR NOT NULL, 
	user_id INTEGER NOT NULL, 
	scope VARCHAR, 
	index VARCHAR(8), 
	key VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE DEFAULT (now() AT TIME ZONE 'utc'::text), 
	CONSTRAINT res_users_apikeys_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_apikeys_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id), 
	CONSTRAINT res_users_apikeys_index_check CHECK (char_length(index::text) = 8)
)


CREATE TABLE res_users_apikeys_description (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_users_apikeys_description_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_apikeys_description_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_apikeys_description_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_users_deletion (
	id SERIAL NOT NULL, 
	user_id INTEGER, 
	user_id_int INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	state VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_users_deletion_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_deletion_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_deletion_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_deletion_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_users_identitycheck (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	request VARCHAR, 
	password VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_users_identitycheck_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_identitycheck_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_identitycheck_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_users_log (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_users_log_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_log_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_log_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE res_users_settings (
	id SERIAL NOT NULL, 
	user_id INTEGER NOT NULL, 
	voice_active_duration INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	push_to_talk_key VARCHAR, 
	is_discuss_sidebar_category_channel_open BOOLEAN, 
	is_discuss_sidebar_category_chat_open BOOLEAN, 
	use_push_to_talk BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT res_users_settings_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_settings_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_settings_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE CASCADE, 
	CONSTRAINT res_users_settings_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_settings_unique_user_id UNIQUE (user_id)
)


CREATE TABLE res_users_settings_volumes (
	id SERIAL NOT NULL, 
	user_setting_id INTEGER NOT NULL, 
	partner_id INTEGER, 
	guest_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	volume DOUBLE PRECISION, 
	CONSTRAINT res_users_settings_volumes_pkey PRIMARY KEY (id), 
	CONSTRAINT res_users_settings_volumes_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_settings_volumes_guest_id_fkey FOREIGN KEY(guest_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT res_users_settings_volumes_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE CASCADE, 
	CONSTRAINT res_users_settings_volumes_user_setting_id_fkey FOREIGN KEY(user_setting_id) REFERENCES res_users_settings (id) ON DELETE CASCADE, 
	CONSTRAINT res_users_settings_volumes_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT res_users_settings_volumes_partner_or_guest_exists CHECK (partner_id IS NOT NULL AND guest_id IS NULL OR partner_id IS NULL AND guest_id IS NOT NULL)
)


CREATE TABLE reset_view_arch_wizard (
	id SERIAL NOT NULL, 
	view_id INTEGER, 
	compare_view_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	reset_mode VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT reset_view_arch_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT reset_view_arch_wizard_compare_view_id_fkey FOREIGN KEY(compare_view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL, 
	CONSTRAINT reset_view_arch_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT reset_view_arch_wizard_view_id_fkey FOREIGN KEY(view_id) REFERENCES ir_ui_view (id) ON DELETE SET NULL, 
	CONSTRAINT reset_view_arch_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE resource_calendar (
	id SERIAL NOT NULL, 
	company_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	tz VARCHAR NOT NULL, 
	active BOOLEAN, 
	two_weeks_calendar BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	hours_per_day DOUBLE PRECISION, 
	CONSTRAINT resource_calendar_pkey PRIMARY KEY (id), 
	CONSTRAINT resource_calendar_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE resource_calendar_attendance (
	id SERIAL NOT NULL, 
	calendar_id INTEGER NOT NULL, 
	resource_id INTEGER, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	dayofweek VARCHAR NOT NULL, 
	day_period VARCHAR NOT NULL, 
	week_type VARCHAR, 
	display_type VARCHAR, 
	date_from DATE, 
	date_to DATE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	hour_from DOUBLE PRECISION NOT NULL, 
	hour_to DOUBLE PRECISION NOT NULL, 
	CONSTRAINT resource_calendar_attendance_pkey PRIMARY KEY (id), 
	CONSTRAINT resource_calendar_attendance_calendar_id_fkey FOREIGN KEY(calendar_id) REFERENCES resource_calendar (id) ON DELETE CASCADE, 
	CONSTRAINT resource_calendar_attendance_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_attendance_resource_id_fkey FOREIGN KEY(resource_id) REFERENCES resource_resource (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_attendance_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE resource_calendar_leaves (
	id SERIAL NOT NULL, 
	company_id INTEGER, 
	calendar_id INTEGER, 
	resource_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	time_type VARCHAR, 
	date_from TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	date_to TIMESTAMP WITHOUT TIME ZONE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT resource_calendar_leaves_pkey PRIMARY KEY (id), 
	CONSTRAINT resource_calendar_leaves_calendar_id_fkey FOREIGN KEY(calendar_id) REFERENCES resource_calendar (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_leaves_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_leaves_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_leaves_resource_id_fkey FOREIGN KEY(resource_id) REFERENCES resource_resource (id) ON DELETE SET NULL, 
	CONSTRAINT resource_calendar_leaves_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE resource_resource (
	id SERIAL NOT NULL, 
	company_id INTEGER, 
	user_id INTEGER, 
	calendar_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	resource_type VARCHAR NOT NULL, 
	tz VARCHAR NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	time_efficiency DOUBLE PRECISION NOT NULL, 
	CONSTRAINT resource_resource_pkey PRIMARY KEY (id), 
	CONSTRAINT resource_resource_calendar_id_fkey FOREIGN KEY(calendar_id) REFERENCES resource_calendar (id) ON DELETE RESTRICT, 
	CONSTRAINT resource_resource_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE SET NULL, 
	CONSTRAINT resource_resource_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT resource_resource_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT resource_resource_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT resource_resource_check_time_efficiency CHECK (time_efficiency > 0::double precision)
)


CREATE TABLE result_embryo_freezing_wizard (
	id SERIAL NOT NULL, 
	patient_id INTEGER NOT NULL, 
	date_or_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	result_type VARCHAR NOT NULL, 
	print_type VARCHAR NOT NULL, 
	date_of_or DATE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	freezing_code_id INTEGER NOT NULL, 
	CONSTRAINT result_embryo_freezing_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT result_embryo_freezing_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT result_embryo_freezing_wizard_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT result_embryo_freezing_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE result_embryo_frozen_template_rel (
	result_id INTEGER NOT NULL, 
	frozen_id INTEGER NOT NULL, 
	CONSTRAINT result_embryo_frozen_template_rel_pkey PRIMARY KEY (result_id, frozen_id), 
	CONSTRAINT result_embryo_frozen_template_rel_frozen_id_fkey FOREIGN KEY(frozen_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT result_embryo_frozen_template_rel_result_id_fkey FOREIGN KEY(result_id) REFERENCES result_embryo_freezing_wizard (id) ON DELETE CASCADE
)


CREATE TABLE result_sperm_freezing_wizard (
	id SERIAL NOT NULL, 
	freezing_date_id INTEGER, 
	patient_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	print_type VARCHAR NOT NULL, 
	freezing_date DATE NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT result_sperm_freezing_wizard_pkey PRIMARY KEY (id), 
	CONSTRAINT result_sperm_freezing_wizard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT result_sperm_freezing_wizard_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT result_sperm_freezing_wizard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE result_sperm_frozen_template_rel (
	result_id INTEGER NOT NULL, 
	frozen_id INTEGER NOT NULL, 
	CONSTRAINT result_sperm_frozen_template_rel_pkey PRIMARY KEY (result_id, frozen_id), 
	CONSTRAINT result_sperm_frozen_template_rel_frozen_id_fkey FOREIGN KEY(frozen_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT result_sperm_frozen_template_rel_result_id_fkey FOREIGN KEY(result_id) REFERENCES result_sperm_freezing_wizard (id) ON DELETE CASCADE
)


CREATE TABLE rule_group_rel (
	rule_group_id INTEGER NOT NULL, 
	group_id INTEGER NOT NULL, 
	CONSTRAINT rule_group_rel_pkey PRIMARY KEY (rule_group_id, group_id), 
	CONSTRAINT rule_group_rel_group_id_fkey FOREIGN KEY(group_id) REFERENCES res_groups (id) ON DELETE RESTRICT, 
	CONSTRAINT rule_group_rel_rule_group_id_fkey FOREIGN KEY(rule_group_id) REFERENCES ir_rule (id) ON DELETE CASCADE
)


CREATE TABLE selection_value (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	model_id INTEGER, 
	field_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	res_model VARCHAR, 
	field_reference VARCHAR, 
	name JSONB NOT NULL, 
	option_params JSONB, 
	is_false BOOLEAN, 
	active BOOLEAN, 
	is_show_note BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT selection_value_pkey PRIMARY KEY (id), 
	CONSTRAINT selection_value_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_field_id_fkey FOREIGN KEY(field_id) REFERENCES ir_model_fields (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_code_uniq UNIQUE (code, field_reference, name, active)
)


CREATE TABLE selection_value_surgery (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	model_id INTEGER, 
	field_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	code VARCHAR NOT NULL, 
	res_model VARCHAR, 
	field_reference VARCHAR, 
	gender VARCHAR, 
	name JSONB NOT NULL, 
	option_params JSONB, 
	is_false BOOLEAN, 
	active BOOLEAN, 
	is_show_note BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT selection_value_surgery_pkey PRIMARY KEY (id), 
	CONSTRAINT selection_value_surgery_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_surgery_field_id_fkey FOREIGN KEY(field_id) REFERENCES ir_model_fields (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_surgery_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_surgery_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT selection_value_surgery_code_uniq UNIQUE (code, field_reference, name, active)
)


CREATE TABLE sexual_disorder_record_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT sexual_disorder_record_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT sexual_disorder_record_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient_record (id) ON DELETE CASCADE, 
	CONSTRAINT sexual_disorder_record_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE sexual_disorder_sl_rel (
	patient_id INTEGER NOT NULL, 
	selection_id INTEGER NOT NULL, 
	CONSTRAINT sexual_disorder_sl_rel_pkey PRIMARY KEY (patient_id, selection_id), 
	CONSTRAINT sexual_disorder_sl_rel_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE CASCADE, 
	CONSTRAINT sexual_disorder_sl_rel_selection_id_fkey FOREIGN KEY(selection_id) REFERENCES selection_value (id) ON DELETE RESTRICT
)


CREATE TABLE skin_color (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT skin_color_pkey PRIMARY KEY (id), 
	CONSTRAINT skin_color_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT skin_color_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_composer (
	id SERIAL NOT NULL, 
	res_id INTEGER, 
	template_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	composition_mode VARCHAR NOT NULL, 
	res_model VARCHAR, 
	res_ids VARCHAR, 
	recipient_single_number_itf VARCHAR, 
	number_field_name VARCHAR, 
	numbers VARCHAR, 
	body TEXT NOT NULL, 
	mass_keep_log BOOLEAN, 
	mass_force_send BOOLEAN, 
	mass_use_blacklist BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sms_composer_pkey PRIMARY KEY (id), 
	CONSTRAINT sms_composer_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sms_composer_template_id_fkey FOREIGN KEY(template_id) REFERENCES sms_template (id) ON DELETE SET NULL, 
	CONSTRAINT sms_composer_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_resend (
	id SERIAL NOT NULL, 
	mail_message_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sms_resend_pkey PRIMARY KEY (id), 
	CONSTRAINT sms_resend_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sms_resend_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE CASCADE, 
	CONSTRAINT sms_resend_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_resend_recipient (
	id SERIAL NOT NULL, 
	sms_resend_id INTEGER NOT NULL, 
	notification_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	partner_name VARCHAR, 
	sms_number VARCHAR, 
	resend BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sms_resend_recipient_pkey PRIMARY KEY (id), 
	CONSTRAINT sms_resend_recipient_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sms_resend_recipient_notification_id_fkey FOREIGN KEY(notification_id) REFERENCES mail_notification (id) ON DELETE CASCADE, 
	CONSTRAINT sms_resend_recipient_sms_resend_id_fkey FOREIGN KEY(sms_resend_id) REFERENCES sms_resend (id) ON DELETE RESTRICT, 
	CONSTRAINT sms_resend_recipient_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_sms (
	id SERIAL NOT NULL, 
	partner_id INTEGER, 
	mail_message_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	number VARCHAR, 
	state VARCHAR NOT NULL, 
	failure_type VARCHAR, 
	body TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sms_sms_pkey PRIMARY KEY (id), 
	CONSTRAINT sms_sms_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sms_sms_mail_message_id_fkey FOREIGN KEY(mail_message_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT sms_sms_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT sms_sms_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_template (
	id SERIAL NOT NULL, 
	model_id INTEGER NOT NULL, 
	sidebar_action_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	template_fs VARCHAR, 
	lang VARCHAR, 
	model VARCHAR, 
	name JSONB, 
	body JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sms_template_pkey PRIMARY KEY (id), 
	CONSTRAINT sms_template_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sms_template_model_id_fkey FOREIGN KEY(model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT sms_template_sidebar_action_id_fkey FOREIGN KEY(sidebar_action_id) REFERENCES ir_act_window (id) ON DELETE SET NULL, 
	CONSTRAINT sms_template_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_template_preview (
	id SERIAL NOT NULL, 
	sms_template_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	lang VARCHAR, 
	resource_ref VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sms_template_preview_pkey PRIMARY KEY (id), 
	CONSTRAINT sms_template_preview_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sms_template_preview_sms_template_id_fkey FOREIGN KEY(sms_template_id) REFERENCES sms_template (id) ON DELETE CASCADE, 
	CONSTRAINT sms_template_preview_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_template_reset (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sms_template_reset_pkey PRIMARY KEY (id), 
	CONSTRAINT sms_template_reset_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sms_template_reset_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sms_template_sms_template_reset_rel (
	sms_template_reset_id INTEGER NOT NULL, 
	sms_template_id INTEGER NOT NULL, 
	CONSTRAINT sms_template_sms_template_reset_rel_pkey PRIMARY KEY (sms_template_reset_id, sms_template_id), 
	CONSTRAINT sms_template_sms_template_reset_rel_sms_template_id_fkey FOREIGN KEY(sms_template_id) REFERENCES sms_template (id) ON DELETE CASCADE, 
	CONSTRAINT sms_template_sms_template_reset_rel_sms_template_reset_id_fkey FOREIGN KEY(sms_template_reset_id) REFERENCES sms_template_reset (id) ON DELETE CASCADE
)


CREATE TABLE snailmail_letter (
	id SERIAL NOT NULL, 
	user_id INTEGER, 
	res_id INTEGER NOT NULL, 
	partner_id INTEGER NOT NULL, 
	company_id INTEGER NOT NULL, 
	report_template INTEGER, 
	attachment_id INTEGER, 
	message_id INTEGER, 
	state_id INTEGER, 
	country_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	model VARCHAR NOT NULL, 
	state VARCHAR NOT NULL, 
	error_code VARCHAR, 
	info_msg VARCHAR, 
	street VARCHAR, 
	street2 VARCHAR, 
	zip VARCHAR, 
	city VARCHAR, 
	color BOOLEAN, 
	cover BOOLEAN, 
	duplex BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT snailmail_letter_pkey PRIMARY KEY (id), 
	CONSTRAINT snailmail_letter_attachment_id_fkey FOREIGN KEY(attachment_id) REFERENCES ir_attachment (id) ON DELETE CASCADE, 
	CONSTRAINT snailmail_letter_company_id_fkey FOREIGN KEY(company_id) REFERENCES res_company (id) ON DELETE RESTRICT, 
	CONSTRAINT snailmail_letter_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_message_id_fkey FOREIGN KEY(message_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE RESTRICT, 
	CONSTRAINT snailmail_letter_report_template_fkey FOREIGN KEY(report_template) REFERENCES ir_act_report_xml (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_state_id_fkey FOREIGN KEY(state_id) REFERENCES res_country_state (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE snailmail_letter_format_error (
	id SERIAL NOT NULL, 
	message_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	snailmail_cover BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT snailmail_letter_format_error_pkey PRIMARY KEY (id), 
	CONSTRAINT snailmail_letter_format_error_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_format_error_message_id_fkey FOREIGN KEY(message_id) REFERENCES mail_message (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_format_error_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE snailmail_letter_missing_required_fields (
	id SERIAL NOT NULL, 
	partner_id INTEGER, 
	letter_id INTEGER, 
	state_id INTEGER, 
	country_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	street VARCHAR, 
	street2 VARCHAR, 
	zip VARCHAR, 
	city VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT snailmail_letter_missing_required_fields_pkey PRIMARY KEY (id), 
	CONSTRAINT snailmail_letter_missing_required_fields_country_id_fkey FOREIGN KEY(country_id) REFERENCES res_country (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_missing_required_fields_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_missing_required_fields_letter_id_fkey FOREIGN KEY(letter_id) REFERENCES snailmail_letter (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_missing_required_fields_partner_id_fkey FOREIGN KEY(partner_id) REFERENCES res_partner (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_missing_required_fields_state_id_fkey FOREIGN KEY(state_id) REFERENCES res_country_state (id) ON DELETE SET NULL, 
	CONSTRAINT snailmail_letter_missing_required_fields_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE source_sperm_value_rel (
	medical_embryo_culture_id INTEGER NOT NULL, 
	selection_value_id INTEGER NOT NULL, 
	CONSTRAINT source_sperm_value_rel_pkey PRIMARY KEY (medical_embryo_culture_id, selection_value_id), 
	CONSTRAINT source_sperm_value_rel_medical_embryo_culture_id_fkey FOREIGN KEY(medical_embryo_culture_id) REFERENCES medical_embryo_culture (id) ON DELETE CASCADE, 
	CONSTRAINT source_sperm_value_rel_selection_value_id_fkey FOREIGN KEY(selection_value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE source_sperm_value_wz_rel (
	medical_create_culture_id INTEGER NOT NULL, 
	selection_value_id INTEGER NOT NULL, 
	CONSTRAINT source_sperm_value_wz_rel_pkey PRIMARY KEY (medical_create_culture_id, selection_value_id), 
	CONSTRAINT source_sperm_value_wz_rel_medical_create_culture_id_fkey FOREIGN KEY(medical_create_culture_id) REFERENCES medical_create_culture (id) ON DELETE CASCADE, 
	CONSTRAINT source_sperm_value_wz_rel_selection_value_id_fkey FOREIGN KEY(selection_value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE sparse_fields_test (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	data TEXT, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sparse_fields_test_pkey PRIMARY KEY (id), 
	CONSTRAINT sparse_fields_test_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sparse_fields_test_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE spreadsheet_dashboard (
	id SERIAL NOT NULL, 
	dashboard_group_id INTEGER NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	function_compute VARCHAR, 
	CONSTRAINT spreadsheet_dashboard_pkey PRIMARY KEY (id), 
	CONSTRAINT spreadsheet_dashboard_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT spreadsheet_dashboard_dashboard_group_id_fkey FOREIGN KEY(dashboard_group_id) REFERENCES spreadsheet_dashboard_group (id) ON DELETE RESTRICT, 
	CONSTRAINT spreadsheet_dashboard_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE spreadsheet_dashboard_group (
	id SERIAL NOT NULL, 
	sequence INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT spreadsheet_dashboard_group_pkey PRIMARY KEY (id), 
	CONSTRAINT spreadsheet_dashboard_group_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT spreadsheet_dashboard_group_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE surgery_history (
	id SERIAL NOT NULL, 
	patient_id INTEGER, 
	patient_record_id INTEGER, 
	sl_surgery_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	year VARCHAR, 
	method VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT surgery_history_pkey PRIMARY KEY (id), 
	CONSTRAINT surgery_history_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT surgery_history_patient_id_fkey FOREIGN KEY(patient_id) REFERENCES medical_patient (id) ON DELETE SET NULL, 
	CONSTRAINT surgery_history_patient_record_id_fkey FOREIGN KEY(patient_record_id) REFERENCES medical_patient_record (id) ON DELETE SET NULL, 
	CONSTRAINT surgery_history_sl_surgery_id_fkey FOREIGN KEY(sl_surgery_id) REFERENCES selection_value_surgery (id) ON DELETE RESTRICT, 
	CONSTRAINT surgery_history_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_hr_employee (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_hr_employee_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_hr_employee_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_hr_employee_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_mapping (
	id SERIAL NOT NULL, 
	message_main_attachment_id INTEGER, 
	sequence INTEGER, 
	setting_seq INTEGER, 
	src_model_id INTEGER NOT NULL, 
	setting_id INTEGER NOT NULL, 
	limit_fetch INTEGER, 
	sleep_time_fetch INTEGER, 
	limit_read INTEGER, 
	sleep_time_read INTEGER, 
	"limit" INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256) NOT NULL, 
	remote_model VARCHAR(64) NOT NULL, 
	sync_function VARCHAR(64), 
	unique_fields VARCHAR, 
	transit_model VARCHAR, 
	"order" VARCHAR, 
	unique_fields_and VARCHAR, 
	group_code VARCHAR, 
	domain_unique VARCHAR, 
	other_domain VARCHAR, 
	src_fields TEXT NOT NULL, 
	remote_fields TEXT, 
	defaults TEXT, 
	filter_domain TEXT, 
	specific_mapping TEXT, 
	post_script TEXT, 
	context_value TEXT, 
	use_specific_sync BOOLEAN, 
	active BOOLEAN, 
	has_active_field BOOLEAN, 
	is_run_job BOOLEAN, 
	disable_eta BOOLEAN, 
	is_update BOOLEAN, 
	operator_or BOOLEAN, 
	operator_and BOOLEAN, 
	raise_if_null BOOLEAN, 
	allow_sync_not_found BOOLEAN, 
	is_check_active_field BOOLEAN, 
	last_sync_date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_mapping_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_mapping_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_mapping_message_main_attachment_id_fkey FOREIGN KEY(message_main_attachment_id) REFERENCES ir_attachment (id) ON DELETE SET NULL, 
	CONSTRAINT sync_mapping_setting_id_fkey FOREIGN KEY(setting_id) REFERENCES connection_setting (id) ON DELETE CASCADE, 
	CONSTRAINT sync_mapping_src_model_id_fkey FOREIGN KEY(src_model_id) REFERENCES ir_model (id) ON DELETE CASCADE, 
	CONSTRAINT sync_mapping_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_mapping_uniq_src_model_id_remote_model_filter_domain_setti UNIQUE (src_model_id, remote_model, filter_domain, setting_id)
)


CREATE TABLE sync_mapping_domain (
	id SERIAL NOT NULL, 
	"offset" INTEGER, 
	"limit" INTEGER, 
	mapping_id INTEGER, 
	limit_offset INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	src_model VARCHAR, 
	remote_model VARCHAR, 
	state VARCHAR, 
	filter_domain VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_mapping_domain_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_mapping_domain_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_mapping_domain_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE SET NULL, 
	CONSTRAINT sync_mapping_domain_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_mapping_relation (
	id SERIAL NOT NULL, 
	sequence INTEGER NOT NULL, 
	mapping_relation_id INTEGER NOT NULL, 
	mapping_id INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	field_relation VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_mapping_relation_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_mapping_relation_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_mapping_relation_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE SET NULL, 
	CONSTRAINT sync_mapping_relation_mapping_relation_id_fkey FOREIGN KEY(mapping_relation_id) REFERENCES sync_mapping (id) ON DELETE RESTRICT, 
	CONSTRAINT sync_mapping_relation_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_follow_follicular (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_follow_follicular_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_follow_follicular_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_follow_follicular_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_history_relationship (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_history_relationship_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_history_relationship_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_history_relationship_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_patient (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_patient_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_patient_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_patient_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_patient_record (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_patient_record_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_patient_record_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_patient_record_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_patient_relationship (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_patient_relationship_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_patient_relationship_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_patient_relationship_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_treatment (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_treatment_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_treatment_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_treatment_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_treatment_result (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_treatment_result_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_treatment_result_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_treatment_result_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_treatment_stage (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_treatment_stage_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_treatment_stage_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_treatment_stage_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_medical_treatment_technique (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_medical_treatment_technique_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_medical_treatment_technique_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_medical_treatment_technique_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_record (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_history_medical_treatment_iui (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_history_medical_treatment_iui_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_history_medical_treatment_iui_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_history_medical_treatment_iui_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_history_medical_treatment_iui_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_history_medical_treatment_iui_uniq_id_src_mapping_i UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_history_medical_treatment_ivf (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_history_medical_treatment_ivf_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_history_medical_treatment_ivf_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_history_medical_treatment_ivf_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_history_medical_treatment_ivf_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_history_medical_treatment_ivf_uniq_id_src_mapping_i UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_hr_department (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_hr_department_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_hr_department_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_hr_department_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_hr_department_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_hr_department_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_hr_employee (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_hr_employee_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_hr_employee_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_hr_employee_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_hr_employee_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_hr_employee_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_hr_job (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_hr_job_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_hr_job_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_hr_job_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_hr_job_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_hr_job_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_cause_infertility (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_cause_infertility_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_cause_infertility_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_cause_infertility_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_cause_infertility_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_cause_infertility_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_diagnostic (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_diagnostic_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_diagnostic_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_diagnostic_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_diagnostic_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_diagnostic_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_embryo_detail (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_embryo_detail_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_embryo_detail_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_embryo_detail_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_embryo_detail_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_embryo_detail_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_ex_husband (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_ex_husband_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_ex_husband_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_ex_husband_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_ex_husband_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_ex_husband_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_follicular_size (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_follicular_size_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_follicular_size_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_follicular_size_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_follicular_size_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_follicular_size_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_follow_follicular (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_follow_follicular_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_follow_follicular_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_follow_follicular_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_follow_follicular_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_follow_follicular_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_history_relationship (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_history_relationship_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_history_relationship_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_history_relationship_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_history_relationship_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_history_relationship_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_hr_department_line (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_hr_department_line_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_hr_department_line_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_hr_department_line_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_hr_department_line_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_hr_department_line_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_icd (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_icd_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_icd_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_icd_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_icd_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_icd_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_image_embryo (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_image_embryo_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_image_embryo_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_image_embryo_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_image_embryo_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_image_embryo_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_initial_evaluation (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_initial_evaluation_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_initial_evaluation_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_initial_evaluation_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_initial_evaluation_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_initial_evaluation_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_marital_year (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_marital_year_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_marital_year_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_marital_year_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_marital_year_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_marital_year_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_outpatient_examination (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_outpatient_examination_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_outpatient_examination_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_outpatient_examination_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_outpatient_examination_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_outpatient_examination_uniq_id_src_mapping_ UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_patient (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_patient_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_patient_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_patient_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_patient_document (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_patient_document_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_patient_document_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_document_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_patient_document_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_document_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_patient_record (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_patient_record_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_patient_record_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_record_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_patient_record_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_record_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_patient_relationship (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_patient_relationship_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_patient_relationship_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_relationship_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_patient_relationship_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_relationship_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_patient_treatment_process_history (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_patient_treatment_process_history_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_patient_treatment_process_h_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_treatment_process_h_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_patient_treatment_process_hi_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_patient_treatment_process_history_uniq_id_s UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_pgs_info (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_pgs_info_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_pgs_info_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_pgs_info_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_pgs_info_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_pgs_info_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_protocol (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_protocol_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_protocol_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_protocol_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_protocol_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_protocol_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_record_type (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_record_type_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_record_type_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_record_type_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_record_type_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_record_type_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_treatment (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_treatment_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_treatment_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_treatment_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_treatment_document (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_treatment_document_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_treatment_document_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_document_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_treatment_document_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_document_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_treatment_patient_progress (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_treatment_patient_progress_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_treatment_patient_progress_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_patient_progress_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_treatment_patient_progress_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_patient_progress_uniq_id_src_mapp UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_treatment_result (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_treatment_result_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_treatment_result_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_result_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_treatment_result_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_result_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_treatment_stage (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_treatment_stage_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_treatment_stage_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_stage_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_treatment_stage_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_stage_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_medical_treatment_technique (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_medical_treatment_technique_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_medical_treatment_technique_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_technique_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_medical_treatment_technique_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_medical_treatment_technique_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_res_country (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_res_country_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_res_country_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_res_country_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_res_country_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_res_country_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_res_country_state (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_res_country_state_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_res_country_state_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_res_country_state_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_res_country_state_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_res_country_state_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_res_users (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_res_users_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_res_users_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_res_users_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_res_users_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_res_users_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_selection_value (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_selection_value_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_selection_value_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_selection_value_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_selection_value_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_selection_value_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_selection_value_surgery (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_selection_value_surgery_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_selection_value_surgery_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_selection_value_surgery_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_selection_value_surgery_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_selection_value_surgery_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_record_surgery_history (
	id SERIAL NOT NULL, 
	mapping_id INTEGER NOT NULL, 
	id_src INTEGER, 
	id_remote INTEGER NOT NULL, 
	id_inherit INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR(256), 
	state VARCHAR, 
	note TEXT, 
	is_deleted BOOLEAN, 
	active BOOLEAN, 
	date TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_record_surgery_history_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_record_surgery_history_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_surgery_history_mapping_id_fkey FOREIGN KEY(mapping_id) REFERENCES sync_mapping (id) ON DELETE CASCADE, 
	CONSTRAINT sync_record_surgery_history_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_record_surgery_history_uniq_id_src_mapping_id UNIQUE (id_remote, mapping_id)
)


CREATE TABLE sync_selection_value (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_selection_value_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_selection_value_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_selection_value_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE sync_selection_value_surgery (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT sync_selection_value_surgery_pkey PRIMARY KEY (id), 
	CONSTRAINT sync_selection_value_surgery_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT sync_selection_value_surgery_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE technique_protocol_rel (
	technique_id INTEGER NOT NULL, 
	protocol_id INTEGER NOT NULL, 
	CONSTRAINT technique_protocol_rel_pkey PRIMARY KEY (technique_id, protocol_id), 
	CONSTRAINT technique_protocol_rel_protocol_id_fkey FOREIGN KEY(protocol_id) REFERENCES medical_treatment_technique (id) ON DELETE CASCADE, 
	CONSTRAINT technique_protocol_rel_technique_id_fkey FOREIGN KEY(technique_id) REFERENCES medical_protocol (id) ON DELETE CASCADE
)


CREATE TABLE test_group_rel (
	medical_test_id INTEGER NOT NULL, 
	medical_test_group_id INTEGER NOT NULL, 
	CONSTRAINT test_group_rel_pkey PRIMARY KEY (medical_test_id, medical_test_group_id), 
	CONSTRAINT test_group_rel_medical_test_group_id_fkey FOREIGN KEY(medical_test_group_id) REFERENCES medical_test_group (id) ON DELETE CASCADE, 
	CONSTRAINT test_group_rel_medical_test_id_fkey FOREIGN KEY(medical_test_id) REFERENCES medical_test (id) ON DELETE CASCADE
)


CREATE TABLE thaw_popup_cryopreserv_straw_relation (
	thaw_popup_id INTEGER NOT NULL, 
	cryopreserv_id INTEGER NOT NULL, 
	CONSTRAINT thaw_popup_cryopreserv_straw_relation_pkey PRIMARY KEY (thaw_popup_id, cryopreserv_id), 
	CONSTRAINT thaw_popup_cryopreserv_straw_relation_cryopreserv_id_fkey FOREIGN KEY(cryopreserv_id) REFERENCES medical_cryopreserv_straw (id) ON DELETE CASCADE, 
	CONSTRAINT thaw_popup_cryopreserv_straw_relation_thaw_popup_id_fkey FOREIGN KEY(thaw_popup_id) REFERENCES medical_thaw_popup (id) ON DELETE CASCADE
)


CREATE TABLE treatment_cause_infertility_rel (
	treatment_id INTEGER NOT NULL, 
	cause_id INTEGER NOT NULL, 
	CONSTRAINT treatment_cause_infertility_rel_pkey PRIMARY KEY (treatment_id, cause_id), 
	CONSTRAINT treatment_cause_infertility_rel_cause_id_fkey FOREIGN KEY(cause_id) REFERENCES medical_cause_infertility (id) ON DELETE CASCADE, 
	CONSTRAINT treatment_cause_infertility_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE treatment_employee_icsi_rel (
	treatment_id INTEGER NOT NULL, 
	employee_id INTEGER NOT NULL, 
	CONSTRAINT treatment_employee_icsi_rel_pkey PRIMARY KEY (treatment_id, employee_id), 
	CONSTRAINT treatment_employee_icsi_rel_employee_id_fkey FOREIGN KEY(employee_id) REFERENCES hr_employee (id) ON DELETE CASCADE, 
	CONSTRAINT treatment_employee_icsi_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE
)


CREATE TABLE treatment_test_subscriber (
	id SERIAL NOT NULL, 
	technique_id INTEGER NOT NULL, 
	date_shift INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	treatment_type VARCHAR, 
	any_index_match BOOLEAN, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT treatment_test_subscriber_pkey PRIMARY KEY (id), 
	CONSTRAINT treatment_test_subscriber_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT treatment_test_subscriber_technique_id_fkey FOREIGN KEY(technique_id) REFERENCES medical_treatment_technique (id) ON DELETE RESTRICT, 
	CONSTRAINT treatment_test_subscriber_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE treatment_type_value_rel (
	treatment_id INTEGER NOT NULL, 
	value_id INTEGER NOT NULL, 
	CONSTRAINT treatment_type_value_rel_pkey PRIMARY KEY (treatment_id, value_id), 
	CONSTRAINT treatment_type_value_rel_treatment_id_fkey FOREIGN KEY(treatment_id) REFERENCES medical_treatment (id) ON DELETE CASCADE, 
	CONSTRAINT treatment_type_value_rel_value_id_fkey FOREIGN KEY(value_id) REFERENCES selection_value (id) ON DELETE CASCADE
)


CREATE TABLE uom_category (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name JSONB NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT uom_category_pkey PRIMARY KEY (id), 
	CONSTRAINT uom_category_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT uom_category_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE uom_uom (
	id SERIAL NOT NULL, 
	category_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	uom_type VARCHAR NOT NULL, 
	name JSONB NOT NULL, 
	factor NUMERIC NOT NULL, 
	rounding NUMERIC NOT NULL, 
	active BOOLEAN, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT uom_uom_pkey PRIMARY KEY (id), 
	CONSTRAINT uom_uom_category_id_fkey FOREIGN KEY(category_id) REFERENCES uom_category (id) ON DELETE RESTRICT, 
	CONSTRAINT uom_uom_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT uom_uom_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT uom_uom_factor_gt_zero CHECK (factor <> 0::numeric), 
	CONSTRAINT uom_uom_factor_reference_is_one CHECK (uom_type::text = 'reference'::text AND factor = 1.0 OR uom_type::text <> 'reference'::text), 
	CONSTRAINT uom_uom_rounding_gt_zero CHECK (rounding > 0::numeric)
)


CREATE TABLE web_editor_converter_test (
	id SERIAL NOT NULL, 
	integer INTEGER, 
	many2one INTEGER, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	char VARCHAR, 
	selection_str VARCHAR, 
	date DATE, 
	html TEXT, 
	text TEXT, 
	numeric NUMERIC, 
	datetime TIMESTAMP WITHOUT TIME ZONE, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	float DOUBLE PRECISION, 
	"binary" BYTEA, 
	CONSTRAINT web_editor_converter_test_pkey PRIMARY KEY (id), 
	CONSTRAINT web_editor_converter_test_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT web_editor_converter_test_many2one_fkey FOREIGN KEY(many2one) REFERENCES web_editor_converter_test_sub (id) ON DELETE SET NULL, 
	CONSTRAINT web_editor_converter_test_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE web_editor_converter_test_sub (
	id SERIAL NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT web_editor_converter_test_sub_pkey PRIMARY KEY (id), 
	CONSTRAINT web_editor_converter_test_sub_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT web_editor_converter_test_sub_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE web_tour_tour (
	id SERIAL NOT NULL, 
	user_id INTEGER, 
	name VARCHAR NOT NULL, 
	CONSTRAINT web_tour_tour_pkey PRIMARY KEY (id), 
	CONSTRAINT web_tour_tour_user_id_fkey FOREIGN KEY(user_id) REFERENCES res_users (id) ON DELETE SET NULL
)


CREATE TABLE wizard_ir_model_menu_create (
	id SERIAL NOT NULL, 
	menu_id INTEGER NOT NULL, 
	create_uid INTEGER, 
	write_uid INTEGER, 
	name VARCHAR NOT NULL, 
	create_date TIMESTAMP WITHOUT TIME ZONE, 
	write_date TIMESTAMP WITHOUT TIME ZONE, 
	CONSTRAINT wizard_ir_model_menu_create_pkey PRIMARY KEY (id), 
	CONSTRAINT wizard_ir_model_menu_create_create_uid_fkey FOREIGN KEY(create_uid) REFERENCES res_users (id) ON DELETE SET NULL, 
	CONSTRAINT wizard_ir_model_menu_create_menu_id_fkey FOREIGN KEY(menu_id) REFERENCES ir_ui_menu (id) ON DELETE CASCADE, 
	CONSTRAINT wizard_ir_model_menu_create_write_uid_fkey FOREIGN KEY(write_uid) REFERENCES res_users (id) ON DELETE SET NULL
)